{"version":3,"file":"show-memory.js","sources":["../../node_modules/webgpu-memory/dist/1.x/webgpu-memory.module.js","../../src/lib/html.ts","../../src/scripts/show-memory.ts"],"sourcesContent":["/* webgpu-memory@1.5.3, license MIT */\n/* eslint-disable no-sparse-arrays */\n/*\nThis file was copied and modified from the WebGPU Conformance Test Suite\nhttps://github.com/gpuweb/cts/blob/main/src/webgpu/capability_info.ts\n\nNote: Changes include adding bytesPerBlock to depth24plus, depth24plus-stencil8\nand depth32-stencil8\n\nCopyright 2019 WebGPU CTS Contributors\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n   3. Neither the name of the copyright holder nor the names of its\n      contributors may be used to endorse or promote products derived from this\n      software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/**\n * Defaults applied to all texture format tables automatically. Used only inside\n * `formatTableWithDefaults`. This ensures keys are never missing, always explicitly `undefined`.\n *\n * All top-level keys must be defined here, or they won't be exposed at all.\n * Documentation is also written here; this makes it propagate through to the end types.\n */\nconst kFormatUniversalDefaults = {\n    /** Texel block width. */\n    blockWidth: undefined,\n    /** Texel block height. */\n    blockHeight: undefined,\n    color: undefined,\n    depth: undefined,\n    stencil: undefined,\n    /**\n     * Info when this format can be used as a color render target. The format may require a feature\n     * to actually be used as a render target. Eg: rg11b10ufloat which requires rg11b10ufloat-renderable\n     * Call {@link isTextureFormatPossiblyUsableAsColorRenderAttachment} before having a device\n     * Call {@link isTextureFormatColorRenderable}(device, format) to find out for a particular device.\n     * Use {@link kPossibleColorRenderableTextureFormats} for params.\n     */\n    colorRender: undefined,\n    /**\n     * Whether the format can possibly be used as a multisample texture. The format may require a\n     * feature to actually multisampled. Eg: rg11b10ufloat which requires rg11b10ufloat-renderable\n     * Call {@link isTextureFormatPossiblyMultisampled} before having a device\n     * Call {@link isTextureFormatMultisampled}(device, format) to find out for a particular device.\n     * Use {@link kPossibleMultisampledTextureFormats} for params.\n     */\n    multisample: undefined,\n    /** Optional feature required to use this format, or `undefined` if none. */\n    feature: undefined,\n    /** The base format for srgb formats. Specified on both srgb and equivalent non-srgb formats. */\n    baseFormat: undefined,\n    /** @deprecated Use `.color.bytes`, `.depth.bytes`, or `.stencil.bytes`. */\n    bytesPerBlock: undefined,\n    // IMPORTANT:\n    // Add new top-level keys both here and in TextureFormatInfo_TypeCheck.\n};\n/**\n * Takes `table` and applies `defaults` to every row, i.e. for each row,\n * `{ ... kUniversalDefaults, ...defaults, ...row }`.\n * This only operates at the first level; it doesn't support defaults in nested objects.\n */\nfunction formatTableWithDefaults({ defaults, table, }) {\n    return Object.fromEntries(Object.entries(table).map(([k, row]) => [\n        k,\n        { ...kFormatUniversalDefaults, ...defaults, ...row },\n    ])\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    );\n}\n/** \"plain color formats\", plus rgb9e5ufloat. */\nconst kRegularTextureFormatInfo = formatTableWithDefaults({\n    defaults: { blockWidth: 1, blockHeight: 1 },\n    table: {\n        // plain, 8 bits per component\n        r8unorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 1, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r8snorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r8uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 1, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r8sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 1, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg8unorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 2, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg8snorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg8uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg8sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba8unorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n            multisample: true,\n            baseFormat: 'rgba8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'rgba8unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n            multisample: true,\n            baseFormat: 'rgba8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba8snorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba8uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba8sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 1 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        bgra8unorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n            multisample: true,\n            baseFormat: 'bgra8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bgra8unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n            multisample: true,\n            baseFormat: 'bgra8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        // plain, 16 bits per component\n        r16uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r16sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r16float: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 2, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg16uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg16sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg16float: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 4, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba16uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba16sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba16float: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 2 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        // plain, 32 bits per component\n        r32uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: true,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r32sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: true,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        r32float: {\n            color: {\n                type: 'unfilterable-float',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: true,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 4 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg32uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg32sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg32float: {\n            color: {\n                type: 'unfilterable-float',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba32uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 16, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba32sint: {\n            color: {\n                type: 'sint',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 16, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgba32float: {\n            color: {\n                type: 'unfilterable-float',\n                copySrc: true,\n                copyDst: true,\n                storage: true,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 16, alignment: 4 },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        // plain, mixed component width, 32 bits per texel\n        rgb10a2uint: {\n            color: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rgb10a2unorm: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 4 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        rg11b10ufloat: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 4 },\n            multisample: true,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        // packed\n        rgb9e5ufloat: {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            multisample: false,\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n    },\n});\n// MAINTENANCE_TODO: Distinguishing \"sized\" and \"unsized\" depth stencil formats doesn't make sense\n// because one aspect can be sized and one can be unsized. This should be cleaned up, but is kept\n// this way during a migration phase.\nconst kSizedDepthStencilFormatInfo = formatTableWithDefaults({\n    defaults: { blockWidth: 1, blockHeight: 1, multisample: true },\n    table: {\n        stencil8: {\n            stencil: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            bytesPerBlock: 1,\n        },\n        depth16unorm: {\n            depth: {\n                type: 'depth',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 2,\n            },\n            bytesPerBlock: 2,\n        },\n        depth32float: {\n            depth: {\n                type: 'depth',\n                copySrc: true,\n                copyDst: false,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            bytesPerBlock: 4,\n        },\n    },\n});\nconst kUnsizedDepthStencilFormatInfo = formatTableWithDefaults({\n    defaults: { blockWidth: 1, blockHeight: 1, multisample: true },\n    table: {\n        depth24plus: {\n            depth: {\n                type: 'depth',\n                copySrc: false,\n                copyDst: false,\n                storage: false,\n                readWriteStorage: false,\n                bytes: undefined,\n            },\n            bytesPerBlock: 4,\n        },\n        'depth24plus-stencil8': {\n            depth: {\n                type: 'depth',\n                copySrc: false,\n                copyDst: false,\n                storage: false,\n                readWriteStorage: false,\n                bytes: undefined,\n            },\n            stencil: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            bytesPerBlock: 4,\n        },\n        'depth32float-stencil8': {\n            depth: {\n                type: 'depth',\n                copySrc: true,\n                copyDst: false,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 4,\n            },\n            stencil: {\n                type: 'uint',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 1,\n            },\n            feature: 'depth32float-stencil8',\n            bytesPerBlock: 5,\n        },\n    },\n});\nconst kBCTextureFormatInfo = formatTableWithDefaults({\n    defaults: {\n        blockWidth: 4,\n        blockHeight: 4,\n        multisample: false,\n        feature: 'texture-compression-bc',\n    },\n    table: {\n        'bc1-rgba-unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            baseFormat: 'bc1-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc1-rgba-unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            baseFormat: 'bc1-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc2-rgba-unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'bc2-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc2-rgba-unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'bc2-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc3-rgba-unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'bc3-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc3-rgba-unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'bc3-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc4-r-unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc4-r-snorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc5-rg-unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc5-rg-snorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc6h-rgb-ufloat': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc6h-rgb-float': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc7-rgba-unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'bc7-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'bc7-rgba-unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'bc7-rgba-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n    },\n});\nconst kETC2TextureFormatInfo = formatTableWithDefaults({\n    defaults: {\n        blockWidth: 4,\n        blockHeight: 4,\n        multisample: false,\n        feature: 'texture-compression-etc2',\n    },\n    table: {\n        'etc2-rgb8unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            baseFormat: 'etc2-rgb8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'etc2-rgb8unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            baseFormat: 'etc2-rgb8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'etc2-rgb8a1unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            baseFormat: 'etc2-rgb8a1unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'etc2-rgb8a1unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            baseFormat: 'etc2-rgb8a1unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'etc2-rgba8unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'etc2-rgba8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'etc2-rgba8unorm-srgb': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'etc2-rgba8unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'eac-r11unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'eac-r11snorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 8,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'eac-rg11unorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'eac-rg11snorm': {\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n    },\n});\nconst kASTCTextureFormatInfo = formatTableWithDefaults({\n    defaults: {\n        multisample: false,\n        feature: 'texture-compression-astc',\n    },\n    table: {\n        'astc-4x4-unorm': {\n            blockWidth: 4,\n            blockHeight: 4,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-4x4-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-4x4-unorm-srgb': {\n            blockWidth: 4,\n            blockHeight: 4,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-4x4-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-5x4-unorm': {\n            blockWidth: 5,\n            blockHeight: 4,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-5x4-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-5x4-unorm-srgb': {\n            blockWidth: 5,\n            blockHeight: 4,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-5x4-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-5x5-unorm': {\n            blockWidth: 5,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-5x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-5x5-unorm-srgb': {\n            blockWidth: 5,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-5x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-6x5-unorm': {\n            blockWidth: 6,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-6x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-6x5-unorm-srgb': {\n            blockWidth: 6,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-6x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-6x6-unorm': {\n            blockWidth: 6,\n            blockHeight: 6,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-6x6-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-6x6-unorm-srgb': {\n            blockWidth: 6,\n            blockHeight: 6,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-6x6-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-8x5-unorm': {\n            blockWidth: 8,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-8x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-8x5-unorm-srgb': {\n            blockWidth: 8,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-8x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-8x6-unorm': {\n            blockWidth: 8,\n            blockHeight: 6,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-8x6-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-8x6-unorm-srgb': {\n            blockWidth: 8,\n            blockHeight: 6,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-8x6-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-8x8-unorm': {\n            blockWidth: 8,\n            blockHeight: 8,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-8x8-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-8x8-unorm-srgb': {\n            blockWidth: 8,\n            blockHeight: 8,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-8x8-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x5-unorm': {\n            blockWidth: 10,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x5-unorm-srgb': {\n            blockWidth: 10,\n            blockHeight: 5,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x5-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x6-unorm': {\n            blockWidth: 10,\n            blockHeight: 6,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x6-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x6-unorm-srgb': {\n            blockWidth: 10,\n            blockHeight: 6,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x6-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x8-unorm': {\n            blockWidth: 10,\n            blockHeight: 8,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x8-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x8-unorm-srgb': {\n            blockWidth: 10,\n            blockHeight: 8,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x8-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x10-unorm': {\n            blockWidth: 10,\n            blockHeight: 10,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x10-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-10x10-unorm-srgb': {\n            blockWidth: 10,\n            blockHeight: 10,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-10x10-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-12x10-unorm': {\n            blockWidth: 12,\n            blockHeight: 10,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-12x10-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-12x10-unorm-srgb': {\n            blockWidth: 12,\n            blockHeight: 10,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-12x10-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-12x12-unorm': {\n            blockWidth: 12,\n            blockHeight: 12,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-12x12-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n        'astc-12x12-unorm-srgb': {\n            blockWidth: 12,\n            blockHeight: 12,\n            color: {\n                type: 'float',\n                copySrc: true,\n                copyDst: true,\n                storage: false,\n                readWriteStorage: false,\n                bytes: 16,\n            },\n            baseFormat: 'astc-12x12-unorm',\n            /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n        },\n    },\n});\n// Definitions for use locally.\n// MAINTENANCE_TODO: Consider generating the exports below programmatically by filtering the big list, instead\n// of using these local constants? Requires some type magic though.\n/* prettier-ignore */ ({ ...kBCTextureFormatInfo, ...kETC2TextureFormatInfo, ...kASTCTextureFormatInfo });\n/* prettier-ignore */ ({ ...kRegularTextureFormatInfo});\n/* prettier-ignore */ ({ ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo });\n/* prettier-ignore */ ({ ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo});\n/* prettier-ignore */ ({ ...kSizedDepthStencilFormatInfo, ...kUnsizedDepthStencilFormatInfo });\n/* prettier-ignore */ ({ ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo, ...kUnsizedDepthStencilFormatInfo });\n/**\n * DO NOT EXPORT THIS - functions that need info from this table should use the appropriate\n * method for their needs.\n *\n * For a list of textures formats for test parameters there are:\n *\n * Lists of formats that might require features to be enabled\n * * kPossibleColorRenderableTextureFormats\n * * kPossibleStorageTextureFormats\n * * kPossibleReadWriteStorageTextureFormats\n * * kPossibleMultisampledTextureFormats\n *\n * Lists of formats that end in -srgb\n * * kDifferentBaseFormatTextureFormats  (includes compressed textures)\n * * kDifferentBaseFormatRegularTextureFormats (does not include compressed textures)\n *\n * Formats that require a feature to use at all (mostly compressed formats)\n * * kOptionalTextureFormats\n *\n * Misc\n * * kRegularTextureFormats\n * * kSizedDepthStencilFormats\n * * kUnsizedDepthStencilFormats\n * * kCompressedTextureFormats\n * * kUncompressedTextureFormats\n * * kColorTextureFormats - color formats including compressed and sint/uint\n * * kEncodableTextureFormats - formats that TexelView supports.\n * * kSizedTextureFormats - formats that have a known size (so not depth24plus ...)\n * * kDepthStencilFormats - depth, stencil, depth-stencil\n * * kDepthTextureFormats - depth and depth-stencil\n * * kStencilTextureFormats - stencil and depth-stencil\n * * kAllTextureFormats\n *\n * If one of the list above does not work, add a new one or to filter in beforeAllSubcases you generally want to use\n * You will not know if you can actually use a texture for the given use case until the test runs and has a device.\n *\n * * isTextureFormatPossiblyUsableAsRenderAttachment\n * * isTextureFormatPossiblyUsableAsColorRenderAttachment\n * * isTextureFormatPossiblyMultisampled\n * * isTextureFormatPossiblyStorageReadable\n * * isTextureFormatPossiblyStorageReadWritable\n * * isTextureFormatPossiblyFilterableAsTextureF32\n *\n * These are also usable before or during a test\n *\n * * isColorTextureFormat\n * * isDepthTextureFormat\n * * isStencilTextureFormat\n * * isDepthOrStencilTextureFormat\n * * isEncodableTextureFormat\n * * isRegularTextureFormat\n * * isCompressedFloatTextureFormat\n * * isSintOrUintFormat\n *\n * To skip a test use the `skipIfXXX` tests in `GPUTest` if possible. Otherwise these functions\n * require a device to give a correct answer.\n *\n * * isTextureFormatUsableAsRenderAttachment\n * * isTextureFormatColorRenderable\n * * isTextureFormatResolvable\n * * isTextureFormatBlendable\n * * isTextureFormatMultisampled\n * * isTextureFormatUsableAsStorageFormat\n * * isTextureFormatUsableAsReadWriteStorageTexture\n * * isTextureFormatUsableAsStorageFormatInCreateShaderModule\n *\n * Per-GPUTextureFormat info.\n */\nconst kTextureFormatInfo = {\n    ...kRegularTextureFormatInfo,\n    ...kSizedDepthStencilFormatInfo,\n    ...kUnsizedDepthStencilFormatInfo,\n    ...kBCTextureFormatInfo,\n    ...kETC2TextureFormatInfo,\n    ...kASTCTextureFormatInfo,\n};\n\nconst webgpuMemoryIdSymbol = Symbol('webgpu-memory-object-id');\nconst deviceIdToDeviceWeakRef = new Map();\nlet nextId = 1;\nconst allWebGPUObjectsById = new Map();\nlet globalRunningTotal = 0;\nlet globalMaxTotal = 0;\n/**\n * Start tracking a resource by device\n */\nfunction addDeviceObject(device, webgpuObject, category, size) {\n    let id = webgpuObject[webgpuMemoryIdSymbol];\n    if (!id) {\n        id = nextId++;\n        webgpuObject[webgpuMemoryIdSymbol] = id;\n    }\n    const deviceId = device[webgpuMemoryIdSymbol];\n    const info = {\n        ref: new WeakRef(webgpuObject),\n        id,\n        deviceId,\n        category,\n        size,\n    };\n    allWebGPUObjectsById.set(id, info);\n    if (typeof size === 'function') {\n        size = size(webgpuObject);\n        info.oldSize = size;\n    }\n    if (!isNaN(size)) {\n        const deviceInfo = allWebGPUObjectsById.get(deviceId);\n        updateDeviceInfoRunningTotal(deviceInfo, size);\n    }\n}\nfunction updateDeviceInfoRunningTotal(deviceInfo, size) {\n    deviceInfo.runningTotal = (deviceInfo.runningTotal ?? 0) + size;\n    deviceInfo.maxTotal = Math.max(deviceInfo.maxTotal ?? 0, deviceInfo.runningTotal);\n    globalRunningTotal = globalRunningTotal + size;\n    globalMaxTotal = Math.max(globalMaxTotal, globalRunningTotal);\n}\n/**\n * Start tracking a resource by device\n */\nfunction addDeviceMem(device, webgpuObject, category, size) {\n    addDeviceObject(device, webgpuObject, category, size);\n}\n/**\n */\nfunction deviceExists(deviceId) {\n    const ref = deviceIdToDeviceWeakRef.get(deviceId);\n    return ref && !!ref.deref();\n}\n/**\n * Free an object's memory\n */\nfunction freeObjectById(id, webgpuObject) {\n    const obj = allWebGPUObjectsById.get(id);\n    const sizer = obj?.size;\n    const size = (webgpuObject && typeof sizer === 'function')\n        ? sizer(webgpuObject)\n        : sizer;\n    if (!isNaN(size)) {\n        const deviceInfo = allWebGPUObjectsById.get(obj.deviceId);\n        if (deviceInfo) {\n            updateDeviceInfoRunningTotal(deviceInfo, -size);\n        }\n    }\n    allWebGPUObjectsById.delete(id);\n}\n/**\n * Free the memory used by object.\n */\nfunction freeObject(webgpuObject) {\n    const id = webgpuObject[webgpuMemoryIdSymbol];\n    freeObjectById(id, webgpuObject);\n}\n/**\n * Gets WebGPU memory usage. If no device is passed in returns info for all devices.\n */\nfunction getWebGPUMemoryUsage(device) {\n    const memory = {\n        total: 0,\n        buffer: 0,\n        texture: 0,\n        querySet: 0,\n        canvas: 0,\n        maxTotal: 0,\n    };\n    const resources = {\n        buffer: 0,\n        texture: 0,\n        querySet: 0,\n    };\n    const info = { memory, resources };\n    const requestedDeviceId = device && device[webgpuMemoryIdSymbol];\n    const idsToDelete = [];\n    for (const [id, info] of allWebGPUObjectsById.entries()) {\n        const { ref, deviceId, category, size } = info;\n        const webgpuObject = ref.deref();\n        if (!webgpuObject || !deviceExists(deviceId)) {\n            idsToDelete.push(id);\n        }\n        else {\n            if (!requestedDeviceId || deviceId === requestedDeviceId) {\n                resources[category] = (resources[category] || 0) + 1;\n                if (size) {\n                    const numBytes = typeof size === 'function' ? size(webgpuObject) : size;\n                    memory.total += numBytes;\n                    memory[category] += numBytes;\n                }\n                if (category === 'device') {\n                    memory.maxTotal += info.maxTotal;\n                }\n            }\n        }\n    }\n    if (!device) {\n        memory.maxTotal = globalMaxTotal;\n    }\n    idsToDelete.forEach(id => freeObjectById(id));\n    return info;\n}\nfunction resetMaxTotal(device) {\n    const devices = device ? [device] : [];\n    let newGlobalMaxTotal = 0;\n    if (!device) {\n        for (const [id, { ref, category }] of allWebGPUObjectsById.entries()) {\n            if (category === 'device') {\n                const webgpuObject = ref.deref();\n                if (webgpuObject) {\n                    devices.push(webgpuObject);\n                }\n            }\n        }\n    }\n    for (const device of devices) {\n        const info = getWebGPUMemoryUsage(device);\n        const deviceId = device[webgpuMemoryIdSymbol];\n        const deviceInfo = allWebGPUObjectsById.get(deviceId);\n        if (deviceInfo) {\n            const { total } = info.memory;\n            deviceInfo.maxTotal = total;\n            newGlobalMaxTotal += total;\n        }\n    }\n    if (!device) {\n        globalRunningTotal = newGlobalMaxTotal;\n        globalMaxTotal = newGlobalMaxTotal;\n    }\n}\nfunction computeTextureMemorySize(texture) {\n    const { blockWidth, blockHeight, bytesPerBlock, } = kTextureFormatInfo[texture.format];\n    let size = 0;\n    let width = texture.width;\n    let height = texture.height;\n    let depth = texture.depthOrArrayLayers;\n    for (let level = 0; level < texture.mipLevelCount; ++level) {\n        const blocksAcross = Math.ceil(width * texture.sampleCount / blockWidth);\n        const blocksDown = Math.ceil(height * texture.sampleCount / blockHeight);\n        const numBlocks = blocksAcross * blocksDown * depth;\n        const bytesUsed = numBlocks * bytesPerBlock;\n        size += bytesUsed;\n        width = Math.max(1, width / 2 | 0);\n        height = Math.max(1, height / 2 | 0);\n        depth = texture.dimension === '3d' ? Math.max(1, depth / 2 | 0) : depth;\n    }\n    return size;\n}\nfunction addBuffer(device, buffer) {\n    const bytesUsed = buffer.size;\n    addDeviceMem(device, buffer, 'buffer', bytesUsed);\n}\nfunction removeBuffer(buffer) {\n    freeObject(buffer);\n}\nfunction addTexture(device, texture) {\n    const bytesUsed = computeTextureMemorySize(texture);\n    addDeviceMem(device, texture, 'texture', bytesUsed);\n}\nfunction removeTexture(texture) {\n    freeObject(texture);\n}\nfunction addQuerySet(device, querySet) {\n    const bytesUsed = querySet.count * 8;\n    addDeviceMem(device, querySet, 'querySet', bytesUsed);\n}\nfunction removeQuerySet(querySet) {\n    freeObject(querySet);\n}\nfunction addDevice(adapter, device) {\n    addDeviceMem(device, device, 'device', 0);\n    const id = device[webgpuMemoryIdSymbol];\n    deviceIdToDeviceWeakRef.set(id, new WeakRef(device));\n}\nfunction removeDevice(device) {\n    const id = device[webgpuMemoryIdSymbol];\n    deviceIdToDeviceWeakRef.delete(id);\n    freeObject(device);\n}\n// assuming there are, in general, 2 textures per canvas.\n// The one being displayed and the one being rendered to\nconst kTexturesPerCanvas = 2;\nfunction computeCanvasBytesUsed(context, format) {\n    const { width, height } = context.canvas;\n    return computeTextureMemorySize({\n        format,\n        width,\n        height,\n        depthOrArrayLayers: 1,\n        sampleCount: 1,\n        mipLevelCount: 1,\n        dimension: '2d',\n    }) * kTexturesPerCanvas;\n}\nfunction addContext(context, dummy, config) {\n    freeObject(context);\n    const format = config.format;\n    addDeviceMem(config.device, context, 'canvas', (context) => computeCanvasBytesUsed(context, format));\n}\nfunction removeContext(context) {\n    freeObject(context);\n}\nfunction resizeContext(context) {\n    const id = context[webgpuMemoryIdSymbol];\n    const info = allWebGPUObjectsById.get(id);\n    const deviceInfo = allWebGPUObjectsById.get(info.deviceId);\n    updateDeviceInfoRunningTotal(deviceInfo, -info.oldSize);\n    const size = info.size(context);\n    info.oldSize = size;\n    updateDeviceInfoRunningTotal(deviceInfo, size);\n}\n/**\n * Adds a wrapper function to a class method that gets called after the actual function\n */\n//function wrapFunction(object, name: string, fn) {\n//  const origFn = object.prototype[name];\n//  object.prototype[name] = function(...args) {\n//    const result = origFn.call(this, ...args);\n//    if (result !== undefined && typeof result.then === 'function') {\n//      result.then(realResult => fn(this, realResult, ...args));\n//    } else {\n//      fn(this, result, ...args);\n//    }\n//    return result;\n//  };\n//}\nfunction wrapFunction(API, fnName, fn) {\n    const origFn = API.prototype[fnName];\n    API.prototype[fnName] = function (...args) {\n        const result = origFn.call(this, ...args);\n        fn(this, result, ...args);\n        return result;\n    };\n}\nfunction wrapAsyncFunction(API, fnName, fn) {\n    const origFn = API.prototype[fnName];\n    API.prototype[fnName] = async function (...args) {\n        const result = await origFn.call(this, ...args);\n        fn(this, result, ...args);\n        return result;\n    };\n}\nfunction wrapCreationDestroy(factoryClass, objectClass, fnName, category) {\n    // @ts-ignore\n    wrapFunction(factoryClass, fnName, function (device, object) {\n        addDeviceObject(device, object, category, 0);\n    });\n    if (objectClass.prototype.destroy) {\n        wrapFunction(objectClass, 'destroy', function (object) {\n            freeObject(object);\n        });\n    }\n}\nif (typeof GPUAdapter !== 'undefined') {\n    wrapAsyncFunction(GPUAdapter, 'requestDevice', addDevice);\n    wrapFunction(GPUDevice, 'destroy', removeDevice);\n    wrapFunction(GPUCanvasContext, 'configure', addContext);\n    wrapFunction(GPUCanvasContext, 'unconfigure', removeContext);\n    wrapFunction(GPUCanvasContext, 'getCurrentTexture', resizeContext);\n    wrapFunction(GPUDevice, 'createBuffer', addBuffer);\n    wrapFunction(GPUBuffer, 'destroy', removeBuffer);\n    wrapFunction(GPUDevice, 'createTexture', addTexture);\n    wrapFunction(GPUTexture, 'destroy', removeTexture);\n    wrapFunction(GPUDevice, 'createQuerySet', addQuerySet);\n    wrapFunction(GPUQuerySet, 'destroy', removeQuerySet);\n    wrapCreationDestroy(GPUDevice, GPUSampler, 'createSampler', 'sampler');\n    wrapCreationDestroy(GPUDevice, GPUBindGroup, 'createBindGroup', 'bindGroup');\n    wrapCreationDestroy(GPUDevice, GPUBindGroupLayout, 'createBindGroupLayout', 'bindGroupLayout');\n    wrapCreationDestroy(GPUDevice, GPUPipelineLayout, 'createPipelineLayout', 'pipelineLayout');\n    wrapCreationDestroy(GPUDevice, GPUShaderModule, 'createShaderModule', 'shaderModule');\n    wrapCreationDestroy(GPUDevice, GPUComputePipeline, 'createComputePipeline', 'computePipeline');\n    wrapCreationDestroy(GPUDevice, GPURenderPipeline, 'createRenderPipeline', 'renderPipeline');\n    wrapCreationDestroy(GPUDevice, GPUComputePipeline, 'createComputePipelineAsync', 'computePipeline');\n    wrapCreationDestroy(GPUDevice, GPURenderPipeline, 'createRenderPipelineAsync', 'renderPipeline');\n    //wrapCreationDestroy(GPUDevice, GPUCommandEncoder, 'createCommandEncoder', 'commandEncoder');\n    //wrapCreationDestroy(GPUDevice, GPURenderBundleEncoder, 'createRenderBundleEncoder', 'renderBundleEncoder');\n    // problem, no device for this\n    // GPURenderBundleEncoder, 'finish'\n}\n\nexport { getWebGPUMemoryUsage, resetMaxTotal };\n//# sourceMappingURL=webgpu-memory.module.js.map\n","\nexport function addElementToWebgpuDevExtension(elem: HTMLElement) {\n  const webgpuDevExtensionElemId = 'webgpu-dev-extension';\n  let webgpuDevExtensionElem = document.getElementById(webgpuDevExtensionElemId);\n  if (!webgpuDevExtensionElem) {\n    webgpuDevExtensionElem = document.createElement('div');\n    webgpuDevExtensionElem.id = webgpuDevExtensionElemId;\n\n    Object.assign(webgpuDevExtensionElem.style, {\n      margin: '0',\n      padding: '0.25em',\n      fontSize: '8px',\n      fontFamily: 'monospace',\n      color: '#fff',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      position: 'fixed',\n      left: '0',\n      bottom: '0',\n      zIndex: 1000000,\n    });\n\n\n    document.documentElement.append(webgpuDevExtensionElem);\n  }\n  webgpuDevExtensionElem.append(elem);\n}\n\ntype EventHandler = (...args: any) => any;\ntype JsonMLAttributeValue = string | number | boolean | null | JsonMLAttributes | EventHandler | undefined;\ninterface JsonMLAttributes {\n    [key: string]: JsonMLAttributeValue;\n}\ntype JsonMLTagName = string;\ntype JsonMLTextNode = string;\ntype JsonMLChild = JsonMLElement | JsonMLTextNode | Node;\n\ntype JsonMLElement =\n    | [JsonMLTagName] // Matches structure 1\n    | [JsonMLTagName, JsonMLAttributes] // Matches structure 2\n    | [JsonMLTagName, JsonMLAttributes, ...JsonMLChild[]] // Matches structure 3\n    | [JsonMLTagName, ...JsonMLChild[]] // Matches structure 4\n    | [Node]\n    ;\n\n//type JsonML = JsonMLElement | JsonMLTextNode | JsonMLChild[];\n\n/**\n * Implements JsonML *like* element creation (http://www.jsonml.org/)\n *\n * The major difference is this takes event handlers for `on` functions\n * and supports nested attributes? Also allows elements.\n */\nexport function makeElem(elemSpec: JsonMLElement) {\n  const tag = elemSpec[0];\n  if (tag instanceof Node) {\n    return tag;\n  }\n  const elem = document.createElement(tag);\n\n  let firstChildNdx = 1;\n  const firstChild = elemSpec[1];\n  // Check if it's attributes\n  if (!(firstChild instanceof Node) && typeof firstChild !== 'string' && !Array.isArray(firstChild)) {\n    firstChildNdx = 2;\n    const attributes = firstChild as JsonMLAttributes;\n    for (const [key, value] of Object.entries(attributes)) {\n      if (typeof value === 'function' && key.startsWith('on')) {\n        const eventName = key.substring(2).toLowerCase();\n        elem.addEventListener(eventName, value, {passive: false});\n      } else if (typeof value === 'object') {\n        for (const [k, v] of Object.entries(value as JsonMLAttributes)) {\n          // @ts-expect-error just do it!\n          elem[key][k] = v;\n        }\n      // @ts-expect-error just do it!\n      } else if (elem[key] === undefined) {\n        elem.setAttribute(key, value as string);\n      } else {\n        // @ts-expect-error just do it!\n        elem[key] = value;\n      }\n    }\n  }\n\n  for (let ndx = firstChildNdx; ndx < elemSpec.length; ++ndx) {\n    const v = elemSpec[ndx];\n    if (typeof v === 'string') {\n      elem.appendChild(document.createTextNode(v));\n    } else if (v instanceof Node) {\n      elem.appendChild(v);\n    } else {\n      elem.appendChild(makeElem(v as JsonMLElement));\n    }\n  }\n  return elem;\n}","/* eslint-disable no-inner-declarations */\nimport { getWebGPUMemoryUsage, resetMaxTotal } from 'webgpu-memory';\nimport { addElementToWebgpuDevExtension } from '../lib/html.js';\n\n// eslint-disable-next-line valid-typeof\nif (typeof GPUAdapter !== undefined) {\n  console.log('webgpu-dev-extension: show-memory');\n\n  const shortSize = (function () {\n    const suffixes = ['b', 'k', 'mb', 'gb', 'tb', 'pb'];\n    return function (size: number) {\n      const suffixNdx = Math.log2(Math.abs(size)) / 10 | 0;\n      const suffix = suffixes[Math.min(suffixNdx, suffixes.length - 1)];\n      const base = 2 ** (suffixNdx * 10);\n      return `${(size / base).toFixed(0)}${suffix}`;\n    };\n  })();\n\n  let baseElem: HTMLElement;\n  let summaryContentElem: HTMLElement;\n  let infoElem: HTMLElement;\n  const deviceRefs: WeakRef<GPUDevice>[] = [];\n  let intervalId: number | undefined;\n\n  function checkMemory() {\n    const {memory, resources} = getWebGPUMemoryUsage();\n    const size = shortSize(memory.total);\n    const maxSize = shortSize(memory.maxTotal);\n    summaryContentElem.textContent = `mem: ${size} max: ${maxSize}`;\n    infoElem.textContent = `\\\nmemory:\n${Object.entries(memory).map(([k, v]) => `  ${k}: ${shortSize(v)}`).join('\\n')}\nresources:\n${Object.entries(resources).map(([k, v]) => `  ${k}: ${(v)}`).join('\\n')}\n`;\n    checkDeviceRefs();\n  }\n\n  function checkDeviceRefs() {\n    if (intervalId) {\n      if (deviceRefs.length === 0) {\n        clearInterval(intervalId);\n        // console.log('show-memory: pauses');\n      }\n    } else {\n      if (deviceRefs.length > 0) {\n        intervalId = setInterval(checkMemory, 1000);\n        // console.log('show-memory: started');\n        if (!baseElem) {\n          baseElem = document.createElement('details');\n          const summaryElem = document.createElement('summary');\n          infoElem = document.createElement('pre');\n\n          summaryContentElem = document.createElement('span');\n          Object.assign(summaryContentElem.style, {\n            cursor: 'pointer',\n          });\n\n          const resetElem = document.createElement('span');\n          Object.assign(resetElem.style, {\n            marginLeft: '0.5em',\n            cursor: 'pointer',\n            title: 'reset max memory',\n          });\n          resetElem.textContent = '🔄';\n          resetElem.addEventListener('click', e => {\n            e.preventDefault();\n            e.stopPropagation();\n            resetMaxTotal();\n            return false;\n          }, { passive: false });\n\n          baseElem.append(summaryElem);\n          baseElem.append(infoElem);\n          summaryElem.append(summaryContentElem);\n          summaryElem.append(resetElem);\n\n          addElementToWebgpuDevExtension(baseElem);\n        }\n      }\n    }\n  }\n\n  GPUAdapter.prototype.requestDevice = (function (origFn) {\n    return async function (this: GPUAdapter, ...args) {\n      const device = await origFn.call(this, ...args);\n      if (device) {\n        deviceRefs.push(new WeakRef(device));\n        checkDeviceRefs();\n      }\n      return device;\n    };\n  })(GPUAdapter.prototype.requestDevice);\n\n  GPUDevice.prototype.destroy = (function (origFn) {\n    return function (this: GPUDevice, ...args) {\n      origFn.call(this, ...args);\n      const ndx = deviceRefs.findIndex(ref => ref.deref() === this);\n      if (ndx >= 0) {\n        deviceRefs.splice(ndx, 1);\n        checkDeviceRefs();\n      }\n    };\n  })(GPUDevice.prototype.destroy);\n\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}