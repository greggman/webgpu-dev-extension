{"version":3,"file":"webgpu-compat-validation.js","sources":["../../src/scripts/webgpu-compat-validation.js"],"sourcesContent":["'use strict';\n\n(function() {\n  function warn(obj, ...args) {\n    console.log(`%cCompat:[${obj?.label || '*unlabeled*'}: ${obj?.__proto__?.constructor?.name || 'NULL'}]`, 'color: orange', ...args);\n  }\n\n  function isPlainObject(v) {\n    return !!v && Object.getPrototypeOf(v).constructor === Object.prototype.constructor;\n  }\n\n  const isTypedArray = (arr) =>\n    arr && typeof arr.length === 'number' && arr.buffer instanceof ArrayBuffer && typeof arr.byteLength === 'number';\n\n\n  // Ugh. Seems like we really need a description of each object\n  /**\n   * Attempt to deep copy an object. I'm not sure how we can do this. What we\n   * want is a snapshot of the useful data but we don't want to clone any GPU objects\n   * Unfortunately I think if an object is complex this will fail. For example\n   *\n   * ```\n   * class ColorState {\n   *   get format() { return 'rgba8unorm'; }\n   *   get blend() { return {}; }\n   *   get writeMask() { return 0xF; }\n   * }\n   * \n   * deepishClone({\n   *   fragment: {\n   *     targets: [\n   *       new ColorState(),\n   *     ],\n   *   }\n   * });\n   * ```\n   * \n   * The code below will fail to copy ColorState and will instead just keep a reference\n   * but we need a copy, otherwise it's possible ColorState will have changed. At the\n   * same time, we don't want to copy native objects nor do we really want to copy\n   * anything we don't care about. Therefore, it seems like we need a template of each\n   * type of object and only copy things on the template.\n   */\n  function deepishClone(o) {\n    if (Array.isArray(o)) {\n      return o.map(v => deepishClone(v));\n    } else if (isTypedArray(o)) {\n      return o.slice();\n    } else if (isPlainObject(o)) {\n      return Object.fromEntries(Object.entries(o).map(([k, v]) => [k, deepishClone(v)]));\n    } else {\n      return o;\n    }\n  }\n\n  function wrapFn(className, fnName, fn) {\n    const origFn = className.prototype[fnName];\n    className.prototype[fnName] = fn(origFn);\n  }\n\n  function wrapFns(obj, fns) {\n    for (const [fnName, fn] of Object.entries(fns)) {\n      wrapFn(obj, fnName, fn);\n    }\n  }\n\n  wrapFn(GPU, 'requestAdapter', function(origFn) {\n    return async function(...args) {\n      const adapter = await origFn.call(this, ...args);\n      console.log('added compat validation to adapter');\n      return adapter;\n    };\n  });\n\n  function validateFn(className, fnName, fn) {\n    wrapFn(className, fnName, function(origFn) {\n      return function(...args) {\n        const result = origFn.call(this, ...args);\n        fn(this, args, result);\n        return result;\n      };\n    });\n  }\n\n  function validateFns(obj, fns) {\n    for (const [fnName, fn] of Object.entries(fns)) {\n      validateFn(obj, fnName, fn);\n    }\n  }\n\n  const formatInfo = {\n    \"r8unorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 1 },\n    \"r8snorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 1 },\n    \"r8uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 1 },\n    \"r8sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 1 },\n    \"rg8unorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"rg8snorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"rg8uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"rg8sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"rgba8unorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rgba8unorm-srgb\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rgba8snorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rgba8uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rgba8sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"bgra8unorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"bgra8unorm-srgb\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"r16uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"r16sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"r16float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"rg16uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rg16sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rg16float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rgba16uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 8 },\n    \"rgba16sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 8 },\n    \"rgba16float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 8 },\n    \"r32uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"r32sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"r32float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rg32uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 8 },\n    \"rg32sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 8 },\n    \"rg32float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 8 },\n    \"rgba32uint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 16 },\n    \"rgba32sint\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 16 },\n    \"rgba32float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 16 },\n    \"rgb10a2unorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rg11b10ufloat\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"rgb9e5ufloat\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"stencil8\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 1 },\n    \"depth16unorm\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 2 },\n    \"depth32float\": { \"blockWidth\": 1, \"blockHeight\": 1, \"bytesPerBlock\": 4 },\n    \"depth24plus\": { \"blockWidth\": 1, \"blockHeight\": 1 },\n    \"depth24plus-stencil8\": { \"blockWidth\": 1, \"blockHeight\": 1 },\n    \"depth32float-stencil8\": { \"blockWidth\": 1, \"blockHeight\": 1 },\n    \"bc1-rgba-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"bc1-rgba-unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"bc2-rgba-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc2-rgba-unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc3-rgba-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc3-rgba-unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc4-r-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"bc4-r-snorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"bc5-rg-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc5-rg-snorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc6h-rgb-ufloat\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc6h-rgb-float\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc7-rgba-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"bc7-rgba-unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"etc2-rgb8unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"etc2-rgb8unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"etc2-rgb8a1unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"etc2-rgb8a1unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"etc2-rgba8unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"etc2-rgba8unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"eac-r11unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"eac-r11snorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 8 },\n    \"eac-rg11unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"eac-rg11snorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"astc-4x4-unorm\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"astc-4x4-unorm-srgb\": { \"blockWidth\": 4, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"astc-5x4-unorm\": { \"blockWidth\": 5, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"astc-5x4-unorm-srgb\": { \"blockWidth\": 5, \"blockHeight\": 4, \"bytesPerBlock\": 16 },\n    \"astc-5x5-unorm\": { \"blockWidth\": 5, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-5x5-unorm-srgb\": { \"blockWidth\": 5, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-6x5-unorm\": { \"blockWidth\": 6, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-6x5-unorm-srgb\": { \"blockWidth\": 6, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-6x6-unorm\": { \"blockWidth\": 6, \"blockHeight\": 6, \"bytesPerBlock\": 16 },\n    \"astc-6x6-unorm-srgb\": { \"blockWidth\": 6, \"blockHeight\": 6, \"bytesPerBlock\": 16 },\n    \"astc-8x5-unorm\": { \"blockWidth\": 8, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-8x5-unorm-srgb\": { \"blockWidth\": 8, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-8x6-unorm\": { \"blockWidth\": 8, \"blockHeight\": 6, \"bytesPerBlock\": 16 },\n    \"astc-8x6-unorm-srgb\": { \"blockWidth\": 8, \"blockHeight\": 6, \"bytesPerBlock\": 16 },\n    \"astc-8x8-unorm\": { \"blockWidth\": 8, \"blockHeight\": 8, \"bytesPerBlock\": 16 },\n    \"astc-8x8-unorm-srgb\": { \"blockWidth\": 8, \"blockHeight\": 8, \"bytesPerBlock\": 16 },\n    \"astc-10x5-unorm\": { \"blockWidth\": 10, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-10x5-unorm-srgb\": { \"blockWidth\": 10, \"blockHeight\": 5, \"bytesPerBlock\": 16 },\n    \"astc-10x6-unorm\": { \"blockWidth\": 10, \"blockHeight\": 6, \"bytesPerBlock\": 16 },\n    \"astc-10x6-unorm-srgb\": { \"blockWidth\": 10, \"blockHeight\": 6, \"bytesPerBlock\": 16 },\n    \"astc-10x8-unorm\": { \"blockWidth\": 10, \"blockHeight\": 8, \"bytesPerBlock\": 16 },\n    \"astc-10x8-unorm-srgb\": { \"blockWidth\": 10, \"blockHeight\": 8, \"bytesPerBlock\": 16 },\n    \"astc-10x10-unorm\": { \"blockWidth\": 10, \"blockHeight\": 10, \"bytesPerBlock\": 16 },\n    \"astc-10x10-unorm-srgb\": { \"blockWidth\": 10, \"blockHeight\": 10, \"bytesPerBlock\": 16 },\n    \"astc-12x10-unorm\": { \"blockWidth\": 12, \"blockHeight\": 10, \"bytesPerBlock\": 16 },\n    \"astc-12x10-unorm-srgb\": { \"blockWidth\": 12, \"blockHeight\": 10, \"bytesPerBlock\": 16 },\n    \"astc-12x12-unorm\": { \"blockWidth\": 12, \"blockHeight\": 12, \"bytesPerBlock\": 16 },\n    \"astc-12x12-unorm-srgb\": { \"blockWidth\": 12, \"blockHeight\": 12, \"bytesPerBlock\": 16 },\n  };\n\n  function isCompressedTextureFormat(format) {\n    const info = formatInfo[format];\n    // TODO: fix around about way to check\n    return (info.blockWidth > 1 || info.blockHeight > 1);\n  }\n\n  function guessViewDimension(texture) {\n    const dimension = texture.dimension || '2d';\n    switch (dimension) {\n      case '1d': return '1d';\n      case '3d': return '3d';\n      case '2d': {\n        switch (texture.depthOrArrayLayers) {\n          case 6:\n            return 'cube';\n          case 1:\n            return '2d';\n          default:\n            return '2d-array';\n        }\n      }\n      default:\n        throw new Error('unsupported texture dimension');\n    }\n  }\n\n  function normalizeViewDescriptor(texture, _desc) {\n    const desc = {\n      format: texture.format,\n      dimension: texture.dimension,\n      aspect: 'all',\n      baseMipLevel: 0,\n      mipLevelCount: texture.mipLevelCount,\n      baseArrayLayer: 0,\n      arrayLayerCount: texture.depthOrArrayLayers,\n      texture,\n      ..._desc,\n    };\n    return desc;\n  }\n\n  function getBlendComponent(blendComponent) {\n    return {\n      operation: blendComponent?.operation || 'add',\n      srcFactor: blendComponent?.srcFactor || 'one',\n      dstFactor: blendComponent?.dstFactor || 'zero',\n    };\n  }\n\n  function getBlendState(colorTargetState) {\n    return {\n      color: getBlendComponent(colorTargetState.color),\n      alpha: getBlendComponent(colorTargetState.alpha),\n      writeMask: colorTargetState.writeMask === undefined ? 0xF : colorTargetState.writeMask,\n    };\n  };\n\n  function validateSampleMask(programmableStage) {\n    if (programmableStage) {\n      if (programmableStage.module.__desc.code.includes('@builtin(sample_mask)')) {\n        warn(programmableStage.module, 'might be using @builtin(sample_mask)');\n      }\n    }\n  }\n\n  function validateRenderPipeline(device, desc, pipeline) {\n    const targets = desc.fragment?.targets;\n    if (targets && targets.length > 1) {\n      const first = JSON.stringify(getBlendState(targets[0]));\n      for (let i = 1; i < targets.length; ++i) {\n        const other = getBlendState(targets[i]);\n        if (JSON.stringify(other) !== first) {\n          warn(pipeline, 'mixed blend state');\n          break;\n        }\n      }\n    }\n    validateSampleMask(pipeline.fragment);\n    validateSampleMask(pipeline.vertex);\n    validateSampleMask(pipeline.compute);\n  }\n\n  validateFns(GPUDevice, {\n    createShaderModule(device, args, module) {\n      console.log('create shader module')\n      const [desc] = args;\n      if (module) {\n        module.__desc = deepishClone(desc);\n      }\n    },\n    createTexture(device, args, texture) {\n      const [desc] = args;\n      if (texture.format === 'bgra8unorm-srgb') {\n        warn(texture, 'use of bgra8unorm-srgb');\n      }\n      if (texture) {\n        texture.__viewDimension = desc.viewDimension || guessViewDimension(texture);\n      }\n    },\n    createRenderPipeline(device, args, pipeline) {\n      const [desc] = args;\n      validateRenderPipeline(device, desc, pipeline);\n      pipeline.__desc = deepishClone(desc);\n    },\n    createRenderPipelineAsync(device, args, pipelinePromise) {\n      const desc = deepishClone(args[0]);\n      pipelinePromise.then(pipeline => {\n        validateRenderPipeline(device, desc, pipeline);\n        pipeline.__desc = desc;\n      });\n    },\n    createBindGroup(device, args, bindGroup) {\n      const desc = deepishClone(args[0]);\n      bindGroup.__desc = desc;\n    }\n  });\n\n  function viewsSame(_a, _b) {\n    const a = _a.__desc;\n    const b = _b.__desc;\n    for (const [k, v] of Object.entries(a)) {\n      if (b[k] !== v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function viewToString(v) {\n    try {\n      return JSON.stringify(v.__desc);\n    } catch (e) {\n      return '*???*';\n    }\n  }\n\n  // range is inclusive\n  function getViewLayerSubRange(view, texture) {\n    const {dimension, baseArrayLayer, arrayLayerCount} = view.__desc;\n    switch (dimension) {\n      case '2d':\n        return [baseArrayLayer, baseArrayLayer];\n      default: {\n        const end = Math.min(texture.depthOrArrayLayers, baseArrayLayer + arrayLayerCount);\n        return [baseArrayLayer, end - 1];\n      }\n    }\n  }\n\n  function validateRenderState(encoder) {\n    const textureToView = new Map();\n    // TODO: need to know which bindGroups are actually used by current pipeline\n    for (const bindGroup of encoder.__bindGroups || []) {\n      for (const entry of bindGroup.__desc.entries) {\n        if (entry.resource instanceof GPUTextureView) {\n          const newView = entry.resource;\n          const desc = newView.__desc;\n          const texture = desc.texture;\n          if (desc.dimension !== texture.__viewDimension) {\n            warn(texture, `view dimension of texture (${desc.dimension}) different than texture.viewDimension (${texture.__viewDimension})`)\n          }\n\n          if (desc.baseArrayLayer > 0 || desc.arrayLayerCount !== texture.depthOrArrayLayers) {\n            const subRange = getViewLayerSubRange(newView, texture);\n            warn(texture, `view uses layer sub range [${subRange[0]}..${subRange[1]}] of layers [0..${texture.depthOrArrayLayers - 1}]`);\n          }\n\n          const existingView = textureToView.get(texture);\n          if (existingView) {\n            if (!viewsSame(existingView, newView)) {\n              warn(texture, `mixed views ${viewToString(existingView)} vs ${viewToString(newView)}`);\n              break;\n            }\n          } else {\n            textureToView.set(texture, entry.resource);\n          }\n        }\n      }\n    }\n  }\n\n  const renderFns = {\n    setIndexBuffer(encoder, args) {\n      const [buffer, indexFormat, offset, size] = args;\n      encoder.__indexBufferOffset = offset || 0;\n    },\n    draw: validateRenderState,\n    drawIndexed: validateRenderState,\n    drawIndirect: validateRenderState,\n    drawIndexedIndirect(encoder) {\n      validateRenderState(encoder);\n      if (encoder.__indexBufferOffset > 0) {\n        warn(encoder, 'drawIndexedIndirect: indexBufferOffset > 0');\n      }\n    },\n  };\n\n  const bindFns = {\n    setBindGroup(encoder, args) {\n      const [index, bindGroup] = args;\n      const bindGroups = encoder.__bindGroups || [];\n      encoder.__bindGroups = bindGroups;\n      bindGroups[index] = bindGroup;\n    },\n  };\n\n  validateFns(GPURenderPassEncoder, renderFns);\n  validateFns(GPURenderBundleEncoder, renderFns);\n  validateFns(GPURenderPassEncoder, {\n    executeBundles(encoder) {\n      encoder.__bindGroups = [];\n    },\n  });\n\n\n  validateFns(GPUComputePassEncoder, bindFns);\n  validateFns(GPURenderPassEncoder, bindFns);\n  validateFns(GPURenderBundleEncoder, bindFns);\n\n  validateFns(GPUComputePassEncoder, {\n    dispatchWorkgroups() {},\n    dispatchWorkgroupsIndirect() {},\n  });\n\n  function validateRenderPass(desc) {\n    for (const {view} of desc.colorAttachments) {\n      if (view.__desc.format.endsWith('16float')) {\n        warn(view.__desc.texture, `trying to render to ${view.__desc.format} format texture`);\n      }\n    }\n  }\n\n  validateFns(GPUCommandEncoder, {\n    beginRenderPass(encoder, args) {\n      const [desc] = args;\n      validateRenderPass(desc);\n    },\n    copyTextureToBuffer(encoder, args) {\n      const [src] = args;\n      if (isCompressedTextureFormat(src.texture.format)) {\n        warn(src.texture, 'attempt to copy compressed texture to buffer');\n      }\n    },\n    copyTextureToTexture(encoder, args) {\n      const [src, dst] = args;\n      if (isCompressedTextureFormat(src.texture.format)) {\n        warn(src.texture, 'attempt to copy compressed texture to texture');\n      }\n      if (isCompressedTextureFormat(dst.texture.format)) {\n        warn(dst.texture, 'attempt to copy compressed texture to texture');\n      }\n    },\n  });\n\n  validateFns(GPUTexture, {\n    createView(texture, args, view) {\n      const desc = normalizeViewDescriptor(texture, args[0]);\n      view.__desc = deepishClone(desc);\n      if (desc.dimension === 'cube-array') {\n        warn(texture, 'attempt to make cube-array view');\n      }\n    },\n  })\n\n})();\n\ndocument.currentScript?.remove();\n"],"names":[],"mappings":"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"}