{"version":3,"file":"webgpu-debug-helper.js","sources":["../../src/scripts/webgpu-debug-helper.js"],"sourcesContent":["/* webgpu-debug-helper@0.1.5, license MIT */\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n})((function () { 'use strict';\n\n    const s_objToDevice = new WeakMap();\n\n    /* eslint-disable no-inner-declarations */\n    if (typeof GPUDevice !== 'undefined') {\n        const deviceToErrorScopeStack = new WeakMap();\n        const origPushErrorScope = GPUDevice.prototype.pushErrorScope;\n        const origPopErrorScope = GPUDevice.prototype.popErrorScope;\n        function errorWrapper(device, fnName, origFn, ...args) {\n            const stack = new Error();\n            origPushErrorScope.call(device, 'validation');\n            const result = origFn.call(this, ...args);\n            const errorScopeStack = deviceToErrorScopeStack.get(device);\n            const currentErrorScope = errorScopeStack.findLast(scope => scope.filter === 'validation');\n            const promise = origPopErrorScope.call(device)\n                .then(error => {\n                // If there was a currentErrorScope and there was no error the remove our promise.\n                if (currentErrorScope) {\n                    if (!error) {\n                        const ndx = currentErrorScope.errors.indexOf(promise);\n                        if (ndx) {\n                            currentErrorScope.errors.splice(ndx, 1);\n                        }\n                    }\n                }\n                else {\n                    // there was no currentErrorScope so emit the error\n                    if (error) {\n                        device.dispatchEvent(new GPUUncapturedErrorEvent('uncapturederror', { error }));\n                    }\n                }\n                // show it\n                if (error) {\n                    console.error('WebGPU ERROR in:', fnName, args);\n                    console.error(error.message);\n                    console.error(stack.stack);\n                }\n                // return it (as a promise)\n                return error;\n            });\n            if (currentErrorScope) {\n                currentErrorScope.errors.push(promise);\n            }\n            return result;\n        }\n        function addErrorWrapper(api, fnName) {\n            const origFn = api.prototype[fnName];\n            api.prototype[fnName] = function (...args) {\n                return errorWrapper.call(this, this, fnName.toString(), origFn, ...args);\n            };\n        }\n        function addErrorWrapperWithDevice(api, fnName) {\n            const origFn = api.prototype[fnName];\n            api.prototype[fnName] = function (...args) {\n                const device = s_objToDevice.get(this);\n                return errorWrapper.call(this, device, fnName.toString(), origFn, ...args);\n            };\n        }\n        /**\n         * given a class returns all the method names.\n         */\n        function getAPIFunctionNames(api) {\n            return Object.entries(Object.getOwnPropertyDescriptors(api.prototype))\n                .filter(([, info]) => info.enumerable && typeof info.value === 'function')\n                .map(([name]) => name);\n        }\n        const skip = new Set([\n            'pushErrorScope',\n            'popErrorScope',\n            'destroy',\n        ]);\n        getAPIFunctionNames(GPUDevice)\n            .filter(n => !skip.has(n))\n            .forEach(n => addErrorWrapper(GPUDevice, n));\n        getAPIFunctionNames(GPUQueue)\n            .forEach(n => addErrorWrapperWithDevice(GPUQueue, n));\n        GPUDevice.prototype.pushErrorScope = (function (origFn) {\n            return function (filter) {\n                origFn.call(this, filter);\n                const errorScopeStack = deviceToErrorScopeStack.get(this);\n                errorScopeStack.push({ filter, errors: [] });\n            };\n        })(GPUDevice.prototype.pushErrorScope);\n        GPUDevice.prototype.popErrorScope = (function (origFn) {\n            return async function () {\n                const errorScopeStack = deviceToErrorScopeStack.get(this);\n                const errorScope = errorScopeStack.pop();\n                if (errorScope === undefined) {\n                    throw new DOMException('popErrorScope called on empty error scope stack', 'OperationError');\n                }\n                const errPromise = origFn.call(this);\n                errorScope.errors.push(errPromise);\n                const errors = await Promise.all(errorScope.errors);\n                const error = errors.find(v => !!v);\n                return error ?? null;\n            };\n        })(GPUDevice.prototype.popErrorScope);\n        GPUAdapter.prototype.requestDevice = (function (origFn) {\n            return async function (...args) {\n                const device = await origFn.call(this, ...args);\n                if (device) {\n                    device.addEventListener('uncapturederror', function (e) {\n                        console.error(e.error.message);\n                    });\n                    deviceToErrorScopeStack.set(device, []);\n                    s_objToDevice.set(device.queue, device);\n                }\n                return device;\n            };\n        })(GPUAdapter.prototype.requestDevice);\n    }\n\n    /* webgpu-utils@1.8.2, license MIT */\n    function keysOf(obj) {\n        return Object.keys(obj);\n    }\n\n    const createTypeDefs = (defs) => defs;\n    const b = createTypeDefs({\n        i32: { numElements: 1, align: 4, size: 4, type: 'i32', View: Int32Array },\n        u32: { numElements: 1, align: 4, size: 4, type: 'u32', View: Uint32Array },\n        f32: { numElements: 1, align: 4, size: 4, type: 'f32', View: Float32Array },\n        f16: { numElements: 1, align: 2, size: 2, type: 'u16', View: Uint16Array },\n        vec2f: { numElements: 2, align: 8, size: 8, type: 'f32', View: Float32Array },\n        vec2i: { numElements: 2, align: 8, size: 8, type: 'i32', View: Int32Array },\n        vec2u: { numElements: 2, align: 8, size: 8, type: 'u32', View: Uint32Array },\n        vec2h: { numElements: 2, align: 4, size: 4, type: 'u16', View: Uint16Array },\n        vec3i: { numElements: 3, align: 16, size: 12, type: 'i32', View: Int32Array },\n        vec3u: { numElements: 3, align: 16, size: 12, type: 'u32', View: Uint32Array },\n        vec3f: { numElements: 3, align: 16, size: 12, type: 'f32', View: Float32Array },\n        vec3h: { numElements: 3, align: 8, size: 6, type: 'u16', View: Uint16Array },\n        vec4i: { numElements: 4, align: 16, size: 16, type: 'i32', View: Int32Array },\n        vec4u: { numElements: 4, align: 16, size: 16, type: 'u32', View: Uint32Array },\n        vec4f: { numElements: 4, align: 16, size: 16, type: 'f32', View: Float32Array },\n        vec4h: { numElements: 4, align: 8, size: 8, type: 'u16', View: Uint16Array },\n        // AlignOf(vecR)\tSizeOf(array<vecR, C>)\n        mat2x2f: { numElements: 4, align: 8, size: 16, type: 'f32', View: Float32Array },\n        mat2x2h: { numElements: 4, align: 4, size: 8, type: 'u16', View: Uint16Array },\n        mat3x2f: { numElements: 6, align: 8, size: 24, type: 'f32', View: Float32Array },\n        mat3x2h: { numElements: 6, align: 4, size: 12, type: 'u16', View: Uint16Array },\n        mat4x2f: { numElements: 8, align: 8, size: 32, type: 'f32', View: Float32Array },\n        mat4x2h: { numElements: 8, align: 4, size: 16, type: 'u16', View: Uint16Array },\n        mat2x3f: { numElements: 8, align: 16, size: 32, pad: [3, 1], type: 'f32', View: Float32Array },\n        mat2x3h: { numElements: 8, align: 8, size: 16, pad: [3, 1], type: 'u16', View: Uint16Array },\n        mat3x3f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n        mat3x3h: { numElements: 12, align: 8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n        mat4x3f: { numElements: 16, align: 16, size: 64, pad: [3, 1], type: 'f32', View: Float32Array },\n        mat4x3h: { numElements: 16, align: 8, size: 32, pad: [3, 1], type: 'u16', View: Uint16Array },\n        mat2x4f: { numElements: 8, align: 16, size: 32, type: 'f32', View: Float32Array },\n        mat2x4h: { numElements: 8, align: 8, size: 16, type: 'u16', View: Uint16Array },\n        mat3x4f: { numElements: 12, align: 16, size: 48, pad: [3, 1], type: 'f32', View: Float32Array },\n        mat3x4h: { numElements: 12, align: 8, size: 24, pad: [3, 1], type: 'u16', View: Uint16Array },\n        mat4x4f: { numElements: 16, align: 16, size: 64, type: 'f32', View: Float32Array },\n        mat4x4h: { numElements: 16, align: 8, size: 32, type: 'u16', View: Uint16Array },\n        // Note: At least as of WGSL V1 you can not create a bool for uniform or storage.\n        // You can only create one in an internal struct. But, this code generates\n        // views of structs and it needs to not fail if the struct has a bool\n        bool: { numElements: 0, align: 1, size: 0, type: 'bool', View: Uint32Array },\n    });\n    const kWGSLTypeInfo = createTypeDefs({\n        ...b,\n        'atomic<i32>': b.i32,\n        'atomic<u32>': b.u32,\n        'vec2<i32>': b.vec2i,\n        'vec2<u32>': b.vec2u,\n        'vec2<f32>': b.vec2f,\n        'vec2<f16>': b.vec2h,\n        'vec3<i32>': b.vec3i,\n        'vec3<u32>': b.vec3u,\n        'vec3<f32>': b.vec3f,\n        'vec3<f16>': b.vec3h,\n        'vec4<i32>': b.vec4i,\n        'vec4<u32>': b.vec4u,\n        'vec4<f32>': b.vec4f,\n        'vec4<f16>': b.vec4h,\n        'mat2x2<f32>': b.mat2x2f,\n        'mat2x2<f16>': b.mat2x2h,\n        'mat3x2<f32>': b.mat3x2f,\n        'mat3x2<f16>': b.mat3x2h,\n        'mat4x2<f32>': b.mat4x2f,\n        'mat4x2<f16>': b.mat4x2h,\n        'mat2x3<f32>': b.mat2x3f,\n        'mat2x3<f16>': b.mat2x3h,\n        'mat3x3<f32>': b.mat3x3f,\n        'mat3x3<f16>': b.mat3x3h,\n        'mat4x3<f32>': b.mat4x3f,\n        'mat4x3<f16>': b.mat4x3h,\n        'mat2x4<f32>': b.mat2x4f,\n        'mat2x4<f16>': b.mat2x4h,\n        'mat3x4<f32>': b.mat3x4f,\n        'mat3x4<f16>': b.mat3x4h,\n        'mat4x4<f32>': b.mat4x4f,\n        'mat4x4<f16>': b.mat4x4h,\n    });\n    const kWGSLTypes = keysOf(kWGSLTypeInfo);\n\n    /**\n     * Set which intrinsic types to make views for.\n     *\n     * Example:\n     *\n     * Given a an array of intrinsics like this\n     * `array<vec3, 200>`\n     *\n     * The default is to create a single `Float32Array(4 * 200)`\n     * because creating 200 `Float32Array` views is not usually\n     * what you want.\n     *\n     * If you do want individual views then you'd call\n     * `setIntrinsicsToView(['vec3f'])` and now you get\n     * an array of 200 `Float32Array`s.\n     *\n     * Note: `setIntrinsicsToView` always sets ALL types. The list you\n     * pass it is the types you want views created for, all other types\n     * will be reset to do the default. In other words\n     *\n     * ```js\n     * setIntrinsicsToView(['vec3f'])\n     * setIntrinsicsToView(['vec2f'])\n     * ```\n     *\n     * Only `vec2f` will have views created. `vec3f` has been reset to the default by\n     * the second call\n     *\n     * You can pass in `true` as the 2nd parameter to make it set which types\n     * to flatten and all others will be set to have views created. For example\n     * to expand all types would be `setIntrinsicsToView([], true)`. To expand\n     * all except `f32` would be `setIntrinsicsToView(['f32'], true)`.\n     *\n     * To reset all types to the default call it with no arguments\n     *\n     * @param types array of types to make views for\n     * @param flatten whether to flatten or expand the specified types.\n     */\n    function setIntrinsicsToView(types = [], flatten) {\n        // we need to track what we've viewed because for example `vec3f` references\n        // the same info as `vec3<f32>` so we'd set one and reset the other.\n        const visited = new Set();\n        for (const type of kWGSLTypes) {\n            const info = kWGSLTypeInfo[type];\n            if (!visited.has(info)) {\n                visited.add(info);\n                info.flatten = types.includes(type) ? flatten : !flatten;\n            }\n        }\n    }\n    setIntrinsicsToView();\n\n    class ParseContext {\n        constructor() {\n            this.constants = new Map();\n            this.aliases = new Map();\n            this.structs = new Map();\n        }\n    }\n    /**\n     * @class Node\n     * @category AST\n     * Base class for AST nodes parsed from a WGSL shader.\n     */\n    class Node {\n        constructor() { }\n        get isAstNode() {\n            return true;\n        }\n        get astNodeType() {\n            return \"\";\n        }\n        evaluate(context) {\n            throw new Error(\"Cannot evaluate node\");\n        }\n        evaluateString(context) {\n            return this.evaluate(context).toString();\n        }\n        search(callback) { }\n        searchBlock(block, callback) {\n            if (block) {\n                callback(_BlockStart.instance);\n                for (const node of block) {\n                    if (node instanceof Array) {\n                        this.searchBlock(node, callback);\n                    }\n                    else {\n                        node.search(callback);\n                    }\n                }\n                callback(_BlockEnd.instance);\n            }\n        }\n    }\n    // For internal use only\n    class _BlockStart extends Node {\n    }\n    _BlockStart.instance = new _BlockStart();\n    // For internal use only\n    class _BlockEnd extends Node {\n    }\n    _BlockEnd.instance = new _BlockEnd();\n    /**\n     * @class Statement\n     * @extends Node\n     * @category AST\n     */\n    class Statement extends Node {\n        constructor() {\n            super();\n        }\n    }\n    /**\n     * @class Function\n     * @extends Statement\n     * @category AST\n     */\n    class Function extends Statement {\n        constructor(name, args, returnType, body, startLine, endLine) {\n            super();\n            this.calls = new Set();\n            this.name = name;\n            this.args = args;\n            this.returnType = returnType;\n            this.body = body;\n            this.startLine = startLine;\n            this.endLine = endLine;\n        }\n        get astNodeType() {\n            return \"function\";\n        }\n        search(callback) {\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class StaticAssert\n     * @extends Statement\n     * @category AST\n     */\n    class StaticAssert extends Statement {\n        constructor(expression) {\n            super();\n            this.expression = expression;\n        }\n        get astNodeType() {\n            return \"staticAssert\";\n        }\n        search(callback) {\n            this.expression.search(callback);\n        }\n    }\n    /**\n     * @class While\n     * @extends Statement\n     * @category AST\n     */\n    class While extends Statement {\n        constructor(condition, body) {\n            super();\n            this.condition = condition;\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"while\";\n        }\n        search(callback) {\n            this.condition.search(callback);\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class Continuing\n     * @extends Statement\n     * @category AST\n     */\n    class Continuing extends Statement {\n        constructor(body) {\n            super();\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"continuing\";\n        }\n        search(callback) {\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class For\n     * @extends Statement\n     * @category AST\n     */\n    class For extends Statement {\n        constructor(init, condition, increment, body) {\n            super();\n            this.init = init;\n            this.condition = condition;\n            this.increment = increment;\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"for\";\n        }\n        search(callback) {\n            var _a, _b, _c;\n            (_a = this.init) === null || _a === void 0 ? void 0 : _a.search(callback);\n            (_b = this.condition) === null || _b === void 0 ? void 0 : _b.search(callback);\n            (_c = this.increment) === null || _c === void 0 ? void 0 : _c.search(callback);\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class Var\n     * @extends Statement\n     * @category AST\n     */\n    class Var extends Statement {\n        constructor(name, type, storage, access, value) {\n            super();\n            this.name = name;\n            this.type = type;\n            this.storage = storage;\n            this.access = access;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"var\";\n        }\n        search(callback) {\n            var _a;\n            callback(this);\n            (_a = this.value) === null || _a === void 0 ? void 0 : _a.search(callback);\n        }\n    }\n    /**\n     * @class Override\n     * @extends Statement\n     * @category AST\n     */\n    class Override extends Statement {\n        constructor(name, type, value) {\n            super();\n            this.name = name;\n            this.type = type;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"override\";\n        }\n        search(callback) {\n            var _a;\n            (_a = this.value) === null || _a === void 0 ? void 0 : _a.search(callback);\n        }\n    }\n    /**\n     * @class Let\n     * @extends Statement\n     * @category AST\n     */\n    class Let extends Statement {\n        constructor(name, type, storage, access, value) {\n            super();\n            this.name = name;\n            this.type = type;\n            this.storage = storage;\n            this.access = access;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"let\";\n        }\n        search(callback) {\n            var _a;\n            callback(this);\n            (_a = this.value) === null || _a === void 0 ? void 0 : _a.search(callback);\n        }\n    }\n    /**\n     * @class Const\n     * @extends Statement\n     * @category AST\n     */\n    class Const extends Statement {\n        constructor(name, type, storage, access, value) {\n            super();\n            this.name = name;\n            this.type = type;\n            this.storage = storage;\n            this.access = access;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"const\";\n        }\n        evaluate(context) {\n            return this.value.evaluate(context);\n        }\n        search(callback) {\n            var _a;\n            callback(this);\n            (_a = this.value) === null || _a === void 0 ? void 0 : _a.search(callback);\n        }\n    }\n    var IncrementOperator;\n    (function (IncrementOperator) {\n        IncrementOperator[\"increment\"] = \"++\";\n        IncrementOperator[\"decrement\"] = \"--\";\n    })(IncrementOperator || (IncrementOperator = {}));\n    (function (IncrementOperator) {\n        function parse(val) {\n            const key = val;\n            if (key == \"parse\")\n                throw new Error(\"Invalid value for IncrementOperator\");\n            return IncrementOperator[key];\n        }\n        IncrementOperator.parse = parse;\n    })(IncrementOperator || (IncrementOperator = {}));\n    /**\n     * @class Increment\n     * @extends Statement\n     * @category AST\n     */\n    class Increment extends Statement {\n        constructor(operator, variable) {\n            super();\n            this.operator = operator;\n            this.variable = variable;\n        }\n        get astNodeType() {\n            return \"increment\";\n        }\n        search(callback) {\n            this.variable.search(callback);\n        }\n    }\n    var AssignOperator;\n    (function (AssignOperator) {\n        AssignOperator[\"assign\"] = \"=\";\n        AssignOperator[\"addAssign\"] = \"+=\";\n        AssignOperator[\"subtractAssin\"] = \"-=\";\n        AssignOperator[\"multiplyAssign\"] = \"*=\";\n        AssignOperator[\"divideAssign\"] = \"/=\";\n        AssignOperator[\"moduloAssign\"] = \"%=\";\n        AssignOperator[\"andAssign\"] = \"&=\";\n        AssignOperator[\"orAssign\"] = \"|=\";\n        AssignOperator[\"xorAssign\"] = \"^=\";\n        AssignOperator[\"shiftLeftAssign\"] = \"<<=\";\n        AssignOperator[\"shiftRightAssign\"] = \">>=\";\n    })(AssignOperator || (AssignOperator = {}));\n    (function (AssignOperator) {\n        function parse(val) {\n            const key = val;\n            if (key == \"parse\") {\n                throw new Error(\"Invalid value for AssignOperator\");\n            }\n            //return AssignOperator[key];\n            return key;\n        }\n        AssignOperator.parse = parse;\n    })(AssignOperator || (AssignOperator = {}));\n    /**\n     * @class Assign\n     * @extends Statement\n     * @category AST\n     */\n    class Assign extends Statement {\n        constructor(operator, variable, value) {\n            super();\n            this.operator = operator;\n            this.variable = variable;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"assign\";\n        }\n        search(callback) {\n            this.variable.search(callback);\n            this.value.search(callback);\n        }\n    }\n    /**\n     * @class Call\n     * @extends Statement\n     * @category AST\n     */\n    class Call extends Statement {\n        constructor(name, args) {\n            super();\n            this.name = name;\n            this.args = args;\n        }\n        get astNodeType() {\n            return \"call\";\n        }\n        search(callback) {\n            for (const node of this.args) {\n                node.search(callback);\n            }\n            callback(this);\n        }\n    }\n    /**\n     * @class Loop\n     * @extends Statement\n     * @category AST\n     */\n    class Loop extends Statement {\n        constructor(body, continuing) {\n            super();\n            this.body = body;\n            this.continuing = continuing;\n        }\n        get astNodeType() {\n            return \"loop\";\n        }\n    }\n    /**\n     * @class Switch\n     * @extends Statement\n     * @category AST\n     */\n    class Switch extends Statement {\n        constructor(condition, body) {\n            super();\n            this.condition = condition;\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"body\";\n        }\n    }\n    /**\n     * @class If\n     * @extends Statement\n     * @category AST\n     */\n    class If extends Statement {\n        constructor(condition, body, elseif, _else) {\n            super();\n            this.condition = condition;\n            this.body = body;\n            this.elseif = elseif;\n            this.else = _else;\n        }\n        get astNodeType() {\n            return \"if\";\n        }\n        search(callback) {\n            this.condition.search(callback);\n            this.searchBlock(this.body, callback);\n            this.searchBlock(this.elseif, callback);\n            this.searchBlock(this.else, callback);\n        }\n    }\n    /**\n     * @class Return\n     * @extends Statement\n     * @category AST\n     */\n    class Return extends Statement {\n        constructor(value) {\n            super();\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"return\";\n        }\n        search(callback) {\n            var _a;\n            (_a = this.value) === null || _a === void 0 ? void 0 : _a.search(callback);\n        }\n    }\n    /**\n     * @class Enable\n     * @extends Statement\n     * @category AST\n     */\n    class Enable extends Statement {\n        constructor(name) {\n            super();\n            this.name = name;\n        }\n        get astNodeType() {\n            return \"enable\";\n        }\n    }\n    /**\n     * @class Requires\n     * @extends Statement\n     * @category AST\n     */\n    class Requires extends Statement {\n        constructor(extensions) {\n            super();\n            this.extensions = extensions;\n        }\n        get astNodeType() {\n            return \"requires\";\n        }\n    }\n    /**\n     * @class Diagnostic\n     * @extends Statement\n     * @category AST\n     */\n    class Diagnostic extends Statement {\n        constructor(severity, rule) {\n            super();\n            this.severity = severity;\n            this.rule = rule;\n        }\n        get astNodeType() {\n            return \"diagnostic\";\n        }\n    }\n    /**\n     * @class Alias\n     * @extends Statement\n     * @category AST\n     */\n    class Alias extends Statement {\n        constructor(name, type) {\n            super();\n            this.name = name;\n            this.type = type;\n        }\n        get astNodeType() {\n            return \"alias\";\n        }\n    }\n    /**\n     * @class Discard\n     * @extends Statement\n     * @category AST\n     */\n    class Discard extends Statement {\n        constructor() {\n            super();\n        }\n        get astNodeType() {\n            return \"discard\";\n        }\n    }\n    /**\n     * @class Break\n     * @extends Statement\n     * @category AST\n     */\n    class Break extends Statement {\n        constructor() {\n            super();\n        }\n        get astNodeType() {\n            return \"break\";\n        }\n    }\n    /**\n     * @class Continue\n     * @extends Statement\n     * @category AST\n     */\n    class Continue extends Statement {\n        constructor() {\n            super();\n        }\n        get astNodeType() {\n            return \"continue\";\n        }\n    }\n    /**\n     * @class Type\n     * @extends Statement\n     * @category AST\n     */\n    class Type extends Statement {\n        constructor(name) {\n            super();\n            this.name = name;\n        }\n        get astNodeType() {\n            return \"type\";\n        }\n        get isStruct() {\n            return false;\n        }\n        get isArray() {\n            return false;\n        }\n    }\n    /**\n     * @class StructType\n     * @extends Type\n     * @category AST\n     */\n    class Struct extends Type {\n        constructor(name, members, startLine, endLine) {\n            super(name);\n            this.members = members;\n            this.startLine = startLine;\n            this.endLine = endLine;\n        }\n        get astNodeType() {\n            return \"struct\";\n        }\n        get isStruct() {\n            return true;\n        }\n        /// Return the index of the member with the given name, or -1 if not found.\n        getMemberIndex(name) {\n            for (let i = 0; i < this.members.length; i++) {\n                if (this.members[i].name == name)\n                    return i;\n            }\n            return -1;\n        }\n    }\n    /**\n     * @class TemplateType\n     * @extends Type\n     * @category AST\n     */\n    class TemplateType extends Type {\n        constructor(name, format, access) {\n            super(name);\n            this.format = format;\n            this.access = access;\n        }\n        get astNodeType() {\n            return \"template\";\n        }\n    }\n    /**\n     * @class PointerType\n     * @extends Type\n     * @category AST\n     */\n    class PointerType extends Type {\n        constructor(name, storage, type, access) {\n            super(name);\n            this.storage = storage;\n            this.type = type;\n            this.access = access;\n        }\n        get astNodeType() {\n            return \"pointer\";\n        }\n    }\n    /**\n     * @class ArrayType\n     * @extends Type\n     * @category AST\n     */\n    class ArrayType extends Type {\n        constructor(name, attributes, format, count) {\n            super(name);\n            this.attributes = attributes;\n            this.format = format;\n            this.count = count;\n        }\n        get astNodeType() {\n            return \"array\";\n        }\n        get isArray() {\n            return true;\n        }\n    }\n    /**\n     * @class SamplerType\n     * @extends Type\n     * @category AST\n     */\n    class SamplerType extends Type {\n        constructor(name, format, access) {\n            super(name);\n            this.format = format;\n            this.access = access;\n        }\n        get astNodeType() {\n            return \"sampler\";\n        }\n    }\n    /**\n     * @class Expression\n     * @extends Node\n     * @category AST\n     */\n    class Expression extends Node {\n        constructor() {\n            super();\n        }\n    }\n    /**\n     * @class StringExpr\n     * @extends Expression\n     * @category AST\n     */\n    class StringExpr extends Expression {\n        constructor(value) {\n            super();\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"stringExpr\";\n        }\n        toString() {\n            return this.value;\n        }\n        evaluateString() {\n            return this.value;\n        }\n    }\n    /**\n     * @class CreateExpr\n     * @extends Expression\n     * @category AST\n     */\n    class CreateExpr extends Expression {\n        constructor(type, args) {\n            super();\n            this.type = type;\n            this.args = args;\n        }\n        get astNodeType() {\n            return \"createExpr\";\n        }\n        search(callback) {\n            callback(this);\n            for (const node of this.args) {\n                node.search(callback);\n            }\n        }\n    }\n    /**\n     * @class CallExpr\n     * @extends Expression\n     * @category AST\n     */\n    class CallExpr extends Expression {\n        constructor(name, args) {\n            super();\n            this.name = name;\n            this.args = args;\n        }\n        get astNodeType() {\n            return \"callExpr\";\n        }\n        evaluate(context) {\n            switch (this.name) {\n                case \"abs\":\n                    return Math.abs(this.args[0].evaluate(context));\n                case \"acos\":\n                    return Math.acos(this.args[0].evaluate(context));\n                case \"acosh\":\n                    return Math.acosh(this.args[0].evaluate(context));\n                case \"asin\":\n                    return Math.asin(this.args[0].evaluate(context));\n                case \"asinh\":\n                    return Math.asinh(this.args[0].evaluate(context));\n                case \"atan\":\n                    return Math.atan(this.args[0].evaluate(context));\n                case \"atan2\":\n                    return Math.atan2(this.args[0].evaluate(context), this.args[1].evaluate(context));\n                case \"atanh\":\n                    return Math.atanh(this.args[0].evaluate(context));\n                case \"ceil\":\n                    return Math.ceil(this.args[0].evaluate(context));\n                case \"clamp\":\n                    return Math.min(Math.max(this.args[0].evaluate(context), this.args[1].evaluate(context)), this.args[2].evaluate(context));\n                case \"cos\":\n                    return Math.cos(this.args[0].evaluate(context));\n                //case \"cross\":\n                //TODO: (x[i] * y[j] - x[j] * y[i])\n                case \"degrees\":\n                    return (this.args[0].evaluate(context) * 180) / Math.PI;\n                //case \"determinant\":\n                //TODO implement\n                case \"distance\":\n                    return Math.sqrt(Math.pow(this.args[0].evaluate(context) - this.args[1].evaluate(context), 2));\n                case \"dot\":\n                //TODO: (x[i] * y[i])\n                case \"exp\":\n                    return Math.exp(this.args[0].evaluate(context));\n                case \"exp2\":\n                    return Math.pow(2, this.args[0].evaluate(context));\n                //case \"extractBits\":\n                //TODO: implement\n                //case \"firstLeadingBit\":\n                //TODO: implement\n                case \"floor\":\n                    return Math.floor(this.args[0].evaluate(context));\n                case \"fma\":\n                    return (this.args[0].evaluate(context) * this.args[1].evaluate(context) +\n                        this.args[2].evaluate(context));\n                case \"fract\":\n                    return (this.args[0].evaluate(context) -\n                        Math.floor(this.args[0].evaluate(context)));\n                //case \"frexp\":\n                //TODO: implement\n                case \"inverseSqrt\":\n                    return 1 / Math.sqrt(this.args[0].evaluate(context));\n                //case \"length\":\n                //TODO: implement\n                case \"log\":\n                    return Math.log(this.args[0].evaluate(context));\n                case \"log2\":\n                    return Math.log2(this.args[0].evaluate(context));\n                case \"max\":\n                    return Math.max(this.args[0].evaluate(context), this.args[1].evaluate(context));\n                case \"min\":\n                    return Math.min(this.args[0].evaluate(context), this.args[1].evaluate(context));\n                case \"mix\":\n                    return (this.args[0].evaluate(context) *\n                        (1 - this.args[2].evaluate(context)) +\n                        this.args[1].evaluate(context) * this.args[2].evaluate(context));\n                case \"modf\":\n                    return (this.args[0].evaluate(context) -\n                        Math.floor(this.args[0].evaluate(context)));\n                case \"pow\":\n                    return Math.pow(this.args[0].evaluate(context), this.args[1].evaluate(context));\n                case \"radians\":\n                    return (this.args[0].evaluate(context) * Math.PI) / 180;\n                case \"round\":\n                    return Math.round(this.args[0].evaluate(context));\n                case \"sign\":\n                    return Math.sign(this.args[0].evaluate(context));\n                case \"sin\":\n                    return Math.sin(this.args[0].evaluate(context));\n                case \"sinh\":\n                    return Math.sinh(this.args[0].evaluate(context));\n                case \"saturate\":\n                    return Math.min(Math.max(this.args[0].evaluate(context), 0), 1);\n                case \"smoothstep\":\n                    return (this.args[0].evaluate(context) *\n                        this.args[0].evaluate(context) *\n                        (3 - 2 * this.args[0].evaluate(context)));\n                case \"sqrt\":\n                    return Math.sqrt(this.args[0].evaluate(context));\n                case \"step\":\n                    return this.args[0].evaluate(context) < this.args[1].evaluate(context)\n                        ? 0\n                        : 1;\n                case \"tan\":\n                    return Math.tan(this.args[0].evaluate(context));\n                case \"tanh\":\n                    return Math.tanh(this.args[0].evaluate(context));\n                case \"trunc\":\n                    return Math.trunc(this.args[0].evaluate(context));\n                default:\n                    throw new Error(\"Non const function: \" + this.name);\n            }\n        }\n        search(callback) {\n            for (const node of this.args) {\n                node.search(callback);\n            }\n            callback(this);\n        }\n    }\n    /**\n     * @class VariableExpr\n     * @extends Expression\n     * @category AST\n     */\n    class VariableExpr extends Expression {\n        constructor(name) {\n            super();\n            this.name = name;\n        }\n        get astNodeType() {\n            return \"varExpr\";\n        }\n        search(callback) {\n            callback(this);\n            if (this.postfix) {\n                this.postfix.search(callback);\n            }\n        }\n        evaluate(context) {\n            const constant = context.constants.get(this.name);\n            if (!constant) {\n                throw new Error(\"Cannot evaluate node\");\n            }\n            return constant.evaluate(context);\n        }\n    }\n    /**\n     * @class ConstExpr\n     * @extends Expression\n     * @category AST\n     */\n    class ConstExpr extends Expression {\n        constructor(name, initializer) {\n            super();\n            this.name = name;\n            this.initializer = initializer;\n        }\n        get astNodeType() {\n            return \"constExpr\";\n        }\n        evaluate(context) {\n            var _a, _b;\n            if (this.initializer instanceof CreateExpr) {\n                // This is a struct constant\n                const property = (_a = this.postfix) === null || _a === void 0 ? void 0 : _a.evaluateString(context);\n                const type = (_b = this.initializer.type) === null || _b === void 0 ? void 0 : _b.name;\n                const struct = context.structs.get(type);\n                const memberIndex = struct === null || struct === void 0 ? void 0 : struct.getMemberIndex(property);\n                if (memberIndex != -1) {\n                    const value = this.initializer.args[memberIndex].evaluate(context);\n                    return value;\n                }\n                console.log(memberIndex);\n            }\n            return this.initializer.evaluate(context);\n        }\n        search(callback) {\n            this.initializer.search(callback);\n        }\n    }\n    /**\n     * @class LiteralExpr\n     * @extends Expression\n     * @category AST\n     */\n    class LiteralExpr extends Expression {\n        constructor(value) {\n            super();\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"literalExpr\";\n        }\n        evaluate() {\n            return this.value;\n        }\n    }\n    /**\n     * @class BitcastExpr\n     * @extends Expression\n     * @category AST\n     */\n    class BitcastExpr extends Expression {\n        constructor(type, value) {\n            super();\n            this.type = type;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"bitcastExpr\";\n        }\n        search(callback) {\n            this.value.search(callback);\n        }\n    }\n    /**\n     * @class TypecastExpr\n     * @extends Expression\n     * @category AST\n     */\n    class TypecastExpr extends Expression {\n        constructor(type, args) {\n            super();\n            this.type = type;\n            this.args = args;\n        }\n        get astNodeType() {\n            return \"typecastExpr\";\n        }\n        evaluate(context) {\n            return this.args[0].evaluate(context);\n        }\n        search(callback) {\n            this.searchBlock(this.args, callback);\n        }\n    }\n    /**\n     * @class GroupingExpr\n     * @extends Expression\n     * @category AST\n     */\n    class GroupingExpr extends Expression {\n        constructor(contents) {\n            super();\n            this.contents = contents;\n        }\n        get astNodeType() {\n            return \"groupExpr\";\n        }\n        evaluate(context) {\n            return this.contents[0].evaluate(context);\n        }\n        search(callback) {\n            this.searchBlock(this.contents, callback);\n        }\n    }\n    /**\n     * @class ArrayIndex\n     * @extends Expression\n     * @category AST\n     */\n    class ArrayIndex extends Expression {\n        constructor(index) {\n            super();\n            this.index = index;\n        }\n        search(callback) {\n            this.index.search(callback);\n        }\n    }\n    /**\n     * @class Operator\n     * @extends Expression\n     * @category AST\n     */\n    class Operator extends Expression {\n        constructor() {\n            super();\n        }\n    }\n    /**\n     * @class UnaryOperator\n     * @extends Operator\n     * @category AST\n     * @property {string} operator +, -, !, ~\n     */\n    class UnaryOperator extends Operator {\n        constructor(operator, right) {\n            super();\n            this.operator = operator;\n            this.right = right;\n        }\n        get astNodeType() {\n            return \"unaryOp\";\n        }\n        evaluate(context) {\n            switch (this.operator) {\n                case \"+\":\n                    return this.right.evaluate(context);\n                case \"-\":\n                    return -this.right.evaluate(context);\n                case \"!\":\n                    return this.right.evaluate(context) ? 0 : 1;\n                case \"~\":\n                    return ~this.right.evaluate(context);\n                default:\n                    throw new Error(\"Unknown unary operator: \" + this.operator);\n            }\n        }\n        search(callback) {\n            this.right.search(callback);\n        }\n    }\n    /**\n     * @class BinaryOperator\n     * @extends Operator\n     * @category AST\n     * @property {string} operator +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||\n     */\n    class BinaryOperator extends Operator {\n        constructor(operator, left, right) {\n            super();\n            this.operator = operator;\n            this.left = left;\n            this.right = right;\n        }\n        get astNodeType() {\n            return \"binaryOp\";\n        }\n        evaluate(context) {\n            switch (this.operator) {\n                case \"+\":\n                    return this.left.evaluate(context) + this.right.evaluate(context);\n                case \"-\":\n                    return this.left.evaluate(context) - this.right.evaluate(context);\n                case \"*\":\n                    return this.left.evaluate(context) * this.right.evaluate(context);\n                case \"/\":\n                    return this.left.evaluate(context) / this.right.evaluate(context);\n                case \"%\":\n                    return this.left.evaluate(context) % this.right.evaluate(context);\n                case \"==\":\n                    return this.left.evaluate(context) == this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \"!=\":\n                    return this.left.evaluate(context) != this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \"<\":\n                    return this.left.evaluate(context) < this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \">\":\n                    return this.left.evaluate(context) > this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \"<=\":\n                    return this.left.evaluate(context) <= this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \">=\":\n                    return this.left.evaluate(context) >= this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \"&&\":\n                    return this.left.evaluate(context) && this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                case \"||\":\n                    return this.left.evaluate(context) || this.right.evaluate(context)\n                        ? 1\n                        : 0;\n                default:\n                    throw new Error(`Unknown operator ${this.operator}`);\n            }\n        }\n        search(callback) {\n            this.left.search(callback);\n            this.right.search(callback);\n        }\n    }\n    /**\n     * @class SwitchCase\n     * @extends Node\n     * @category AST\n     */\n    class SwitchCase extends Node {\n        constructor() {\n            super();\n        }\n    }\n    /**\n     * @class Case\n     * @extends SwitchCase\n     * @category AST\n     */\n    class Case extends SwitchCase {\n        constructor(selector, body) {\n            super();\n            this.selector = selector;\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"case\";\n        }\n        search(callback) {\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class Default\n     * @extends SwitchCase\n     * @category AST\n     */\n    class Default extends SwitchCase {\n        constructor(body) {\n            super();\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"default\";\n        }\n        search(callback) {\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class Argument\n     * @extends Node\n     * @category AST\n     */\n    class Argument extends Node {\n        constructor(name, type, attributes) {\n            super();\n            this.name = name;\n            this.type = type;\n            this.attributes = attributes;\n        }\n        get astNodeType() {\n            return \"argument\";\n        }\n    }\n    /**\n     * @class ElseIf\n     * @extends Node\n     * @category AST\n     */\n    class ElseIf extends Node {\n        constructor(condition, body) {\n            super();\n            this.condition = condition;\n            this.body = body;\n        }\n        get astNodeType() {\n            return \"elseif\";\n        }\n        search(callback) {\n            this.condition.search(callback);\n            this.searchBlock(this.body, callback);\n        }\n    }\n    /**\n     * @class Member\n     * @extends Node\n     * @category AST\n     */\n    class Member extends Node {\n        constructor(name, type, attributes) {\n            super();\n            this.name = name;\n            this.type = type;\n            this.attributes = attributes;\n        }\n        get astNodeType() {\n            return \"member\";\n        }\n    }\n    /**\n     * @class Attribute\n     * @extends Node\n     * @category AST\n     */\n    class Attribute extends Node {\n        constructor(name, value) {\n            super();\n            this.name = name;\n            this.value = value;\n        }\n        get astNodeType() {\n            return \"attribute\";\n        }\n    }\n\n    var _a;\n    var TokenClass;\n    (function (TokenClass) {\n        TokenClass[TokenClass[\"token\"] = 0] = \"token\";\n        TokenClass[TokenClass[\"keyword\"] = 1] = \"keyword\";\n        TokenClass[TokenClass[\"reserved\"] = 2] = \"reserved\";\n    })(TokenClass || (TokenClass = {}));\n    class TokenType {\n        constructor(name, type, rule) {\n            this.name = name;\n            this.type = type;\n            this.rule = rule;\n        }\n        toString() {\n            return this.name;\n        }\n    }\n    /// Catalog of defined token types, keywords, and reserved words.\n    class TokenTypes {\n    }\n    _a = TokenTypes;\n    TokenTypes.none = new TokenType(\"\", TokenClass.reserved, \"\");\n    TokenTypes.eof = new TokenType(\"EOF\", TokenClass.token, \"\");\n    TokenTypes.reserved = {\n        asm: new TokenType(\"asm\", TokenClass.reserved, \"asm\"),\n        bf16: new TokenType(\"bf16\", TokenClass.reserved, \"bf16\"),\n        do: new TokenType(\"do\", TokenClass.reserved, \"do\"),\n        enum: new TokenType(\"enum\", TokenClass.reserved, \"enum\"),\n        f16: new TokenType(\"f16\", TokenClass.reserved, \"f16\"),\n        f64: new TokenType(\"f64\", TokenClass.reserved, \"f64\"),\n        handle: new TokenType(\"handle\", TokenClass.reserved, \"handle\"),\n        i8: new TokenType(\"i8\", TokenClass.reserved, \"i8\"),\n        i16: new TokenType(\"i16\", TokenClass.reserved, \"i16\"),\n        i64: new TokenType(\"i64\", TokenClass.reserved, \"i64\"),\n        mat: new TokenType(\"mat\", TokenClass.reserved, \"mat\"),\n        premerge: new TokenType(\"premerge\", TokenClass.reserved, \"premerge\"),\n        regardless: new TokenType(\"regardless\", TokenClass.reserved, \"regardless\"),\n        typedef: new TokenType(\"typedef\", TokenClass.reserved, \"typedef\"),\n        u8: new TokenType(\"u8\", TokenClass.reserved, \"u8\"),\n        u16: new TokenType(\"u16\", TokenClass.reserved, \"u16\"),\n        u64: new TokenType(\"u64\", TokenClass.reserved, \"u64\"),\n        unless: new TokenType(\"unless\", TokenClass.reserved, \"unless\"),\n        using: new TokenType(\"using\", TokenClass.reserved, \"using\"),\n        vec: new TokenType(\"vec\", TokenClass.reserved, \"vec\"),\n        void: new TokenType(\"void\", TokenClass.reserved, \"void\"),\n    };\n    TokenTypes.keywords = {\n        array: new TokenType(\"array\", TokenClass.keyword, \"array\"),\n        atomic: new TokenType(\"atomic\", TokenClass.keyword, \"atomic\"),\n        bool: new TokenType(\"bool\", TokenClass.keyword, \"bool\"),\n        f32: new TokenType(\"f32\", TokenClass.keyword, \"f32\"),\n        i32: new TokenType(\"i32\", TokenClass.keyword, \"i32\"),\n        mat2x2: new TokenType(\"mat2x2\", TokenClass.keyword, \"mat2x2\"),\n        mat2x3: new TokenType(\"mat2x3\", TokenClass.keyword, \"mat2x3\"),\n        mat2x4: new TokenType(\"mat2x4\", TokenClass.keyword, \"mat2x4\"),\n        mat3x2: new TokenType(\"mat3x2\", TokenClass.keyword, \"mat3x2\"),\n        mat3x3: new TokenType(\"mat3x3\", TokenClass.keyword, \"mat3x3\"),\n        mat3x4: new TokenType(\"mat3x4\", TokenClass.keyword, \"mat3x4\"),\n        mat4x2: new TokenType(\"mat4x2\", TokenClass.keyword, \"mat4x2\"),\n        mat4x3: new TokenType(\"mat4x3\", TokenClass.keyword, \"mat4x3\"),\n        mat4x4: new TokenType(\"mat4x4\", TokenClass.keyword, \"mat4x4\"),\n        ptr: new TokenType(\"ptr\", TokenClass.keyword, \"ptr\"),\n        sampler: new TokenType(\"sampler\", TokenClass.keyword, \"sampler\"),\n        sampler_comparison: new TokenType(\"sampler_comparison\", TokenClass.keyword, \"sampler_comparison\"),\n        struct: new TokenType(\"struct\", TokenClass.keyword, \"struct\"),\n        texture_1d: new TokenType(\"texture_1d\", TokenClass.keyword, \"texture_1d\"),\n        texture_2d: new TokenType(\"texture_2d\", TokenClass.keyword, \"texture_2d\"),\n        texture_2d_array: new TokenType(\"texture_2d_array\", TokenClass.keyword, \"texture_2d_array\"),\n        texture_3d: new TokenType(\"texture_3d\", TokenClass.keyword, \"texture_3d\"),\n        texture_cube: new TokenType(\"texture_cube\", TokenClass.keyword, \"texture_cube\"),\n        texture_cube_array: new TokenType(\"texture_cube_array\", TokenClass.keyword, \"texture_cube_array\"),\n        texture_multisampled_2d: new TokenType(\"texture_multisampled_2d\", TokenClass.keyword, \"texture_multisampled_2d\"),\n        texture_storage_1d: new TokenType(\"texture_storage_1d\", TokenClass.keyword, \"texture_storage_1d\"),\n        texture_storage_2d: new TokenType(\"texture_storage_2d\", TokenClass.keyword, \"texture_storage_2d\"),\n        texture_storage_2d_array: new TokenType(\"texture_storage_2d_array\", TokenClass.keyword, \"texture_storage_2d_array\"),\n        texture_storage_3d: new TokenType(\"texture_storage_3d\", TokenClass.keyword, \"texture_storage_3d\"),\n        texture_depth_2d: new TokenType(\"texture_depth_2d\", TokenClass.keyword, \"texture_depth_2d\"),\n        texture_depth_2d_array: new TokenType(\"texture_depth_2d_array\", TokenClass.keyword, \"texture_depth_2d_array\"),\n        texture_depth_cube: new TokenType(\"texture_depth_cube\", TokenClass.keyword, \"texture_depth_cube\"),\n        texture_depth_cube_array: new TokenType(\"texture_depth_cube_array\", TokenClass.keyword, \"texture_depth_cube_array\"),\n        texture_depth_multisampled_2d: new TokenType(\"texture_depth_multisampled_2d\", TokenClass.keyword, \"texture_depth_multisampled_2d\"),\n        texture_external: new TokenType(\"texture_external\", TokenClass.keyword, \"texture_external\"),\n        u32: new TokenType(\"u32\", TokenClass.keyword, \"u32\"),\n        vec2: new TokenType(\"vec2\", TokenClass.keyword, \"vec2\"),\n        vec3: new TokenType(\"vec3\", TokenClass.keyword, \"vec3\"),\n        vec4: new TokenType(\"vec4\", TokenClass.keyword, \"vec4\"),\n        bitcast: new TokenType(\"bitcast\", TokenClass.keyword, \"bitcast\"),\n        block: new TokenType(\"block\", TokenClass.keyword, \"block\"),\n        break: new TokenType(\"break\", TokenClass.keyword, \"break\"),\n        case: new TokenType(\"case\", TokenClass.keyword, \"case\"),\n        continue: new TokenType(\"continue\", TokenClass.keyword, \"continue\"),\n        continuing: new TokenType(\"continuing\", TokenClass.keyword, \"continuing\"),\n        default: new TokenType(\"default\", TokenClass.keyword, \"default\"),\n        diagnostic: new TokenType(\"diagnostic\", TokenClass.keyword, \"diagnostic\"),\n        discard: new TokenType(\"discard\", TokenClass.keyword, \"discard\"),\n        else: new TokenType(\"else\", TokenClass.keyword, \"else\"),\n        enable: new TokenType(\"enable\", TokenClass.keyword, \"enable\"),\n        fallthrough: new TokenType(\"fallthrough\", TokenClass.keyword, \"fallthrough\"),\n        false: new TokenType(\"false\", TokenClass.keyword, \"false\"),\n        fn: new TokenType(\"fn\", TokenClass.keyword, \"fn\"),\n        for: new TokenType(\"for\", TokenClass.keyword, \"for\"),\n        function: new TokenType(\"function\", TokenClass.keyword, \"function\"),\n        if: new TokenType(\"if\", TokenClass.keyword, \"if\"),\n        let: new TokenType(\"let\", TokenClass.keyword, \"let\"),\n        const: new TokenType(\"const\", TokenClass.keyword, \"const\"),\n        loop: new TokenType(\"loop\", TokenClass.keyword, \"loop\"),\n        while: new TokenType(\"while\", TokenClass.keyword, \"while\"),\n        private: new TokenType(\"private\", TokenClass.keyword, \"private\"),\n        read: new TokenType(\"read\", TokenClass.keyword, \"read\"),\n        read_write: new TokenType(\"read_write\", TokenClass.keyword, \"read_write\"),\n        return: new TokenType(\"return\", TokenClass.keyword, \"return\"),\n        requires: new TokenType(\"requires\", TokenClass.keyword, \"requires\"),\n        storage: new TokenType(\"storage\", TokenClass.keyword, \"storage\"),\n        switch: new TokenType(\"switch\", TokenClass.keyword, \"switch\"),\n        true: new TokenType(\"true\", TokenClass.keyword, \"true\"),\n        alias: new TokenType(\"alias\", TokenClass.keyword, \"alias\"),\n        type: new TokenType(\"type\", TokenClass.keyword, \"type\"),\n        uniform: new TokenType(\"uniform\", TokenClass.keyword, \"uniform\"),\n        var: new TokenType(\"var\", TokenClass.keyword, \"var\"),\n        override: new TokenType(\"override\", TokenClass.keyword, \"override\"),\n        workgroup: new TokenType(\"workgroup\", TokenClass.keyword, \"workgroup\"),\n        write: new TokenType(\"write\", TokenClass.keyword, \"write\"),\n        r8unorm: new TokenType(\"r8unorm\", TokenClass.keyword, \"r8unorm\"),\n        r8snorm: new TokenType(\"r8snorm\", TokenClass.keyword, \"r8snorm\"),\n        r8uint: new TokenType(\"r8uint\", TokenClass.keyword, \"r8uint\"),\n        r8sint: new TokenType(\"r8sint\", TokenClass.keyword, \"r8sint\"),\n        r16uint: new TokenType(\"r16uint\", TokenClass.keyword, \"r16uint\"),\n        r16sint: new TokenType(\"r16sint\", TokenClass.keyword, \"r16sint\"),\n        r16float: new TokenType(\"r16float\", TokenClass.keyword, \"r16float\"),\n        rg8unorm: new TokenType(\"rg8unorm\", TokenClass.keyword, \"rg8unorm\"),\n        rg8snorm: new TokenType(\"rg8snorm\", TokenClass.keyword, \"rg8snorm\"),\n        rg8uint: new TokenType(\"rg8uint\", TokenClass.keyword, \"rg8uint\"),\n        rg8sint: new TokenType(\"rg8sint\", TokenClass.keyword, \"rg8sint\"),\n        r32uint: new TokenType(\"r32uint\", TokenClass.keyword, \"r32uint\"),\n        r32sint: new TokenType(\"r32sint\", TokenClass.keyword, \"r32sint\"),\n        r32float: new TokenType(\"r32float\", TokenClass.keyword, \"r32float\"),\n        rg16uint: new TokenType(\"rg16uint\", TokenClass.keyword, \"rg16uint\"),\n        rg16sint: new TokenType(\"rg16sint\", TokenClass.keyword, \"rg16sint\"),\n        rg16float: new TokenType(\"rg16float\", TokenClass.keyword, \"rg16float\"),\n        rgba8unorm: new TokenType(\"rgba8unorm\", TokenClass.keyword, \"rgba8unorm\"),\n        rgba8unorm_srgb: new TokenType(\"rgba8unorm_srgb\", TokenClass.keyword, \"rgba8unorm_srgb\"),\n        rgba8snorm: new TokenType(\"rgba8snorm\", TokenClass.keyword, \"rgba8snorm\"),\n        rgba8uint: new TokenType(\"rgba8uint\", TokenClass.keyword, \"rgba8uint\"),\n        rgba8sint: new TokenType(\"rgba8sint\", TokenClass.keyword, \"rgba8sint\"),\n        bgra8unorm: new TokenType(\"bgra8unorm\", TokenClass.keyword, \"bgra8unorm\"),\n        bgra8unorm_srgb: new TokenType(\"bgra8unorm_srgb\", TokenClass.keyword, \"bgra8unorm_srgb\"),\n        rgb10a2unorm: new TokenType(\"rgb10a2unorm\", TokenClass.keyword, \"rgb10a2unorm\"),\n        rg11b10float: new TokenType(\"rg11b10float\", TokenClass.keyword, \"rg11b10float\"),\n        rg32uint: new TokenType(\"rg32uint\", TokenClass.keyword, \"rg32uint\"),\n        rg32sint: new TokenType(\"rg32sint\", TokenClass.keyword, \"rg32sint\"),\n        rg32float: new TokenType(\"rg32float\", TokenClass.keyword, \"rg32float\"),\n        rgba16uint: new TokenType(\"rgba16uint\", TokenClass.keyword, \"rgba16uint\"),\n        rgba16sint: new TokenType(\"rgba16sint\", TokenClass.keyword, \"rgba16sint\"),\n        rgba16float: new TokenType(\"rgba16float\", TokenClass.keyword, \"rgba16float\"),\n        rgba32uint: new TokenType(\"rgba32uint\", TokenClass.keyword, \"rgba32uint\"),\n        rgba32sint: new TokenType(\"rgba32sint\", TokenClass.keyword, \"rgba32sint\"),\n        rgba32float: new TokenType(\"rgba32float\", TokenClass.keyword, \"rgba32float\"),\n        static_assert: new TokenType(\"static_assert\", TokenClass.keyword, \"static_assert\"),\n        // WGSL grammar has a few keywords that have different token names than the strings they\n        // represent. Aliasing them here.\n        /*int32: new TokenType(\"i32\", TokenClass.keyword, \"i32\"),\n            uint32: new TokenType(\"u32\", TokenClass.keyword, \"u32\"),\n            float32: new TokenType(\"f32\", TokenClass.keyword, \"f32\"),\n            pointer: new TokenType(\"ptr\", TokenClass.keyword, \"ptr\"),*/\n    };\n    TokenTypes.tokens = {\n        decimal_float_literal: new TokenType(\"decimal_float_literal\", TokenClass.token, /((-?[0-9]*\\.[0-9]+|-?[0-9]+\\.[0-9]*)((e|E)(\\+|-)?[0-9]+)?f?)|(-?[0-9]+(e|E)(\\+|-)?[0-9]+f?)|([0-9]+f)/),\n        hex_float_literal: new TokenType(\"hex_float_literal\", TokenClass.token, /-?0x((([0-9a-fA-F]*\\.[0-9a-fA-F]+|[0-9a-fA-F]+\\.[0-9a-fA-F]*)((p|P)(\\+|-)?[0-9]+f?)?)|([0-9a-fA-F]+(p|P)(\\+|-)?[0-9]+f?))/),\n        int_literal: new TokenType(\"int_literal\", TokenClass.token, /-?0x[0-9a-fA-F]+|0i?|-?[1-9][0-9]*i?/),\n        uint_literal: new TokenType(\"uint_literal\", TokenClass.token, /0x[0-9a-fA-F]+u|0u|[1-9][0-9]*u/),\n        ident: new TokenType(\"ident\", TokenClass.token, /[_a-zA-Z][0-9a-zA-Z_]*/),\n        and: new TokenType(\"and\", TokenClass.token, \"&\"),\n        and_and: new TokenType(\"and_and\", TokenClass.token, \"&&\"),\n        arrow: new TokenType(\"arrow \", TokenClass.token, \"->\"),\n        attr: new TokenType(\"attr\", TokenClass.token, \"@\"),\n        attr_left: new TokenType(\"attr_left\", TokenClass.token, \"[[\"),\n        attr_right: new TokenType(\"attr_right\", TokenClass.token, \"]]\"),\n        forward_slash: new TokenType(\"forward_slash\", TokenClass.token, \"/\"),\n        bang: new TokenType(\"bang\", TokenClass.token, \"!\"),\n        bracket_left: new TokenType(\"bracket_left\", TokenClass.token, \"[\"),\n        bracket_right: new TokenType(\"bracket_right\", TokenClass.token, \"]\"),\n        brace_left: new TokenType(\"brace_left\", TokenClass.token, \"{\"),\n        brace_right: new TokenType(\"brace_right\", TokenClass.token, \"}\"),\n        colon: new TokenType(\"colon\", TokenClass.token, \":\"),\n        comma: new TokenType(\"comma\", TokenClass.token, \",\"),\n        equal: new TokenType(\"equal\", TokenClass.token, \"=\"),\n        equal_equal: new TokenType(\"equal_equal\", TokenClass.token, \"==\"),\n        not_equal: new TokenType(\"not_equal\", TokenClass.token, \"!=\"),\n        greater_than: new TokenType(\"greater_than\", TokenClass.token, \">\"),\n        greater_than_equal: new TokenType(\"greater_than_equal\", TokenClass.token, \">=\"),\n        shift_right: new TokenType(\"shift_right\", TokenClass.token, \">>\"),\n        less_than: new TokenType(\"less_than\", TokenClass.token, \"<\"),\n        less_than_equal: new TokenType(\"less_than_equal\", TokenClass.token, \"<=\"),\n        shift_left: new TokenType(\"shift_left\", TokenClass.token, \"<<\"),\n        modulo: new TokenType(\"modulo\", TokenClass.token, \"%\"),\n        minus: new TokenType(\"minus\", TokenClass.token, \"-\"),\n        minus_minus: new TokenType(\"minus_minus\", TokenClass.token, \"--\"),\n        period: new TokenType(\"period\", TokenClass.token, \".\"),\n        plus: new TokenType(\"plus\", TokenClass.token, \"+\"),\n        plus_plus: new TokenType(\"plus_plus\", TokenClass.token, \"++\"),\n        or: new TokenType(\"or\", TokenClass.token, \"|\"),\n        or_or: new TokenType(\"or_or\", TokenClass.token, \"||\"),\n        paren_left: new TokenType(\"paren_left\", TokenClass.token, \"(\"),\n        paren_right: new TokenType(\"paren_right\", TokenClass.token, \")\"),\n        semicolon: new TokenType(\"semicolon\", TokenClass.token, \";\"),\n        star: new TokenType(\"star\", TokenClass.token, \"*\"),\n        tilde: new TokenType(\"tilde\", TokenClass.token, \"~\"),\n        underscore: new TokenType(\"underscore\", TokenClass.token, \"_\"),\n        xor: new TokenType(\"xor\", TokenClass.token, \"^\"),\n        plus_equal: new TokenType(\"plus_equal\", TokenClass.token, \"+=\"),\n        minus_equal: new TokenType(\"minus_equal\", TokenClass.token, \"-=\"),\n        times_equal: new TokenType(\"times_equal\", TokenClass.token, \"*=\"),\n        division_equal: new TokenType(\"division_equal\", TokenClass.token, \"/=\"),\n        modulo_equal: new TokenType(\"modulo_equal\", TokenClass.token, \"%=\"),\n        and_equal: new TokenType(\"and_equal\", TokenClass.token, \"&=\"),\n        or_equal: new TokenType(\"or_equal\", TokenClass.token, \"|=\"),\n        xor_equal: new TokenType(\"xor_equal\", TokenClass.token, \"^=\"),\n        shift_right_equal: new TokenType(\"shift_right_equal\", TokenClass.token, \">>=\"),\n        shift_left_equal: new TokenType(\"shift_left_equal\", TokenClass.token, \"<<=\"),\n    };\n    TokenTypes.simpleTokens = {\n        \"@\": _a.tokens.attr,\n        \"{\": _a.tokens.brace_left,\n        \"}\": _a.tokens.brace_right,\n        \":\": _a.tokens.colon,\n        \",\": _a.tokens.comma,\n        \"(\": _a.tokens.paren_left,\n        \")\": _a.tokens.paren_right,\n        \";\": _a.tokens.semicolon,\n    };\n    TokenTypes.literalTokens = {\n        \"&\": _a.tokens.and,\n        \"&&\": _a.tokens.and_and,\n        \"->\": _a.tokens.arrow,\n        \"[[\": _a.tokens.attr_left,\n        \"]]\": _a.tokens.attr_right,\n        \"/\": _a.tokens.forward_slash,\n        \"!\": _a.tokens.bang,\n        \"[\": _a.tokens.bracket_left,\n        \"]\": _a.tokens.bracket_right,\n        \"=\": _a.tokens.equal,\n        \"==\": _a.tokens.equal_equal,\n        \"!=\": _a.tokens.not_equal,\n        \">\": _a.tokens.greater_than,\n        \">=\": _a.tokens.greater_than_equal,\n        \">>\": _a.tokens.shift_right,\n        \"<\": _a.tokens.less_than,\n        \"<=\": _a.tokens.less_than_equal,\n        \"<<\": _a.tokens.shift_left,\n        \"%\": _a.tokens.modulo,\n        \"-\": _a.tokens.minus,\n        \"--\": _a.tokens.minus_minus,\n        \".\": _a.tokens.period,\n        \"+\": _a.tokens.plus,\n        \"++\": _a.tokens.plus_plus,\n        \"|\": _a.tokens.or,\n        \"||\": _a.tokens.or_or,\n        \"*\": _a.tokens.star,\n        \"~\": _a.tokens.tilde,\n        \"_\": _a.tokens.underscore,\n        \"^\": _a.tokens.xor,\n        \"+=\": _a.tokens.plus_equal,\n        \"-=\": _a.tokens.minus_equal,\n        \"*=\": _a.tokens.times_equal,\n        \"/=\": _a.tokens.division_equal,\n        \"%=\": _a.tokens.modulo_equal,\n        \"&=\": _a.tokens.and_equal,\n        \"|=\": _a.tokens.or_equal,\n        \"^=\": _a.tokens.xor_equal,\n        \">>=\": _a.tokens.shift_right_equal,\n        \"<<=\": _a.tokens.shift_left_equal,\n    };\n    TokenTypes.regexTokens = {\n        decimal_float_literal: _a.tokens.decimal_float_literal,\n        hex_float_literal: _a.tokens.hex_float_literal,\n        int_literal: _a.tokens.int_literal,\n        uint_literal: _a.tokens.uint_literal,\n        ident: _a.tokens.ident,\n    };\n    TokenTypes.storage_class = [\n        _a.keywords.function,\n        _a.keywords.private,\n        _a.keywords.workgroup,\n        _a.keywords.uniform,\n        _a.keywords.storage,\n    ];\n    TokenTypes.access_mode = [\n        _a.keywords.read,\n        _a.keywords.write,\n        _a.keywords.read_write,\n    ];\n    TokenTypes.sampler_type = [\n        _a.keywords.sampler,\n        _a.keywords.sampler_comparison,\n    ];\n    TokenTypes.sampled_texture_type = [\n        _a.keywords.texture_1d,\n        _a.keywords.texture_2d,\n        _a.keywords.texture_2d_array,\n        _a.keywords.texture_3d,\n        _a.keywords.texture_cube,\n        _a.keywords.texture_cube_array,\n    ];\n    TokenTypes.multisampled_texture_type = [\n        _a.keywords.texture_multisampled_2d,\n    ];\n    TokenTypes.storage_texture_type = [\n        _a.keywords.texture_storage_1d,\n        _a.keywords.texture_storage_2d,\n        _a.keywords.texture_storage_2d_array,\n        _a.keywords.texture_storage_3d,\n    ];\n    TokenTypes.depth_texture_type = [\n        _a.keywords.texture_depth_2d,\n        _a.keywords.texture_depth_2d_array,\n        _a.keywords.texture_depth_cube,\n        _a.keywords.texture_depth_cube_array,\n        _a.keywords.texture_depth_multisampled_2d,\n    ];\n    TokenTypes.texture_external_type = [_a.keywords.texture_external];\n    TokenTypes.any_texture_type = [\n        ..._a.sampled_texture_type,\n        ..._a.multisampled_texture_type,\n        ..._a.storage_texture_type,\n        ..._a.depth_texture_type,\n        ..._a.texture_external_type,\n    ];\n    TokenTypes.texel_format = [\n        _a.keywords.r8unorm,\n        _a.keywords.r8snorm,\n        _a.keywords.r8uint,\n        _a.keywords.r8sint,\n        _a.keywords.r16uint,\n        _a.keywords.r16sint,\n        _a.keywords.r16float,\n        _a.keywords.rg8unorm,\n        _a.keywords.rg8snorm,\n        _a.keywords.rg8uint,\n        _a.keywords.rg8sint,\n        _a.keywords.r32uint,\n        _a.keywords.r32sint,\n        _a.keywords.r32float,\n        _a.keywords.rg16uint,\n        _a.keywords.rg16sint,\n        _a.keywords.rg16float,\n        _a.keywords.rgba8unorm,\n        _a.keywords.rgba8unorm_srgb,\n        _a.keywords.rgba8snorm,\n        _a.keywords.rgba8uint,\n        _a.keywords.rgba8sint,\n        _a.keywords.bgra8unorm,\n        _a.keywords.bgra8unorm_srgb,\n        _a.keywords.rgb10a2unorm,\n        _a.keywords.rg11b10float,\n        _a.keywords.rg32uint,\n        _a.keywords.rg32sint,\n        _a.keywords.rg32float,\n        _a.keywords.rgba16uint,\n        _a.keywords.rgba16sint,\n        _a.keywords.rgba16float,\n        _a.keywords.rgba32uint,\n        _a.keywords.rgba32sint,\n        _a.keywords.rgba32float,\n    ];\n    TokenTypes.const_literal = [\n        _a.tokens.int_literal,\n        _a.tokens.uint_literal,\n        _a.tokens.decimal_float_literal,\n        _a.tokens.hex_float_literal,\n        _a.keywords.true,\n        _a.keywords.false,\n    ];\n    TokenTypes.literal_or_ident = [\n        _a.tokens.ident,\n        _a.tokens.int_literal,\n        _a.tokens.uint_literal,\n        _a.tokens.decimal_float_literal,\n        _a.tokens.hex_float_literal,\n    ];\n    TokenTypes.element_count_expression = [\n        _a.tokens.int_literal,\n        _a.tokens.uint_literal,\n        _a.tokens.ident,\n    ];\n    TokenTypes.template_types = [\n        _a.keywords.vec2,\n        _a.keywords.vec3,\n        _a.keywords.vec4,\n        _a.keywords.mat2x2,\n        _a.keywords.mat2x3,\n        _a.keywords.mat2x4,\n        _a.keywords.mat3x2,\n        _a.keywords.mat3x3,\n        _a.keywords.mat3x4,\n        _a.keywords.mat4x2,\n        _a.keywords.mat4x3,\n        _a.keywords.mat4x4,\n        _a.keywords.atomic,\n        _a.keywords.bitcast,\n        ..._a.any_texture_type,\n    ];\n    // The grammar calls out 'block', but attribute grammar is defined to use a 'ident'.\n    // The attribute grammar should be ident | block.\n    TokenTypes.attribute_name = [_a.tokens.ident, _a.keywords.block, _a.keywords.diagnostic];\n    TokenTypes.assignment_operators = [\n        _a.tokens.equal,\n        _a.tokens.plus_equal,\n        _a.tokens.minus_equal,\n        _a.tokens.times_equal,\n        _a.tokens.division_equal,\n        _a.tokens.modulo_equal,\n        _a.tokens.and_equal,\n        _a.tokens.or_equal,\n        _a.tokens.xor_equal,\n        _a.tokens.shift_right_equal,\n        _a.tokens.shift_left_equal,\n    ];\n    TokenTypes.increment_operators = [\n        _a.tokens.plus_plus,\n        _a.tokens.minus_minus,\n    ];\n    /// A token parsed by the WgslScanner.\n    class Token {\n        constructor(type, lexeme, line) {\n            this.type = type;\n            this.lexeme = lexeme;\n            this.line = line;\n        }\n        toString() {\n            return this.lexeme;\n        }\n        isTemplateType() {\n            return TokenTypes.template_types.indexOf(this.type) != -1;\n        }\n        isArrayType() {\n            return this.type == TokenTypes.keywords.array;\n        }\n        isArrayOrTemplateType() {\n            return this.isArrayType() || this.isTemplateType();\n        }\n    }\n    /// Lexical scanner for the WGSL language. This takes an input source text and generates a list\n    /// of Token objects, which can then be fed into the WgslParser to generate an AST.\n    class WgslScanner {\n        constructor(source) {\n            this._tokens = [];\n            this._start = 0;\n            this._current = 0;\n            this._line = 1;\n            this._source = source !== null && source !== void 0 ? source : \"\";\n        }\n        /// Scan all tokens from the source.\n        scanTokens() {\n            while (!this._isAtEnd()) {\n                this._start = this._current;\n                if (!this.scanToken()) {\n                    throw `Invalid syntax at line ${this._line}`;\n                }\n            }\n            this._tokens.push(new Token(TokenTypes.eof, \"\", this._line));\n            return this._tokens;\n        }\n        /// Scan a single token from the source.\n        scanToken() {\n            // Find the longest consecutive set of characters that match a rule.\n            let lexeme = this._advance();\n            // Skip line-feed, adding to the line counter.\n            if (lexeme == \"\\n\") {\n                this._line++;\n                return true;\n            }\n            // Skip whitespace\n            if (this._isWhitespace(lexeme)) {\n                return true;\n            }\n            if (lexeme == \"/\") {\n                // If it's a // comment, skip everything until the next line-feed.\n                if (this._peekAhead() == \"/\") {\n                    while (lexeme != \"\\n\") {\n                        if (this._isAtEnd()) {\n                            return true;\n                        }\n                        lexeme = this._advance();\n                    }\n                    // skip the linefeed\n                    this._line++;\n                    return true;\n                }\n                else if (this._peekAhead() == \"*\") {\n                    // If it's a / * block comment, skip everything until the matching * /,\n                    // allowing for nested block comments.\n                    this._advance();\n                    let commentLevel = 1;\n                    while (commentLevel > 0) {\n                        if (this._isAtEnd()) {\n                            return true;\n                        }\n                        lexeme = this._advance();\n                        if (lexeme == \"\\n\") {\n                            this._line++;\n                        }\n                        else if (lexeme == \"*\") {\n                            if (this._peekAhead() == \"/\") {\n                                this._advance();\n                                commentLevel--;\n                                if (commentLevel == 0) {\n                                    return true;\n                                }\n                            }\n                        }\n                        else if (lexeme == \"/\") {\n                            if (this._peekAhead() == \"*\") {\n                                this._advance();\n                                commentLevel++;\n                            }\n                        }\n                    }\n                    return true;\n                }\n            }\n            // Shortcut single character tokens\n            const simpleToken = TokenTypes.simpleTokens[lexeme];\n            if (simpleToken) {\n                this._addToken(simpleToken);\n                return true;\n            }\n            // Shortcut keywords and identifiers\n            let matchType = TokenTypes.none;\n            const isAlpha = this._isAlpha(lexeme);\n            const isUnderscore = lexeme === \"_\";\n            if (this._isAlphaNumeric(lexeme)) {\n                let nextChar = this._peekAhead();\n                while (this._isAlphaNumeric(nextChar)) {\n                    lexeme += this._advance();\n                    nextChar = this._peekAhead();\n                }\n            }\n            if (isAlpha) {\n                const matchedType = TokenTypes.keywords[lexeme];\n                if (matchedType) {\n                    this._addToken(matchedType);\n                    return true;\n                }\n            }\n            if (isAlpha || isUnderscore) {\n                this._addToken(TokenTypes.tokens.ident);\n                return true;\n            }\n            // Scan for the next valid token type\n            for (;;) {\n                let matchedType = this._findType(lexeme);\n                // An exception to \"longest lexeme\" rule is '>>'. In the case of 1>>2, it's a\n                // shift_right.\n                // In the case of array<vec4<f32>>, it's two greater_than's (one to close the vec4,\n                // and one to close the array).\n                // Another ambiguity is '>='. In the case of vec2<i32>=vec2(1,2),\n                // it's a greather_than and an equal, not a greater_than_equal.\n                // WGSL requires context sensitive parsing to resolve these ambiguities. Both of these cases\n                // are predicated on it the > either closing a template, or being part of an operator.\n                // The solution here is to check if there was a less_than up to some number of tokens\n                // previously, and the token prior to that is a keyword that requires a '<', then it will be\n                // split into two operators; otherwise it's a single operator.\n                const nextLexeme = this._peekAhead();\n                if (lexeme == \">\" && (nextLexeme == \">\" || nextLexeme == \"=\")) {\n                    let foundLessThan = false;\n                    let ti = this._tokens.length - 1;\n                    for (let count = 0; count < 5 && ti >= 0; ++count, --ti) {\n                        if (this._tokens[ti].type === TokenTypes.tokens.less_than) {\n                            if (ti > 0 && this._tokens[ti - 1].isArrayOrTemplateType()) {\n                                foundLessThan = true;\n                            }\n                            break;\n                        }\n                    }\n                    // If there was a less_than in the recent token history, then this is probably a\n                    // greater_than.\n                    if (foundLessThan) {\n                        this._addToken(matchedType);\n                        return true;\n                    }\n                }\n                // The current lexeme may not match any rule, but some token types may be invalid for\n                // part of the string but valid after a few more characters.\n                // For example, 0x.5 is a hex_float_literal. But as it's being scanned,\n                // \"0\" is a int_literal, then \"0x\" is invalid. If we stopped there, it would return\n                // the int_literal \"0\", but that's incorrect. So if we look forward a few characters,\n                // we'd get \"0x.\", which is still invalid, followed by \"0x.5\" which is the correct\n                // hex_float_literal. So that means if we hit an non-matching string, we should look\n                // ahead up to two characters to see if the string starts matching a valid rule again.\n                if (matchedType === TokenTypes.none) {\n                    let lookAheadLexeme = lexeme;\n                    let lookAhead = 0;\n                    const maxLookAhead = 2;\n                    for (let li = 0; li < maxLookAhead; ++li) {\n                        lookAheadLexeme += this._peekAhead(li);\n                        matchedType = this._findType(lookAheadLexeme);\n                        if (matchedType !== TokenTypes.none) {\n                            lookAhead = li;\n                            break;\n                        }\n                    }\n                    if (matchedType === TokenTypes.none) {\n                        if (matchType === TokenTypes.none) {\n                            return false;\n                        }\n                        this._current--;\n                        this._addToken(matchType);\n                        return true;\n                    }\n                    lexeme = lookAheadLexeme;\n                    this._current += lookAhead + 1;\n                }\n                matchType = matchedType;\n                if (this._isAtEnd()) {\n                    break;\n                }\n                lexeme += this._advance();\n            }\n            // We got to the end of the input stream. Then the token we've ready so far is it.\n            if (matchType === TokenTypes.none) {\n                return false;\n            }\n            this._addToken(matchType);\n            return true;\n        }\n        _findType(lexeme) {\n            for (const name in TokenTypes.regexTokens) {\n                const type = TokenTypes.regexTokens[name];\n                if (this._match(lexeme, type.rule)) {\n                    return type;\n                }\n            }\n            const type = TokenTypes.literalTokens[lexeme];\n            if (type) {\n                return type;\n            }\n            return TokenTypes.none;\n        }\n        _match(lexeme, rule) {\n            const match = rule.exec(lexeme);\n            return match && match.index == 0 && match[0] == lexeme;\n        }\n        _isAtEnd() {\n            return this._current >= this._source.length;\n        }\n        _isAlpha(c) {\n            return (c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\");\n        }\n        _isAlphaNumeric(c) {\n            return (c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\") || c == \"_\" || (c >= \"0\" && c <= \"9\");\n        }\n        _isWhitespace(c) {\n            return c == \" \" || c == \"\\t\" || c == \"\\r\";\n        }\n        _advance(amount = 0) {\n            let c = this._source[this._current];\n            amount = amount || 0;\n            amount++;\n            this._current += amount;\n            return c;\n        }\n        _peekAhead(offset = 0) {\n            offset = offset || 0;\n            if (this._current + offset >= this._source.length) {\n                return \"\\0\";\n            }\n            return this._source[this._current + offset];\n        }\n        _addToken(type) {\n            const text = this._source.substring(this._start, this._current);\n            this._tokens.push(new Token(type, text, this._line));\n        }\n    }\n\n    /**\n     * @author Brendan Duncan / https://github.com/brendan-duncan\n     */\n    /// Parse a sequence of tokens from the WgslScanner into an Abstract Syntax Tree (AST).\n    class WgslParser {\n        constructor() {\n            this._tokens = [];\n            this._current = 0;\n            this._currentLine = 0;\n            this._context = new ParseContext();\n            this._deferArrayCountEval = [];\n        }\n        parse(tokensOrCode) {\n            this._initialize(tokensOrCode);\n            this._deferArrayCountEval.length = 0;\n            const statements = [];\n            while (!this._isAtEnd()) {\n                const statement = this._global_decl_or_directive();\n                if (!statement) {\n                    break;\n                }\n                statements.push(statement);\n            }\n            // Since constants can be declared after they are used, and\n            // constants can be used to size arrays, defer calculating the\n            // size until after the shader has finished parsing.\n            if (this._deferArrayCountEval.length > 0) {\n                for (const arrayDecl of this._deferArrayCountEval) {\n                    const arrayType = arrayDecl[\"arrayType\"];\n                    const countNode = arrayDecl[\"countNode\"];\n                    if (countNode instanceof VariableExpr) {\n                        const variable = countNode;\n                        const name = variable.name;\n                        const constant = this._context.constants.get(name);\n                        if (constant) {\n                            try {\n                                const count = constant.evaluate(this._context);\n                                arrayType.count = count;\n                            }\n                            catch (e) {\n                            }\n                        }\n                    }\n                }\n                this._deferArrayCountEval.length = 0;\n            }\n            return statements;\n        }\n        _initialize(tokensOrCode) {\n            if (tokensOrCode) {\n                if (typeof tokensOrCode == \"string\") {\n                    const scanner = new WgslScanner(tokensOrCode);\n                    this._tokens = scanner.scanTokens();\n                }\n                else {\n                    this._tokens = tokensOrCode;\n                }\n            }\n            else {\n                this._tokens = [];\n            }\n            this._current = 0;\n        }\n        _error(token, message) {\n            return {\n                token,\n                message,\n                toString: function () {\n                    return `${message}`;\n                },\n            };\n        }\n        _isAtEnd() {\n            return (this._current >= this._tokens.length ||\n                this._peek().type == TokenTypes.eof);\n        }\n        _match(types) {\n            if (types instanceof TokenType) {\n                if (this._check(types)) {\n                    this._advance();\n                    return true;\n                }\n                return false;\n            }\n            for (let i = 0, l = types.length; i < l; ++i) {\n                const type = types[i];\n                if (this._check(type)) {\n                    this._advance();\n                    return true;\n                }\n            }\n            return false;\n        }\n        _consume(types, message) {\n            if (this._check(types)) {\n                return this._advance();\n            }\n            throw this._error(this._peek(), message);\n        }\n        _check(types) {\n            if (this._isAtEnd()) {\n                return false;\n            }\n            const tk = this._peek();\n            if (types instanceof Array) {\n                const t = tk.type;\n                const index = types.indexOf(t);\n                return index != -1;\n            }\n            return tk.type == types;\n        }\n        _advance() {\n            var _a, _b;\n            this._currentLine = (_b = (_a = this._peek()) === null || _a === void 0 ? void 0 : _a.line) !== null && _b !== void 0 ? _b : -1;\n            if (!this._isAtEnd()) {\n                this._current++;\n            }\n            return this._previous();\n        }\n        _peek() {\n            return this._tokens[this._current];\n        }\n        _previous() {\n            return this._tokens[this._current - 1];\n        }\n        _global_decl_or_directive() {\n            // semicolon\n            // global_variable_decl semicolon\n            // global_constant_decl semicolon\n            // type_alias semicolon\n            // struct_decl\n            // function_decl\n            // enable_directive\n            // Ignore any stand-alone semicolons\n            while (this._match(TokenTypes.tokens.semicolon) && !this._isAtEnd())\n                ;\n            if (this._match(TokenTypes.keywords.alias)) {\n                const type = this._type_alias();\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\n                return type;\n            }\n            if (this._match(TokenTypes.keywords.diagnostic)) {\n                const directive = this._diagnostic();\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\n                return directive;\n            }\n            if (this._match(TokenTypes.keywords.requires)) {\n                const requires = this._requires_directive();\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\n                return requires;\n            }\n            if (this._match(TokenTypes.keywords.enable)) {\n                const enable = this._enable_directive();\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\n                return enable;\n            }\n            // The following statements have an optional attribute*\n            const attrs = this._attribute();\n            if (this._check(TokenTypes.keywords.var)) {\n                const _var = this._global_variable_decl();\n                if (_var != null) {\n                    _var.attributes = attrs;\n                }\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\n                return _var;\n            }\n            if (this._check(TokenTypes.keywords.override)) {\n                const _override = this._override_variable_decl();\n                if (_override != null) {\n                    _override.attributes = attrs;\n                }\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\n                return _override;\n            }\n            if (this._check(TokenTypes.keywords.let)) {\n                const _let = this._global_let_decl();\n                if (_let != null) {\n                    _let.attributes = attrs;\n                }\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\n                return _let;\n            }\n            if (this._check(TokenTypes.keywords.const)) {\n                const _const = this._global_const_decl();\n                if (_const != null) {\n                    _const.attributes = attrs;\n                }\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\n                return _const;\n            }\n            if (this._check(TokenTypes.keywords.struct)) {\n                const _struct = this._struct_decl();\n                if (_struct != null) {\n                    _struct.attributes = attrs;\n                }\n                return _struct;\n            }\n            if (this._check(TokenTypes.keywords.fn)) {\n                const _fn = this._function_decl();\n                if (_fn != null) {\n                    _fn.attributes = attrs;\n                }\n                return _fn;\n            }\n            return null;\n        }\n        _function_decl() {\n            // attribute* function_header compound_statement\n            // function_header: fn ident paren_left param_list? paren_right (arrow attribute* type_decl)?\n            if (!this._match(TokenTypes.keywords.fn)) {\n                return null;\n            }\n            const startLine = this._currentLine;\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected function name.\").toString();\n            this._consume(TokenTypes.tokens.paren_left, \"Expected '(' for function arguments.\");\n            const args = [];\n            if (!this._check(TokenTypes.tokens.paren_right)) {\n                do {\n                    if (this._check(TokenTypes.tokens.paren_right)) {\n                        break;\n                    }\n                    const argAttrs = this._attribute();\n                    const name = this._consume(TokenTypes.tokens.ident, \"Expected argument name.\").toString();\n                    this._consume(TokenTypes.tokens.colon, \"Expected ':' for argument type.\");\n                    const typeAttrs = this._attribute();\n                    const type = this._type_decl();\n                    if (type != null) {\n                        type.attributes = typeAttrs;\n                        args.push(new Argument(name, type, argAttrs));\n                    }\n                } while (this._match(TokenTypes.tokens.comma));\n            }\n            this._consume(TokenTypes.tokens.paren_right, \"Expected ')' after function arguments.\");\n            let _return = null;\n            if (this._match(TokenTypes.tokens.arrow)) {\n                const attrs = this._attribute();\n                _return = this._type_decl();\n                if (_return != null) {\n                    _return.attributes = attrs;\n                }\n            }\n            const body = this._compound_statement();\n            const endLine = this._currentLine;\n            return new Function(name, args, _return, body, startLine, endLine);\n        }\n        _compound_statement() {\n            // brace_left statement* brace_right\n            const statements = [];\n            this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for block.\");\n            while (!this._check(TokenTypes.tokens.brace_right)) {\n                const statement = this._statement();\n                if (statement !== null) {\n                    statements.push(statement);\n                }\n            }\n            this._consume(TokenTypes.tokens.brace_right, \"Expected '}' for block.\");\n            return statements;\n        }\n        _statement() {\n            // semicolon\n            // return_statement semicolon\n            // if_statement\n            // switch_statement\n            // loop_statement\n            // for_statement\n            // func_call_statement semicolon\n            // variable_statement semicolon\n            // break_statement semicolon\n            // continue_statement semicolon\n            // continuing_statement compound_statement\n            // discard semicolon\n            // assignment_statement semicolon\n            // compound_statement\n            // increment_statement semicolon\n            // decrement_statement semicolon\n            // static_assert_statement semicolon\n            // Ignore any stand-alone semicolons\n            while (this._match(TokenTypes.tokens.semicolon) && !this._isAtEnd())\n                ;\n            if (this._check(TokenTypes.tokens.attr)) {\n                this._attribute();\n            }\n            if (this._check(TokenTypes.keywords.if)) {\n                return this._if_statement();\n            }\n            if (this._check(TokenTypes.keywords.switch)) {\n                return this._switch_statement();\n            }\n            if (this._check(TokenTypes.keywords.loop)) {\n                return this._loop_statement();\n            }\n            if (this._check(TokenTypes.keywords.for)) {\n                return this._for_statement();\n            }\n            if (this._check(TokenTypes.keywords.while)) {\n                return this._while_statement();\n            }\n            if (this._check(TokenTypes.keywords.continuing)) {\n                return this._continuing_statement();\n            }\n            if (this._check(TokenTypes.keywords.static_assert)) {\n                return this._static_assert_statement();\n            }\n            if (this._check(TokenTypes.tokens.brace_left)) {\n                return this._compound_statement();\n            }\n            let result = null;\n            if (this._check(TokenTypes.keywords.return)) {\n                result = this._return_statement();\n            }\n            else if (this._check([\n                TokenTypes.keywords.var,\n                TokenTypes.keywords.let,\n                TokenTypes.keywords.const,\n            ])) {\n                result = this._variable_statement();\n            }\n            else if (this._match(TokenTypes.keywords.discard)) {\n                result = new Discard();\n            }\n            else if (this._match(TokenTypes.keywords.break)) {\n                result = new Break();\n            }\n            else if (this._match(TokenTypes.keywords.continue)) {\n                result = new Continue();\n            }\n            else {\n                result =\n                    this._increment_decrement_statement() ||\n                        this._func_call_statement() ||\n                        this._assignment_statement();\n            }\n            if (result != null) {\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';' after statement.\");\n            }\n            return result;\n        }\n        _static_assert_statement() {\n            if (!this._match(TokenTypes.keywords.static_assert)) {\n                return null;\n            }\n            const expression = this._optional_paren_expression();\n            return new StaticAssert(expression);\n        }\n        _while_statement() {\n            if (!this._match(TokenTypes.keywords.while)) {\n                return null;\n            }\n            const condition = this._optional_paren_expression();\n            if (this._check(TokenTypes.tokens.attr)) {\n                this._attribute();\n            }\n            const block = this._compound_statement();\n            return new While(condition, block);\n        }\n        _continuing_statement() {\n            if (!this._match(TokenTypes.keywords.continuing)) {\n                return null;\n            }\n            const block = this._compound_statement();\n            return new Continuing(block);\n        }\n        _for_statement() {\n            // for paren_left for_header paren_right compound_statement\n            if (!this._match(TokenTypes.keywords.for)) {\n                return null;\n            }\n            this._consume(TokenTypes.tokens.paren_left, \"Expected '('.\");\n            // for_header: (variable_statement assignment_statement func_call_statement)? semicolon short_circuit_or_expression? semicolon (assignment_statement func_call_statement)?\n            const init = !this._check(TokenTypes.tokens.semicolon)\n                ? this._for_init()\n                : null;\n            this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\n            const condition = !this._check(TokenTypes.tokens.semicolon)\n                ? this._short_circuit_or_expression()\n                : null;\n            this._consume(TokenTypes.tokens.semicolon, \"Expected ';'.\");\n            const increment = !this._check(TokenTypes.tokens.paren_right)\n                ? this._for_increment()\n                : null;\n            this._consume(TokenTypes.tokens.paren_right, \"Expected ')'.\");\n            if (this._check(TokenTypes.tokens.attr)) {\n                this._attribute();\n            }\n            const body = this._compound_statement();\n            return new For(init, condition, increment, body);\n        }\n        _for_init() {\n            // (variable_statement assignment_statement func_call_statement)?\n            return (this._variable_statement() ||\n                this._func_call_statement() ||\n                this._assignment_statement());\n        }\n        _for_increment() {\n            // (assignment_statement func_call_statement increment_statement)?\n            return (this._func_call_statement() ||\n                this._increment_decrement_statement() ||\n                this._assignment_statement());\n        }\n        _variable_statement() {\n            // variable_decl\n            // variable_decl equal short_circuit_or_expression\n            // let (ident variable_ident_decl) equal short_circuit_or_expression\n            // const (ident variable_ident_decl) equal short_circuit_or_expression\n            if (this._check(TokenTypes.keywords.var)) {\n                const _var = this._variable_decl();\n                if (_var === null) {\n                    throw this._error(this._peek(), \"Variable declaration expected.\");\n                }\n                let value = null;\n                if (this._match(TokenTypes.tokens.equal)) {\n                    value = this._short_circuit_or_expression();\n                }\n                return new Var(_var.name, _var.type, _var.storage, _var.access, value);\n            }\n            if (this._match(TokenTypes.keywords.let)) {\n                const name = this._consume(TokenTypes.tokens.ident, \"Expected name for let.\").toString();\n                let type = null;\n                if (this._match(TokenTypes.tokens.colon)) {\n                    const typeAttrs = this._attribute();\n                    type = this._type_decl();\n                    if (type != null) {\n                        type.attributes = typeAttrs;\n                    }\n                }\n                this._consume(TokenTypes.tokens.equal, \"Expected '=' for let.\");\n                const value = this._short_circuit_or_expression();\n                return new Let(name, type, null, null, value);\n            }\n            if (this._match(TokenTypes.keywords.const)) {\n                const name = this._consume(TokenTypes.tokens.ident, \"Expected name for const.\").toString();\n                let type = null;\n                if (this._match(TokenTypes.tokens.colon)) {\n                    const typeAttrs = this._attribute();\n                    type = this._type_decl();\n                    if (type != null) {\n                        type.attributes = typeAttrs;\n                    }\n                }\n                this._consume(TokenTypes.tokens.equal, \"Expected '=' for const.\");\n                const value = this._short_circuit_or_expression();\n                return new Const(name, type, null, null, value);\n            }\n            return null;\n        }\n        _increment_decrement_statement() {\n            const savedPos = this._current;\n            const _var = this._unary_expression();\n            if (_var == null) {\n                return null;\n            }\n            if (!this._check(TokenTypes.increment_operators)) {\n                this._current = savedPos;\n                return null;\n            }\n            const token = this._consume(TokenTypes.increment_operators, \"Expected increment operator\");\n            return new Increment(token.type === TokenTypes.tokens.plus_plus\n                ? IncrementOperator.increment\n                : IncrementOperator.decrement, _var);\n        }\n        _assignment_statement() {\n            // (unary_expression underscore) equal short_circuit_or_expression\n            let _var = null;\n            if (this._check(TokenTypes.tokens.brace_right)) {\n                return null;\n            }\n            let isUnderscore = this._match(TokenTypes.tokens.underscore);\n            if (!isUnderscore) {\n                _var = this._unary_expression();\n            }\n            if (!isUnderscore && _var == null) {\n                return null;\n            }\n            const type = this._consume(TokenTypes.assignment_operators, \"Expected assignment operator.\");\n            const value = this._short_circuit_or_expression();\n            return new Assign(AssignOperator.parse(type.lexeme), _var, value);\n        }\n        _func_call_statement() {\n            // ident argument_expression_list\n            if (!this._check(TokenTypes.tokens.ident)) {\n                return null;\n            }\n            const savedPos = this._current;\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected function name.\");\n            const args = this._argument_expression_list();\n            if (args === null) {\n                this._current = savedPos;\n                return null;\n            }\n            return new Call(name.lexeme, args);\n        }\n        _loop_statement() {\n            // loop brace_left statement* continuing_statement? brace_right\n            if (!this._match(TokenTypes.keywords.loop)) {\n                return null;\n            }\n            if (this._check(TokenTypes.tokens.attr)) {\n                this._attribute();\n            }\n            this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for loop.\");\n            // statement*\n            const statements = [];\n            let statement = this._statement();\n            while (statement !== null) {\n                if (Array.isArray(statement)) {\n                    for (let s of statement) {\n                        statements.push(s);\n                    }\n                }\n                else {\n                    statements.push(statement);\n                }\n                statement = this._statement();\n            }\n            // continuing_statement: continuing compound_statement\n            let continuing = null;\n            if (this._match(TokenTypes.keywords.continuing)) {\n                continuing = this._compound_statement();\n            }\n            this._consume(TokenTypes.tokens.brace_right, \"Expected '}' for loop.\");\n            return new Loop(statements, continuing);\n        }\n        _switch_statement() {\n            // switch optional_paren_expression brace_left switch_body+ brace_right\n            if (!this._match(TokenTypes.keywords.switch)) {\n                return null;\n            }\n            const condition = this._optional_paren_expression();\n            if (this._check(TokenTypes.tokens.attr)) {\n                this._attribute();\n            }\n            this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for switch.\");\n            const body = this._switch_body();\n            if (body == null || body.length == 0) {\n                throw this._error(this._previous(), \"Expected 'case' or 'default'.\");\n            }\n            this._consume(TokenTypes.tokens.brace_right, \"Expected '}' for switch.\");\n            return new Switch(condition, body);\n        }\n        _switch_body() {\n            // case case_selectors colon brace_left case_body? brace_right\n            // default colon brace_left case_body? brace_right\n            const cases = [];\n            if (this._match(TokenTypes.keywords.case)) {\n                const selector = this._case_selectors();\n                this._match(TokenTypes.tokens.colon); // colon is optional\n                if (this._check(TokenTypes.tokens.attr)) {\n                    this._attribute();\n                }\n                this._consume(TokenTypes.tokens.brace_left, \"Exected '{' for switch case.\");\n                const body = this._case_body();\n                this._consume(TokenTypes.tokens.brace_right, \"Exected '}' for switch case.\");\n                cases.push(new Case(selector, body));\n            }\n            if (this._match(TokenTypes.keywords.default)) {\n                this._match(TokenTypes.tokens.colon); // colon is optional\n                if (this._check(TokenTypes.tokens.attr)) {\n                    this._attribute();\n                }\n                this._consume(TokenTypes.tokens.brace_left, \"Exected '{' for switch default.\");\n                const body = this._case_body();\n                this._consume(TokenTypes.tokens.brace_right, \"Exected '}' for switch default.\");\n                cases.push(new Default(body));\n            }\n            if (this._check([TokenTypes.keywords.default, TokenTypes.keywords.case])) {\n                const _cases = this._switch_body();\n                cases.push(_cases[0]);\n            }\n            return cases;\n        }\n        _case_selectors() {\n            // const_literal (comma const_literal)* comma?\n            const selectors = [\n                this._shift_expression(), //?.evaluate(this._context).toString() ?? \"\",\n            ];\n            while (this._match(TokenTypes.tokens.comma)) {\n                selectors.push(this._shift_expression());\n            }\n            return selectors;\n        }\n        _case_body() {\n            // statement case_body?\n            // fallthrough semicolon\n            if (this._match(TokenTypes.keywords.fallthrough)) {\n                this._consume(TokenTypes.tokens.semicolon, \"Expected ';'\");\n                return [];\n            }\n            let statement = this._statement();\n            if (statement == null) {\n                return [];\n            }\n            if (!(statement instanceof Array)) {\n                statement = [statement];\n            }\n            const nextStatement = this._case_body();\n            if (nextStatement.length == 0) {\n                return statement;\n            }\n            return [...statement, nextStatement[0]];\n        }\n        _if_statement() {\n            // if optional_paren_expression compound_statement elseif_statement? else_statement?\n            if (!this._match(TokenTypes.keywords.if)) {\n                return null;\n            }\n            const condition = this._optional_paren_expression();\n            if (this._check(TokenTypes.tokens.attr)) {\n                this._attribute();\n            }\n            const block = this._compound_statement();\n            let elseif = [];\n            if (this._match_elseif()) {\n                if (this._check(TokenTypes.tokens.attr)) {\n                    this._attribute();\n                }\n                elseif = this._elseif_statement(elseif);\n            }\n            let _else = null;\n            if (this._match(TokenTypes.keywords.else)) {\n                if (this._check(TokenTypes.tokens.attr)) {\n                    this._attribute();\n                }\n                _else = this._compound_statement();\n            }\n            return new If(condition, block, elseif, _else);\n        }\n        _match_elseif() {\n            if (this._tokens[this._current].type === TokenTypes.keywords.else &&\n                this._tokens[this._current + 1].type === TokenTypes.keywords.if) {\n                this._advance();\n                this._advance();\n                return true;\n            }\n            return false;\n        }\n        _elseif_statement(elseif = []) {\n            // else_if optional_paren_expression compound_statement elseif_statement?\n            const condition = this._optional_paren_expression();\n            const block = this._compound_statement();\n            elseif.push(new ElseIf(condition, block));\n            if (this._match_elseif()) {\n                if (this._check(TokenTypes.tokens.attr)) {\n                    this._attribute();\n                }\n                this._elseif_statement(elseif);\n            }\n            return elseif;\n        }\n        _return_statement() {\n            // return short_circuit_or_expression?\n            if (!this._match(TokenTypes.keywords.return)) {\n                return null;\n            }\n            const value = this._short_circuit_or_expression();\n            return new Return(value);\n        }\n        _short_circuit_or_expression() {\n            // short_circuit_and_expression\n            // short_circuit_or_expression or_or short_circuit_and_expression\n            let expr = this._short_circuit_and_expr();\n            while (this._match(TokenTypes.tokens.or_or)) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._short_circuit_and_expr());\n            }\n            return expr;\n        }\n        _short_circuit_and_expr() {\n            // inclusive_or_expression\n            // short_circuit_and_expression and_and inclusive_or_expression\n            let expr = this._inclusive_or_expression();\n            while (this._match(TokenTypes.tokens.and_and)) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._inclusive_or_expression());\n            }\n            return expr;\n        }\n        _inclusive_or_expression() {\n            // exclusive_or_expression\n            // inclusive_or_expression or exclusive_or_expression\n            let expr = this._exclusive_or_expression();\n            while (this._match(TokenTypes.tokens.or)) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._exclusive_or_expression());\n            }\n            return expr;\n        }\n        _exclusive_or_expression() {\n            // and_expression\n            // exclusive_or_expression xor and_expression\n            let expr = this._and_expression();\n            while (this._match(TokenTypes.tokens.xor)) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._and_expression());\n            }\n            return expr;\n        }\n        _and_expression() {\n            // equality_expression\n            // and_expression and equality_expression\n            let expr = this._equality_expression();\n            while (this._match(TokenTypes.tokens.and)) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._equality_expression());\n            }\n            return expr;\n        }\n        _equality_expression() {\n            // relational_expression\n            // relational_expression equal_equal relational_expression\n            // relational_expression not_equal relational_expression\n            const expr = this._relational_expression();\n            if (this._match([TokenTypes.tokens.equal_equal, TokenTypes.tokens.not_equal])) {\n                return new BinaryOperator(this._previous().toString(), expr, this._relational_expression());\n            }\n            return expr;\n        }\n        _relational_expression() {\n            // shift_expression\n            // relational_expression less_than shift_expression\n            // relational_expression greater_than shift_expression\n            // relational_expression less_than_equal shift_expression\n            // relational_expression greater_than_equal shift_expression\n            let expr = this._shift_expression();\n            while (this._match([\n                TokenTypes.tokens.less_than,\n                TokenTypes.tokens.greater_than,\n                TokenTypes.tokens.less_than_equal,\n                TokenTypes.tokens.greater_than_equal,\n            ])) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._shift_expression());\n            }\n            return expr;\n        }\n        _shift_expression() {\n            // additive_expression\n            // shift_expression shift_left additive_expression\n            // shift_expression shift_right additive_expression\n            let expr = this._additive_expression();\n            while (this._match([TokenTypes.tokens.shift_left, TokenTypes.tokens.shift_right])) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._additive_expression());\n            }\n            return expr;\n        }\n        _additive_expression() {\n            // multiplicative_expression\n            // additive_expression plus multiplicative_expression\n            // additive_expression minus multiplicative_expression\n            let expr = this._multiplicative_expression();\n            while (this._match([TokenTypes.tokens.plus, TokenTypes.tokens.minus])) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._multiplicative_expression());\n            }\n            return expr;\n        }\n        _multiplicative_expression() {\n            // unary_expression\n            // multiplicative_expression star unary_expression\n            // multiplicative_expression forward_slash unary_expression\n            // multiplicative_expression modulo unary_expression\n            let expr = this._unary_expression();\n            while (this._match([\n                TokenTypes.tokens.star,\n                TokenTypes.tokens.forward_slash,\n                TokenTypes.tokens.modulo,\n            ])) {\n                expr = new BinaryOperator(this._previous().toString(), expr, this._unary_expression());\n            }\n            return expr;\n        }\n        _unary_expression() {\n            // singular_expression\n            // minus unary_expression\n            // bang unary_expression\n            // tilde unary_expression\n            // star unary_expression\n            // and unary_expression\n            if (this._match([\n                TokenTypes.tokens.minus,\n                TokenTypes.tokens.bang,\n                TokenTypes.tokens.tilde,\n                TokenTypes.tokens.star,\n                TokenTypes.tokens.and,\n            ])) {\n                return new UnaryOperator(this._previous().toString(), this._unary_expression());\n            }\n            return this._singular_expression();\n        }\n        _singular_expression() {\n            // primary_expression postfix_expression ?\n            const expr = this._primary_expression();\n            const p = this._postfix_expression();\n            if (p) {\n                expr.postfix = p;\n            }\n            return expr;\n        }\n        _postfix_expression() {\n            // bracket_left short_circuit_or_expression bracket_right postfix_expression?\n            if (this._match(TokenTypes.tokens.bracket_left)) {\n                const expr = this._short_circuit_or_expression();\n                this._consume(TokenTypes.tokens.bracket_right, \"Expected ']'.\");\n                const arrayIndex = new ArrayIndex(expr);\n                const p = this._postfix_expression();\n                if (p) {\n                    arrayIndex.postfix = p;\n                }\n                return arrayIndex;\n            }\n            // period ident postfix_expression?\n            if (this._match(TokenTypes.tokens.period)) {\n                const name = this._consume(TokenTypes.tokens.ident, \"Expected member name.\");\n                const p = this._postfix_expression();\n                const expr = new StringExpr(name.lexeme);\n                if (p) {\n                    expr.postfix = p;\n                }\n                return expr;\n            }\n            return null;\n        }\n        _getStruct(name) {\n            if (this._context.aliases.has(name)) {\n                const alias = this._context.aliases.get(name).type;\n                return alias;\n            }\n            if (this._context.structs.has(name)) {\n                const struct = this._context.structs.get(name);\n                return struct;\n            }\n            return null;\n        }\n        _primary_expression() {\n            // ident argument_expression_list?\n            if (this._match(TokenTypes.tokens.ident)) {\n                const name = this._previous().toString();\n                if (this._check(TokenTypes.tokens.paren_left)) {\n                    const args = this._argument_expression_list();\n                    const struct = this._getStruct(name);\n                    if (struct != null) {\n                        return new CreateExpr(struct, args);\n                    }\n                    return new CallExpr(name, args);\n                }\n                if (this._context.constants.has(name)) {\n                    const c = this._context.constants.get(name);\n                    return new ConstExpr(name, c.value);\n                }\n                return new VariableExpr(name);\n            }\n            // const_literal\n            if (this._match(TokenTypes.const_literal)) {\n                return new LiteralExpr(parseFloat(this._previous().toString()));\n            }\n            // paren_expression\n            if (this._check(TokenTypes.tokens.paren_left)) {\n                return this._paren_expression();\n            }\n            // bitcast less_than type_decl greater_than paren_expression\n            if (this._match(TokenTypes.keywords.bitcast)) {\n                this._consume(TokenTypes.tokens.less_than, \"Expected '<'.\");\n                const type = this._type_decl();\n                this._consume(TokenTypes.tokens.greater_than, \"Expected '>'.\");\n                const value = this._paren_expression();\n                return new BitcastExpr(type, value);\n            }\n            // type_decl argument_expression_list\n            const type = this._type_decl();\n            const args = this._argument_expression_list();\n            return new TypecastExpr(type, args);\n        }\n        _argument_expression_list() {\n            // paren_left ((short_circuit_or_expression comma)* short_circuit_or_expression comma?)? paren_right\n            if (!this._match(TokenTypes.tokens.paren_left)) {\n                return null;\n            }\n            const args = [];\n            do {\n                if (this._check(TokenTypes.tokens.paren_right)) {\n                    break;\n                }\n                const arg = this._short_circuit_or_expression();\n                args.push(arg);\n            } while (this._match(TokenTypes.tokens.comma));\n            this._consume(TokenTypes.tokens.paren_right, \"Expected ')' for agument list\");\n            return args;\n        }\n        _optional_paren_expression() {\n            // [paren_left] short_circuit_or_expression [paren_right]\n            this._match(TokenTypes.tokens.paren_left);\n            const expr = this._short_circuit_or_expression();\n            this._match(TokenTypes.tokens.paren_right);\n            return new GroupingExpr([expr]);\n        }\n        _paren_expression() {\n            // paren_left short_circuit_or_expression paren_right\n            this._consume(TokenTypes.tokens.paren_left, \"Expected '('.\");\n            const expr = this._short_circuit_or_expression();\n            this._consume(TokenTypes.tokens.paren_right, \"Expected ')'.\");\n            return new GroupingExpr([expr]);\n        }\n        _struct_decl() {\n            // attribute* struct ident struct_body_decl\n            if (!this._match(TokenTypes.keywords.struct)) {\n                return null;\n            }\n            const startLine = this._currentLine;\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected name for struct.\").toString();\n            // struct_body_decl: brace_left (struct_member comma)* struct_member comma? brace_right\n            this._consume(TokenTypes.tokens.brace_left, \"Expected '{' for struct body.\");\n            const members = [];\n            while (!this._check(TokenTypes.tokens.brace_right)) {\n                // struct_member: attribute* variable_ident_decl\n                const memberAttrs = this._attribute();\n                const memberName = this._consume(TokenTypes.tokens.ident, \"Expected variable name.\").toString();\n                this._consume(TokenTypes.tokens.colon, \"Expected ':' for struct member type.\");\n                const typeAttrs = this._attribute();\n                const memberType = this._type_decl();\n                if (memberType != null) {\n                    memberType.attributes = typeAttrs;\n                }\n                if (!this._check(TokenTypes.tokens.brace_right))\n                    this._consume(TokenTypes.tokens.comma, \"Expected ',' for struct member.\");\n                else\n                    this._match(TokenTypes.tokens.comma); // trailing comma optional.\n                members.push(new Member(memberName, memberType, memberAttrs));\n            }\n            this._consume(TokenTypes.tokens.brace_right, \"Expected '}' after struct body.\");\n            const endLine = this._currentLine;\n            const structNode = new Struct(name, members, startLine, endLine);\n            this._context.structs.set(name, structNode);\n            return structNode;\n        }\n        _global_variable_decl() {\n            // attribute* variable_decl (equal const_expression)?\n            const _var = this._variable_decl();\n            if (_var && this._match(TokenTypes.tokens.equal)) {\n                _var.value = this._const_expression();\n            }\n            return _var;\n        }\n        _override_variable_decl() {\n            // attribute* override_decl (equal const_expression)?\n            const _override = this._override_decl();\n            if (_override && this._match(TokenTypes.tokens.equal)) {\n                _override.value = this._const_expression();\n            }\n            return _override;\n        }\n        _global_const_decl() {\n            // attribute* const (ident variable_ident_decl) global_const_initializer?\n            if (!this._match(TokenTypes.keywords.const)) {\n                return null;\n            }\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected variable name\");\n            let type = null;\n            if (this._match(TokenTypes.tokens.colon)) {\n                const attrs = this._attribute();\n                type = this._type_decl();\n                if (type != null) {\n                    type.attributes = attrs;\n                }\n            }\n            let value = null;\n            if (this._match(TokenTypes.tokens.equal)) {\n                const valueExpr = this._short_circuit_or_expression();\n                if (valueExpr instanceof CreateExpr) {\n                    value = valueExpr;\n                }\n                else if (valueExpr instanceof ConstExpr &&\n                    valueExpr.initializer instanceof CreateExpr) {\n                    value = valueExpr.initializer;\n                }\n                else {\n                    try {\n                        const constValue = valueExpr.evaluate(this._context);\n                        value = new LiteralExpr(constValue);\n                    }\n                    catch (_a) {\n                        value = valueExpr;\n                    }\n                }\n            }\n            const c = new Const(name.toString(), type, \"\", \"\", value);\n            this._context.constants.set(c.name, c);\n            return c;\n        }\n        _global_let_decl() {\n            // attribute* let (ident variable_ident_decl) global_const_initializer?\n            if (!this._match(TokenTypes.keywords.let)) {\n                return null;\n            }\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected variable name\");\n            let type = null;\n            if (this._match(TokenTypes.tokens.colon)) {\n                const attrs = this._attribute();\n                type = this._type_decl();\n                if (type != null) {\n                    type.attributes = attrs;\n                }\n            }\n            let value = null;\n            if (this._match(TokenTypes.tokens.equal)) {\n                value = this._const_expression();\n            }\n            return new Let(name.toString(), type, \"\", \"\", value);\n        }\n        _const_expression() {\n            // type_decl paren_left ((const_expression comma)* const_expression comma?)? paren_right\n            // const_literal\n            if (this._match(TokenTypes.const_literal)) {\n                return new StringExpr(this._previous().toString());\n            }\n            const type = this._type_decl();\n            this._consume(TokenTypes.tokens.paren_left, \"Expected '('.\");\n            let args = [];\n            while (!this._check(TokenTypes.tokens.paren_right)) {\n                args.push(this._const_expression());\n                if (!this._check(TokenTypes.tokens.comma)) {\n                    break;\n                }\n                this._advance();\n            }\n            this._consume(TokenTypes.tokens.paren_right, \"Expected ')'.\");\n            return new CreateExpr(type, args);\n        }\n        _variable_decl() {\n            // var variable_qualifier? (ident variable_ident_decl)\n            if (!this._match(TokenTypes.keywords.var)) {\n                return null;\n            }\n            // variable_qualifier: less_than storage_class (comma access_mode)? greater_than\n            let storage = \"\";\n            let access = \"\";\n            if (this._match(TokenTypes.tokens.less_than)) {\n                storage = this._consume(TokenTypes.storage_class, \"Expected storage_class.\").toString();\n                if (this._match(TokenTypes.tokens.comma))\n                    access = this._consume(TokenTypes.access_mode, \"Expected access_mode.\").toString();\n                this._consume(TokenTypes.tokens.greater_than, \"Expected '>'.\");\n            }\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected variable name\");\n            let type = null;\n            if (this._match(TokenTypes.tokens.colon)) {\n                const attrs = this._attribute();\n                type = this._type_decl();\n                if (type != null) {\n                    type.attributes = attrs;\n                }\n            }\n            return new Var(name.toString(), type, storage, access, null);\n        }\n        _override_decl() {\n            // override (ident variable_ident_decl)\n            if (!this._match(TokenTypes.keywords.override)) {\n                return null;\n            }\n            const name = this._consume(TokenTypes.tokens.ident, \"Expected variable name\");\n            let type = null;\n            if (this._match(TokenTypes.tokens.colon)) {\n                const attrs = this._attribute();\n                type = this._type_decl();\n                if (type != null) {\n                    type.attributes = attrs;\n                }\n            }\n            return new Override(name.toString(), type, null);\n        }\n        _diagnostic() {\n            // diagnostic(severity_control_name, diagnostic_rule_name)\n            this._consume(TokenTypes.tokens.paren_left, \"Expected '('\");\n            const severity = this._consume(TokenTypes.tokens.ident, \"Expected severity control name.\");\n            this._consume(TokenTypes.tokens.comma, \"Expected ','\");\n            const rule = this._consume(TokenTypes.tokens.ident, \"Expected diagnostic rule name.\");\n            this._consume(TokenTypes.tokens.paren_right, \"Expected ')'\");\n            return new Diagnostic(severity.toString(), rule.toString());\n        }\n        _enable_directive() {\n            // enable ident semicolon\n            const name = this._consume(TokenTypes.tokens.ident, \"identity expected.\");\n            return new Enable(name.toString());\n        }\n        _requires_directive() {\n            // requires extension [, extension]* semicolon\n            const extensions = [this._consume(TokenTypes.tokens.ident, \"identity expected.\").toString()];\n            while (this._match(TokenTypes.tokens.comma)) {\n                const name = this._consume(TokenTypes.tokens.ident, \"identity expected.\");\n                extensions.push(name.toString());\n            }\n            return new Requires(extensions);\n        }\n        _type_alias() {\n            // type ident equal type_decl\n            const name = this._consume(TokenTypes.tokens.ident, \"identity expected.\");\n            this._consume(TokenTypes.tokens.equal, \"Expected '=' for type alias.\");\n            let aliasType = this._type_decl();\n            if (aliasType === null) {\n                throw this._error(this._peek(), \"Expected Type for Alias.\");\n            }\n            if (this._context.aliases.has(aliasType.name)) {\n                aliasType = this._context.aliases.get(aliasType.name).type;\n            }\n            const aliasNode = new Alias(name.toString(), aliasType);\n            this._context.aliases.set(aliasNode.name, aliasNode);\n            return aliasNode;\n        }\n        _type_decl() {\n            // ident\n            // bool\n            // float32\n            // int32\n            // uint32\n            // vec2 less_than type_decl greater_than\n            // vec3 less_than type_decl greater_than\n            // vec4 less_than type_decl greater_than\n            // mat2x2 less_than type_decl greater_than\n            // mat2x3 less_than type_decl greater_than\n            // mat2x4 less_than type_decl greater_than\n            // mat3x2 less_than type_decl greater_than\n            // mat3x3 less_than type_decl greater_than\n            // mat3x4 less_than type_decl greater_than\n            // mat4x2 less_than type_decl greater_than\n            // mat4x3 less_than type_decl greater_than\n            // mat4x4 less_than type_decl greater_than\n            // atomic less_than type_decl greater_than\n            // pointer less_than storage_class comma type_decl (comma access_mode)? greater_than\n            // array_type_decl\n            // texture_sampler_types\n            if (this._check([\n                TokenTypes.tokens.ident,\n                ...TokenTypes.texel_format,\n                TokenTypes.keywords.bool,\n                TokenTypes.keywords.f32,\n                TokenTypes.keywords.i32,\n                TokenTypes.keywords.u32,\n            ])) {\n                const type = this._advance();\n                const typeName = type.toString();\n                if (this._context.structs.has(typeName)) {\n                    return this._context.structs.get(typeName);\n                }\n                if (this._context.aliases.has(typeName)) {\n                    return this._context.aliases.get(typeName).type;\n                }\n                return new Type(type.toString());\n            }\n            // texture_sampler_types\n            let type = this._texture_sampler_types();\n            if (type) {\n                return type;\n            }\n            if (this._check(TokenTypes.template_types)) {\n                let type = this._advance().toString();\n                let format = null;\n                let access = null;\n                if (this._match(TokenTypes.tokens.less_than)) {\n                    format = this._type_decl();\n                    access = null;\n                    if (this._match(TokenTypes.tokens.comma)) {\n                        access = this._consume(TokenTypes.access_mode, \"Expected access_mode for pointer\").toString();\n                    }\n                    this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for type.\");\n                }\n                return new TemplateType(type, format, access);\n            }\n            // pointer less_than storage_class comma type_decl (comma access_mode)? greater_than\n            if (this._match(TokenTypes.keywords.ptr)) {\n                let pointer = this._previous().toString();\n                this._consume(TokenTypes.tokens.less_than, \"Expected '<' for pointer.\");\n                const storage = this._consume(TokenTypes.storage_class, \"Expected storage_class for pointer\");\n                this._consume(TokenTypes.tokens.comma, \"Expected ',' for pointer.\");\n                const decl = this._type_decl();\n                let access = null;\n                if (this._match(TokenTypes.tokens.comma)) {\n                    access = this._consume(TokenTypes.access_mode, \"Expected access_mode for pointer\").toString();\n                }\n                this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for pointer.\");\n                return new PointerType(pointer, storage.toString(), decl, access);\n            }\n            // The following type_decl's have an optional attribyte_list*\n            const attrs = this._attribute();\n            // attribute* array\n            // attribute* array less_than type_decl (comma element_count_expression)? greater_than\n            if (this._match(TokenTypes.keywords.array)) {\n                let format = null;\n                let countInt = -1;\n                const array = this._previous();\n                let countNode = null;\n                if (this._match(TokenTypes.tokens.less_than)) {\n                    format = this._type_decl();\n                    if (this._context.aliases.has(format.name)) {\n                        format = this._context.aliases.get(format.name).type;\n                    }\n                    let count = \"\";\n                    if (this._match(TokenTypes.tokens.comma)) {\n                        countNode = this._shift_expression();\n                        // If we can't evaluate the node, defer evaluating it until after the shader has\n                        // finished being parsed, because const statements can be declared **after** they\n                        // are used.\n                        try {\n                            count = countNode.evaluate(this._context).toString();\n                            countNode = null;\n                        }\n                        catch (e) {\n                            count = \"1\";\n                        }\n                    }\n                    this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for array.\");\n                    countInt = count ? parseInt(count) : 0;\n                }\n                const arrayType = new ArrayType(array.toString(), attrs, format, countInt);\n                if (countNode) {\n                    this._deferArrayCountEval.push({ arrayType, countNode });\n                }\n                return arrayType;\n            }\n            return null;\n        }\n        _texture_sampler_types() {\n            // sampler_type\n            if (this._match(TokenTypes.sampler_type)) {\n                return new SamplerType(this._previous().toString(), null, null);\n            }\n            // depth_texture_type\n            if (this._match(TokenTypes.depth_texture_type)) {\n                return new SamplerType(this._previous().toString(), null, null);\n            }\n            // sampled_texture_type less_than type_decl greater_than\n            // multisampled_texture_type less_than type_decl greater_than\n            if (this._match(TokenTypes.sampled_texture_type) ||\n                this._match(TokenTypes.multisampled_texture_type)) {\n                const sampler = this._previous();\n                this._consume(TokenTypes.tokens.less_than, \"Expected '<' for sampler type.\");\n                const format = this._type_decl();\n                this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for sampler type.\");\n                return new SamplerType(sampler.toString(), format, null);\n            }\n            // storage_texture_type less_than texel_format comma access_mode greater_than\n            if (this._match(TokenTypes.storage_texture_type)) {\n                const sampler = this._previous();\n                this._consume(TokenTypes.tokens.less_than, \"Expected '<' for sampler type.\");\n                const format = this._consume(TokenTypes.texel_format, \"Invalid texel format.\").toString();\n                this._consume(TokenTypes.tokens.comma, \"Expected ',' after texel format.\");\n                const access = this._consume(TokenTypes.access_mode, \"Expected access mode for storage texture type.\").toString();\n                this._consume(TokenTypes.tokens.greater_than, \"Expected '>' for sampler type.\");\n                return new SamplerType(sampler.toString(), format, access);\n            }\n            return null;\n        }\n        _attribute() {\n            // attr ident paren_left (literal_or_ident comma)* literal_or_ident paren_right\n            // attr ident\n            let attributes = [];\n            while (this._match(TokenTypes.tokens.attr)) {\n                const name = this._consume(TokenTypes.attribute_name, \"Expected attribute name\");\n                const attr = new Attribute(name.toString(), null);\n                if (this._match(TokenTypes.tokens.paren_left)) {\n                    // literal_or_ident\n                    attr.value = this._consume(TokenTypes.literal_or_ident, \"Expected attribute value\").toString();\n                    if (this._check(TokenTypes.tokens.comma)) {\n                        this._advance();\n                        do {\n                            const v = this._consume(TokenTypes.literal_or_ident, \"Expected attribute value\").toString();\n                            if (!(attr.value instanceof Array)) {\n                                attr.value = [attr.value];\n                            }\n                            attr.value.push(v);\n                        } while (this._match(TokenTypes.tokens.comma));\n                    }\n                    this._consume(TokenTypes.tokens.paren_right, \"Expected ')'\");\n                }\n                attributes.push(attr);\n            }\n            // Deprecated:\n            // attr_left (attribute comma)* attribute attr_right\n            while (this._match(TokenTypes.tokens.attr_left)) {\n                if (!this._check(TokenTypes.tokens.attr_right)) {\n                    do {\n                        const name = this._consume(TokenTypes.attribute_name, \"Expected attribute name\");\n                        const attr = new Attribute(name.toString(), null);\n                        if (this._match(TokenTypes.tokens.paren_left)) {\n                            // literal_or_ident\n                            attr.value = [\n                                this._consume(TokenTypes.literal_or_ident, \"Expected attribute value\").toString(),\n                            ];\n                            if (this._check(TokenTypes.tokens.comma)) {\n                                this._advance();\n                                do {\n                                    const v = this._consume(TokenTypes.literal_or_ident, \"Expected attribute value\").toString();\n                                    attr.value.push(v);\n                                } while (this._match(TokenTypes.tokens.comma));\n                            }\n                            this._consume(TokenTypes.tokens.paren_right, \"Expected ')'\");\n                        }\n                        attributes.push(attr);\n                    } while (this._match(TokenTypes.tokens.comma));\n                }\n                // Consume ]]\n                this._consume(TokenTypes.tokens.attr_right, \"Expected ']]' after attribute declarations\");\n            }\n            if (attributes.length == 0) {\n                return null;\n            }\n            return attributes;\n        }\n    }\n\n    /**\n     * @author Brendan Duncan / https://github.com/brendan-duncan\n     */\n    class TypeInfo {\n        constructor(name, attributes) {\n            this.name = name;\n            this.attributes = attributes;\n            this.size = 0;\n        }\n        get isArray() {\n            return false;\n        }\n        get isStruct() {\n            return false;\n        }\n        get isTemplate() {\n            return false;\n        }\n    }\n    class MemberInfo {\n        constructor(name, type, attributes) {\n            this.name = name;\n            this.type = type;\n            this.attributes = attributes;\n            this.offset = 0;\n            this.size = 0;\n        }\n        get isArray() {\n            return this.type.isArray;\n        }\n        get isStruct() {\n            return this.type.isStruct;\n        }\n        get isTemplate() {\n            return this.type.isTemplate;\n        }\n        get align() {\n            return this.type.isStruct ? this.type.align : 0;\n        }\n        get members() {\n            return this.type.isStruct ? this.type.members : null;\n        }\n        get format() {\n            return this.type.isArray\n                ? this.type.format\n                : this.type.isTemplate\n                    ? this.type.format\n                    : null;\n        }\n        get count() {\n            return this.type.isArray ? this.type.count : 0;\n        }\n        get stride() {\n            return this.type.isArray ? this.type.stride : this.size;\n        }\n    }\n    class StructInfo extends TypeInfo {\n        constructor(name, attributes) {\n            super(name, attributes);\n            this.members = [];\n            this.align = 0;\n            this.startLine = -1;\n            this.endLine = -1;\n            this.inUse = false;\n        }\n        get isStruct() {\n            return true;\n        }\n    }\n    class ArrayInfo extends TypeInfo {\n        constructor(name, attributes) {\n            super(name, attributes);\n            this.count = 0;\n            this.stride = 0;\n        }\n        get isArray() {\n            return true;\n        }\n    }\n    class TemplateInfo extends TypeInfo {\n        constructor(name, format, attributes, access) {\n            super(name, attributes);\n            this.format = format;\n            this.access = access;\n        }\n        get isTemplate() {\n            return true;\n        }\n    }\n    var ResourceType;\n    (function (ResourceType) {\n        ResourceType[ResourceType[\"Uniform\"] = 0] = \"Uniform\";\n        ResourceType[ResourceType[\"Storage\"] = 1] = \"Storage\";\n        ResourceType[ResourceType[\"Texture\"] = 2] = \"Texture\";\n        ResourceType[ResourceType[\"Sampler\"] = 3] = \"Sampler\";\n        ResourceType[ResourceType[\"StorageTexture\"] = 4] = \"StorageTexture\";\n    })(ResourceType || (ResourceType = {}));\n    class VariableInfo {\n        constructor(name, type, group, binding, attributes, resourceType, access) {\n            this.name = name;\n            this.type = type;\n            this.group = group;\n            this.binding = binding;\n            this.attributes = attributes;\n            this.resourceType = resourceType;\n            this.access = access;\n        }\n        get isArray() {\n            return this.type.isArray;\n        }\n        get isStruct() {\n            return this.type.isStruct;\n        }\n        get isTemplate() {\n            return this.type.isTemplate;\n        }\n        get size() {\n            return this.type.size;\n        }\n        get align() {\n            return this.type.isStruct ? this.type.align : 0;\n        }\n        get members() {\n            return this.type.isStruct ? this.type.members : null;\n        }\n        get format() {\n            return this.type.isArray\n                ? this.type.format\n                : this.type.isTemplate\n                    ? this.type.format\n                    : null;\n        }\n        get count() {\n            return this.type.isArray ? this.type.count : 0;\n        }\n        get stride() {\n            return this.type.isArray ? this.type.stride : this.size;\n        }\n    }\n    class AliasInfo {\n        constructor(name, type) {\n            this.name = name;\n            this.type = type;\n        }\n    }\n    class _TypeSize {\n        constructor(align, size) {\n            this.align = align;\n            this.size = size;\n        }\n    }\n    class InputInfo {\n        constructor(name, type, locationType, location) {\n            this.name = name;\n            this.type = type;\n            this.locationType = locationType;\n            this.location = location;\n            this.interpolation = null;\n        }\n    }\n    class OutputInfo {\n        constructor(name, type, locationType, location) {\n            this.name = name;\n            this.type = type;\n            this.locationType = locationType;\n            this.location = location;\n        }\n    }\n    class FunctionInfo {\n        constructor(name, stage = null) {\n            this.stage = null;\n            this.inputs = [];\n            this.outputs = [];\n            this.resources = [];\n            this.startLine = -1;\n            this.endLine = -1;\n            this.inUse = false;\n            this.calls = new Set();\n            this.name = name;\n            this.stage = stage;\n        }\n    }\n    class EntryFunctions {\n        constructor() {\n            this.vertex = [];\n            this.fragment = [];\n            this.compute = [];\n        }\n    }\n    class OverrideInfo {\n        constructor(name, type, attributes, id) {\n            this.name = name;\n            this.type = type;\n            this.attributes = attributes;\n            this.id = id;\n        }\n    }\n    class _FunctionResources {\n        constructor(node) {\n            this.resources = null;\n            this.inUse = false;\n            this.info = null;\n            this.node = node;\n        }\n    }\n    class WgslReflect {\n        constructor(code) {\n            /// All top-level uniform vars in the shader.\n            this.uniforms = [];\n            /// All top-level storage vars in the shader.\n            this.storage = [];\n            /// All top-level texture vars in the shader;\n            this.textures = [];\n            // All top-level sampler vars in the shader.\n            this.samplers = [];\n            /// All top-level type aliases in the shader.\n            this.aliases = [];\n            /// All top-level overrides in the shader.\n            this.overrides = [];\n            /// All top-level structs in the shader.\n            this.structs = [];\n            /// All entry functions in the shader: vertex, fragment, and/or compute.\n            this.entry = new EntryFunctions();\n            /// All functions in the shader, including entry functions.\n            this.functions = [];\n            this._types = new Map();\n            this._functions = new Map();\n            if (code) {\n                this.update(code);\n            }\n        }\n        _isStorageTexture(type) {\n            return (type.name == \"texture_storage_1d\" ||\n                type.name == \"texture_storage_2d\" ||\n                type.name == \"texture_storage_2d_array\" ||\n                type.name == \"texture_storage_3d\");\n        }\n        update(code) {\n            const parser = new WgslParser();\n            const ast = parser.parse(code);\n            for (const node of ast) {\n                if (node instanceof Function) {\n                    this._functions.set(node.name, new _FunctionResources(node));\n                }\n            }\n            for (const node of ast) {\n                if (node instanceof Struct) {\n                    const info = this._getTypeInfo(node, null);\n                    if (info instanceof StructInfo) {\n                        this.structs.push(info);\n                    }\n                }\n            }\n            for (const node of ast) {\n                if (node instanceof Alias) {\n                    this.aliases.push(this._getAliasInfo(node));\n                    continue;\n                }\n                if (node instanceof Override) {\n                    const v = node;\n                    const id = this._getAttributeNum(v.attributes, \"id\", 0);\n                    const type = v.type != null ? this._getTypeInfo(v.type, v.attributes) : null;\n                    this.overrides.push(new OverrideInfo(v.name, type, v.attributes, id));\n                    continue;\n                }\n                if (this._isUniformVar(node)) {\n                    const v = node;\n                    const g = this._getAttributeNum(v.attributes, \"group\", 0);\n                    const b = this._getAttributeNum(v.attributes, \"binding\", 0);\n                    const type = this._getTypeInfo(v.type, v.attributes);\n                    const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, ResourceType.Uniform, v.access);\n                    this.uniforms.push(varInfo);\n                    continue;\n                }\n                if (this._isStorageVar(node)) {\n                    const v = node;\n                    const g = this._getAttributeNum(v.attributes, \"group\", 0);\n                    const b = this._getAttributeNum(v.attributes, \"binding\", 0);\n                    const type = this._getTypeInfo(v.type, v.attributes);\n                    const isStorageTexture = this._isStorageTexture(type);\n                    const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, isStorageTexture ? ResourceType.StorageTexture : ResourceType.Storage, v.access);\n                    this.storage.push(varInfo);\n                    continue;\n                }\n                if (this._isTextureVar(node)) {\n                    const v = node;\n                    const g = this._getAttributeNum(v.attributes, \"group\", 0);\n                    const b = this._getAttributeNum(v.attributes, \"binding\", 0);\n                    const type = this._getTypeInfo(v.type, v.attributes);\n                    const isStorageTexture = this._isStorageTexture(type);\n                    const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, isStorageTexture ? ResourceType.StorageTexture : ResourceType.Texture, v.access);\n                    if (isStorageTexture) {\n                        this.storage.push(varInfo);\n                    }\n                    else {\n                        this.textures.push(varInfo);\n                    }\n                    continue;\n                }\n                if (this._isSamplerVar(node)) {\n                    const v = node;\n                    const g = this._getAttributeNum(v.attributes, \"group\", 0);\n                    const b = this._getAttributeNum(v.attributes, \"binding\", 0);\n                    const type = this._getTypeInfo(v.type, v.attributes);\n                    const varInfo = new VariableInfo(v.name, type, g, b, v.attributes, ResourceType.Sampler, v.access);\n                    this.samplers.push(varInfo);\n                    continue;\n                }\n                if (node instanceof Function) {\n                    const vertexStage = this._getAttribute(node, \"vertex\");\n                    const fragmentStage = this._getAttribute(node, \"fragment\");\n                    const computeStage = this._getAttribute(node, \"compute\");\n                    const stage = vertexStage || fragmentStage || computeStage;\n                    const fn = new FunctionInfo(node.name, stage === null || stage === void 0 ? void 0 : stage.name);\n                    fn.startLine = node.startLine;\n                    fn.endLine = node.endLine;\n                    this.functions.push(fn);\n                    this._functions.get(node.name).info = fn;\n                    if (stage) {\n                        this._functions.get(node.name).inUse = true;\n                        fn.inUse = true;\n                        fn.resources = this._findResources(node, !!stage);\n                        fn.inputs = this._getInputs(node.args);\n                        fn.outputs = this._getOutputs(node.returnType);\n                        this.entry[stage.name].push(fn);\n                    }\n                    continue;\n                }\n            }\n            for (const fn of this._functions.values()) {\n                if (fn.info) {\n                    fn.info.inUse = fn.inUse;\n                    this._addCalls(fn.node, fn.info.calls);\n                }\n            }\n            for (const u of this.uniforms) {\n                this._markStructsInUse(u.type);\n            }\n            for (const s of this.storage) {\n                this._markStructsInUse(s.type);\n            }\n        }\n        _markStructsInUse(type) {\n            if (type.isStruct) {\n                type.inUse = true;\n                for (const m of type.members) {\n                    this._markStructsInUse(m.type);\n                }\n            }\n            else if (type.isArray) {\n                this._markStructsInUse(type.format);\n            }\n            else if (type.isTemplate) {\n                this._markStructsInUse(type.format);\n            }\n            else {\n                const alias = this._getAlias(type.name);\n                if (alias) {\n                    this._markStructsInUse(alias);\n                }\n            }\n        }\n        _addCalls(fn, calls) {\n            var _a;\n            for (const call of fn.calls) {\n                const info = (_a = this._functions.get(call.name)) === null || _a === void 0 ? void 0 : _a.info;\n                if (info) {\n                    calls.add(info);\n                }\n            }\n        }\n        /// Find a resource by its group and binding.\n        findResource(group, binding) {\n            for (const u of this.uniforms) {\n                if (u.group == group && u.binding == binding) {\n                    return u;\n                }\n            }\n            for (const s of this.storage) {\n                if (s.group == group && s.binding == binding) {\n                    return s;\n                }\n            }\n            for (const t of this.textures) {\n                if (t.group == group && t.binding == binding) {\n                    return t;\n                }\n            }\n            for (const s of this.samplers) {\n                if (s.group == group && s.binding == binding) {\n                    return s;\n                }\n            }\n            return null;\n        }\n        _findResource(name) {\n            for (const u of this.uniforms) {\n                if (u.name == name) {\n                    return u;\n                }\n            }\n            for (const s of this.storage) {\n                if (s.name == name) {\n                    return s;\n                }\n            }\n            for (const t of this.textures) {\n                if (t.name == name) {\n                    return t;\n                }\n            }\n            for (const s of this.samplers) {\n                if (s.name == name) {\n                    return s;\n                }\n            }\n            return null;\n        }\n        _markStructsFromAST(type) {\n            const info = this._getTypeInfo(type, null);\n            this._markStructsInUse(info);\n        }\n        _findResources(fn, isEntry) {\n            const resources = [];\n            const self = this;\n            const varStack = [];\n            fn.search((node) => {\n                if (node instanceof _BlockStart) {\n                    varStack.push({});\n                }\n                else if (node instanceof _BlockEnd) {\n                    varStack.pop();\n                }\n                else if (node instanceof Var) {\n                    const v = node;\n                    if (isEntry && v.type !== null) {\n                        this._markStructsFromAST(v.type);\n                    }\n                    if (varStack.length > 0) {\n                        varStack[varStack.length - 1][v.name] = v;\n                    }\n                }\n                else if (node instanceof CreateExpr) {\n                    const c = node;\n                    if (isEntry && c.type !== null) {\n                        this._markStructsFromAST(c.type);\n                    }\n                }\n                else if (node instanceof Let) {\n                    const v = node;\n                    if (isEntry && v.type !== null) {\n                        this._markStructsFromAST(v.type);\n                    }\n                    if (varStack.length > 0) {\n                        varStack[varStack.length - 1][v.name] = v;\n                    }\n                }\n                else if (node instanceof VariableExpr) {\n                    const v = node;\n                    // Check to see if the variable is a local variable before checking to see if it's\n                    // a resource.\n                    if (varStack.length > 0) {\n                        const varInfo = varStack[varStack.length - 1][v.name];\n                        if (varInfo) {\n                            return;\n                        }\n                    }\n                    const varInfo = self._findResource(v.name);\n                    if (varInfo) {\n                        resources.push(varInfo);\n                    }\n                }\n                else if (node instanceof CallExpr) {\n                    const c = node;\n                    const callFn = self._functions.get(c.name);\n                    if (callFn) {\n                        if (isEntry) {\n                            callFn.inUse = true;\n                        }\n                        fn.calls.add(callFn.node);\n                        if (callFn.resources === null) {\n                            callFn.resources = self._findResources(callFn.node, isEntry);\n                        }\n                        resources.push(...callFn.resources);\n                    }\n                }\n                else if (node instanceof Call) {\n                    const c = node;\n                    const callFn = self._functions.get(c.name);\n                    if (callFn) {\n                        if (isEntry) {\n                            callFn.inUse = true;\n                        }\n                        fn.calls.add(callFn.node);\n                        if (callFn.resources === null) {\n                            callFn.resources = self._findResources(callFn.node, isEntry);\n                        }\n                        resources.push(...callFn.resources);\n                    }\n                }\n            });\n            return [...new Map(resources.map(r => [r.name, r])).values()];\n        }\n        getBindGroups() {\n            const groups = [];\n            function _makeRoom(group, binding) {\n                if (group >= groups.length) {\n                    groups.length = group + 1;\n                }\n                if (groups[group] === undefined) {\n                    groups[group] = [];\n                }\n                if (binding >= groups[group].length) {\n                    groups[group].length = binding + 1;\n                }\n            }\n            for (const u of this.uniforms) {\n                _makeRoom(u.group, u.binding);\n                const group = groups[u.group];\n                group[u.binding] = u;\n            }\n            for (const u of this.storage) {\n                _makeRoom(u.group, u.binding);\n                const group = groups[u.group];\n                group[u.binding] = u;\n            }\n            for (const t of this.textures) {\n                _makeRoom(t.group, t.binding);\n                const group = groups[t.group];\n                group[t.binding] = t;\n            }\n            for (const t of this.samplers) {\n                _makeRoom(t.group, t.binding);\n                const group = groups[t.group];\n                group[t.binding] = t;\n            }\n            return groups;\n        }\n        _getOutputs(type, outputs = undefined) {\n            if (outputs === undefined) {\n                outputs = [];\n            }\n            if (type instanceof Struct) {\n                this._getStructOutputs(type, outputs);\n            }\n            else {\n                const output = this._getOutputInfo(type);\n                if (output !== null) {\n                    outputs.push(output);\n                }\n            }\n            return outputs;\n        }\n        _getStructOutputs(struct, outputs) {\n            for (const m of struct.members) {\n                if (m.type instanceof Struct) {\n                    this._getStructOutputs(m.type, outputs);\n                }\n                else {\n                    const location = this._getAttribute(m, \"location\") || this._getAttribute(m, \"builtin\");\n                    if (location !== null) {\n                        const typeInfo = this._getTypeInfo(m.type, m.type.attributes);\n                        const locationValue = this._parseInt(location.value);\n                        const info = new OutputInfo(m.name, typeInfo, location.name, locationValue);\n                        outputs.push(info);\n                    }\n                }\n            }\n        }\n        _getOutputInfo(type) {\n            const location = this._getAttribute(type, \"location\") ||\n                this._getAttribute(type, \"builtin\");\n            if (location !== null) {\n                const typeInfo = this._getTypeInfo(type, type.attributes);\n                const locationValue = this._parseInt(location.value);\n                const info = new OutputInfo(\"\", typeInfo, location.name, locationValue);\n                return info;\n            }\n            return null;\n        }\n        _getInputs(args, inputs = undefined) {\n            if (inputs === undefined) {\n                inputs = [];\n            }\n            for (const arg of args) {\n                if (arg.type instanceof Struct) {\n                    this._getStructInputs(arg.type, inputs);\n                }\n                else {\n                    const input = this._getInputInfo(arg);\n                    if (input !== null) {\n                        inputs.push(input);\n                    }\n                }\n            }\n            return inputs;\n        }\n        _getStructInputs(struct, inputs) {\n            for (const m of struct.members) {\n                if (m.type instanceof Struct) {\n                    this._getStructInputs(m.type, inputs);\n                }\n                else {\n                    const input = this._getInputInfo(m);\n                    if (input !== null) {\n                        inputs.push(input);\n                    }\n                }\n            }\n        }\n        _getInputInfo(node) {\n            const location = this._getAttribute(node, \"location\") ||\n                this._getAttribute(node, \"builtin\");\n            if (location !== null) {\n                const interpolation = this._getAttribute(node, \"interpolation\");\n                const type = this._getTypeInfo(node.type, node.attributes);\n                const locationValue = this._parseInt(location.value);\n                const info = new InputInfo(node.name, type, location.name, locationValue);\n                if (interpolation !== null) {\n                    info.interpolation = this._parseString(interpolation.value);\n                }\n                return info;\n            }\n            return null;\n        }\n        _parseString(s) {\n            if (s instanceof Array) {\n                s = s[0];\n            }\n            return s;\n        }\n        _parseInt(s) {\n            if (s instanceof Array) {\n                s = s[0];\n            }\n            const n = parseInt(s);\n            return isNaN(n) ? s : n;\n        }\n        _getAlias(name) {\n            for (const a of this.aliases) {\n                if (a.name == name) {\n                    return a.type;\n                }\n            }\n            return null;\n        }\n        _getAliasInfo(node) {\n            return new AliasInfo(node.name, this._getTypeInfo(node.type, null));\n        }\n        _getTypeInfo(type, attributes) {\n            if (this._types.has(type)) {\n                return this._types.get(type);\n            }\n            if (type instanceof ArrayType) {\n                const a = type;\n                const t = this._getTypeInfo(a.format, a.attributes);\n                const info = new ArrayInfo(a.name, attributes);\n                info.format = t;\n                info.count = a.count;\n                this._types.set(type, info);\n                this._updateTypeInfo(info);\n                return info;\n            }\n            if (type instanceof Struct) {\n                const s = type;\n                const info = new StructInfo(s.name, attributes);\n                info.startLine = s.startLine;\n                info.endLine = s.endLine;\n                for (const m of s.members) {\n                    const t = this._getTypeInfo(m.type, m.attributes);\n                    info.members.push(new MemberInfo(m.name, t, m.attributes));\n                }\n                this._types.set(type, info);\n                this._updateTypeInfo(info);\n                return info;\n            }\n            if (type instanceof SamplerType) {\n                const s = type;\n                const formatIsType = s.format instanceof Type;\n                const format = s.format\n                    ? formatIsType\n                        ? this._getTypeInfo(s.format, null)\n                        : new TypeInfo(s.format, null)\n                    : null;\n                const info = new TemplateInfo(s.name, format, attributes, s.access);\n                this._types.set(type, info);\n                this._updateTypeInfo(info);\n                return info;\n            }\n            if (type instanceof TemplateType) {\n                const t = type;\n                const format = t.format ? this._getTypeInfo(t.format, null) : null;\n                const info = new TemplateInfo(t.name, format, attributes, t.access);\n                this._types.set(type, info);\n                this._updateTypeInfo(info);\n                return info;\n            }\n            const info = new TypeInfo(type.name, attributes);\n            this._types.set(type, info);\n            this._updateTypeInfo(info);\n            return info;\n        }\n        _updateTypeInfo(type) {\n            var _a, _b;\n            const typeSize = this._getTypeSize(type);\n            type.size = (_a = typeSize === null || typeSize === void 0 ? void 0 : typeSize.size) !== null && _a !== void 0 ? _a : 0;\n            if (type instanceof ArrayInfo) {\n                const formatInfo = this._getTypeSize(type[\"format\"]);\n                type.stride = (_b = formatInfo === null || formatInfo === void 0 ? void 0 : formatInfo.size) !== null && _b !== void 0 ? _b : 0;\n                this._updateTypeInfo(type[\"format\"]);\n            }\n            if (type instanceof StructInfo) {\n                this._updateStructInfo(type);\n            }\n        }\n        _updateStructInfo(struct) {\n            var _a;\n            let offset = 0;\n            let lastSize = 0;\n            let lastOffset = 0;\n            let structAlign = 0;\n            for (let mi = 0, ml = struct.members.length; mi < ml; ++mi) {\n                const member = struct.members[mi];\n                const sizeInfo = this._getTypeSize(member);\n                if (!sizeInfo) {\n                    continue;\n                }\n                (_a = this._getAlias(member.type.name)) !== null && _a !== void 0 ? _a : member.type;\n                const align = sizeInfo.align;\n                const size = sizeInfo.size;\n                offset = this._roundUp(align, offset + lastSize);\n                lastSize = size;\n                lastOffset = offset;\n                structAlign = Math.max(structAlign, align);\n                member.offset = offset;\n                member.size = size;\n                this._updateTypeInfo(member.type);\n            }\n            struct.size = this._roundUp(structAlign, lastOffset + lastSize);\n            struct.align = structAlign;\n        }\n        _getTypeSize(type) {\n            var _a;\n            if (type === null || type === undefined) {\n                return null;\n            }\n            const explicitSize = this._getAttributeNum(type.attributes, \"size\", 0);\n            const explicitAlign = this._getAttributeNum(type.attributes, \"align\", 0);\n            if (type instanceof MemberInfo) {\n                type = type.type;\n            }\n            if (type instanceof TypeInfo) {\n                const alias = this._getAlias(type.name);\n                if (alias !== null) {\n                    type = alias;\n                }\n            }\n            {\n                const info = WgslReflect._typeInfo[type.name];\n                if (info !== undefined) {\n                    const divisor = type[\"format\"] === \"f16\" ? 2 : 1;\n                    return new _TypeSize(Math.max(explicitAlign, info.align / divisor), Math.max(explicitSize, info.size / divisor));\n                }\n            }\n            {\n                const info = WgslReflect._typeInfo[type.name.substring(0, type.name.length - 1)];\n                if (info) {\n                    const divisor = type.name[type.name.length - 1] === \"h\" ? 2 : 1;\n                    return new _TypeSize(Math.max(explicitAlign, info.align / divisor), Math.max(explicitSize, info.size / divisor));\n                }\n            }\n            if (type instanceof ArrayInfo) {\n                let arrayType = type;\n                let align = 8;\n                let size = 8;\n                // Type                 AlignOf(T)          Sizeof(T)\n                // array<E, N>          AlignOf(E)          N * roundUp(AlignOf(E), SizeOf(E))\n                // array<E>             AlignOf(E)          N * roundUp(AlignOf(E), SizeOf(E))  (N determined at runtime)\n                //\n                // @stride(Q)\n                // array<E, N>          AlignOf(E)          N * Q\n                //\n                // @stride(Q)\n                // array<E>             AlignOf(E)          Nruntime * Q\n                //const E = type.format.name;\n                const E = this._getTypeSize(arrayType.format);\n                if (E !== null) {\n                    size = E.size;\n                    align = E.align;\n                }\n                const N = arrayType.count;\n                const stride = this._getAttributeNum((_a = type === null || type === void 0 ? void 0 : type.attributes) !== null && _a !== void 0 ? _a : null, \"stride\", this._roundUp(align, size));\n                size = N * stride;\n                if (explicitSize) {\n                    size = explicitSize;\n                }\n                return new _TypeSize(Math.max(explicitAlign, align), Math.max(explicitSize, size));\n            }\n            if (type instanceof StructInfo) {\n                let align = 0;\n                let size = 0;\n                // struct S     AlignOf:    max(AlignOfMember(S, M1), ... , AlignOfMember(S, MN))\n                //              SizeOf:     roundUp(AlignOf(S), OffsetOfMember(S, L) + SizeOfMember(S, L))\n                //                          Where L is the last member of the structure\n                let offset = 0;\n                let lastSize = 0;\n                let lastOffset = 0;\n                for (const m of type.members) {\n                    const mi = this._getTypeSize(m.type);\n                    if (mi !== null) {\n                        align = Math.max(mi.align, align);\n                        offset = this._roundUp(mi.align, offset + lastSize);\n                        lastSize = mi.size;\n                        lastOffset = offset;\n                    }\n                }\n                size = this._roundUp(align, lastOffset + lastSize);\n                return new _TypeSize(Math.max(explicitAlign, align), Math.max(explicitSize, size));\n            }\n            return null;\n        }\n        _isUniformVar(node) {\n            return node instanceof Var && node.storage == \"uniform\";\n        }\n        _isStorageVar(node) {\n            return node instanceof Var && node.storage == \"storage\";\n        }\n        _isTextureVar(node) {\n            return (node instanceof Var &&\n                node.type !== null &&\n                WgslReflect._textureTypes.indexOf(node.type.name) != -1);\n        }\n        _isSamplerVar(node) {\n            return (node instanceof Var &&\n                node.type !== null &&\n                WgslReflect._samplerTypes.indexOf(node.type.name) != -1);\n        }\n        _getAttribute(node, name) {\n            const obj = node;\n            if (!obj || !obj[\"attributes\"]) {\n                return null;\n            }\n            const attrs = obj[\"attributes\"];\n            for (let a of attrs) {\n                if (a.name == name) {\n                    return a;\n                }\n            }\n            return null;\n        }\n        _getAttributeNum(attributes, name, defaultValue) {\n            if (attributes === null) {\n                return defaultValue;\n            }\n            for (let a of attributes) {\n                if (a.name == name) {\n                    let v = a !== null && a.value !== null ? a.value : defaultValue;\n                    if (v instanceof Array) {\n                        v = v[0];\n                    }\n                    if (typeof v === \"number\") {\n                        return v;\n                    }\n                    if (typeof v === \"string\") {\n                        return parseInt(v);\n                    }\n                    return defaultValue;\n                }\n            }\n            return defaultValue;\n        }\n        _roundUp(k, n) {\n            return Math.ceil(n / k) * k;\n        }\n    }\n    // Type                 AlignOf(T)          Sizeof(T)\n    // i32, u32, or f32     4                   4\n    // atomic<T>            4                   4\n    // vec2<T>              8                   8\n    // vec3<T>              16                  12\n    // vec4<T>              16                  16\n    // mat2x2<f32>          8                   16\n    // mat3x2<f32>          8                   24\n    // mat4x2<f32>          8                   32\n    // mat2x3<f32>          16                  32\n    // mat3x3<f32>          16                  48\n    // mat4x3<f32>          16                  64\n    // mat2x4<f32>          16                  32\n    // mat3x4<f32>          16                  48\n    // mat4x4<f32>          16                  64\n    WgslReflect._typeInfo = {\n        f16: { align: 2, size: 2 },\n        i32: { align: 4, size: 4 },\n        u32: { align: 4, size: 4 },\n        f32: { align: 4, size: 4 },\n        atomic: { align: 4, size: 4 },\n        vec2: { align: 8, size: 8 },\n        vec3: { align: 16, size: 12 },\n        vec4: { align: 16, size: 16 },\n        mat2x2: { align: 8, size: 16 },\n        mat3x2: { align: 8, size: 24 },\n        mat4x2: { align: 8, size: 32 },\n        mat2x3: { align: 16, size: 32 },\n        mat3x3: { align: 16, size: 48 },\n        mat4x3: { align: 16, size: 64 },\n        mat2x4: { align: 16, size: 32 },\n        mat3x4: { align: 16, size: 48 },\n        mat4x4: { align: 16, size: 64 },\n    };\n    WgslReflect._textureTypes = TokenTypes.any_texture_type.map((t) => {\n        return t.name;\n    });\n    WgslReflect._samplerTypes = TokenTypes.sampler_type.map((t) => {\n        return t.name;\n    });\n\n    function getEntryPointForStage(defs, stage, stageFlags) {\n        const { entryPoint: entryPointName } = stage;\n        if (entryPointName) {\n            const ep = defs.entryPoints[entryPointName];\n            return (ep && ep.stage === stageFlags) ? ep : undefined;\n        }\n        return Object.values(defs.entryPoints).filter(ep => ep.stage === stageFlags)[0];\n    }\n    function getStageResources(defs, stage, stageFlags) {\n        if (!stage) {\n            return [];\n        }\n        const entryPoint = getEntryPointForStage(defs, stage, stageFlags);\n        return entryPoint?.resources || [];\n    }\n    const byBinding = (a, b) => Math.sign(a.binding - b.binding);\n    /**\n     * Gets GPUBindGroupLayoutDescriptors for the given pipeline.\n     *\n     * Important: Assumes you pipeline is valid (it doesn't check for errors).\n     *\n     * Note: In WebGPU some layouts must be specified manually. For example an unfiltered-float\n     *    sampler can not be derived since it is unknown at compile time pipeline creation time\n     *    which texture you'll use.\n     *\n     * MAINTENANCE_TODO: Add example\n     *\n     * @param defs ShaderDataDefinitions or an array of ShaderDataDefinitions as\n     *    returned from @link {makeShaderDataDefinitions}. If an array more than 1\n     *    definition it's assumed the vertex shader is in the first and the fragment\n     *    shader in the second.\n     * @param desc A PipelineDescriptor. You should be able to pass in the same object you passed\n     *    to `createRenderPipeline` or `createComputePipeline`.\n     * @returns An array of GPUBindGroupLayoutDescriptors which you can pass, one at a time, to\n     *    `createBindGroupLayout`. Note: the array will be sparse if there are gaps in group\n     *    numbers. Note: Each GPUBindGroupLayoutDescriptor.entries will be sorted by binding.\n     */\n    function makeBindGroupLayoutDescriptors(defs, desc) {\n        defs = Array.isArray(defs) ? defs : [defs];\n        const resources = [\n            ...getStageResources(defs[0], desc.vertex, GPUShaderStage.VERTEX),\n            ...getStageResources(defs[defs.length - 1], desc.fragment, GPUShaderStage.FRAGMENT),\n            ...getStageResources(defs[0], desc.compute, GPUShaderStage.COMPUTE),\n        ];\n        const bindGroupLayoutDescriptorsByGroupByBinding = [];\n        for (const resource of resources) {\n            const bindingsToBindGroupEntry = bindGroupLayoutDescriptorsByGroupByBinding[resource.group] || new Map();\n            bindGroupLayoutDescriptorsByGroupByBinding[resource.group] = bindingsToBindGroupEntry;\n            // Should we error here if the 2 don't match?\n            const entry = bindingsToBindGroupEntry.get(resource.entry.binding);\n            bindingsToBindGroupEntry.set(resource.entry.binding, {\n                ...resource.entry,\n                visibility: resource.entry.visibility | (entry?.visibility || 0),\n            });\n        }\n        const descriptors = bindGroupLayoutDescriptorsByGroupByBinding.map(v => ({ entries: [...v.values()].sort(byBinding) }));\n        for (let i = 0; i < descriptors.length; ++i) {\n            if (!descriptors[i]) {\n                descriptors[i] = { entries: [] };\n            }\n        }\n        return descriptors;\n    }\n    function getNamedVariables(reflect, variables) {\n        return Object.fromEntries(variables.map(v => {\n            const typeDefinition = addVariableType(reflect, v, 0);\n            return [\n                v.name,\n                {\n                    typeDefinition,\n                    group: v.group,\n                    binding: v.binding,\n                    size: typeDefinition.size,\n                },\n            ];\n        }));\n    }\n    function makeStructDefinition(reflect, structInfo, offset) {\n        // StructDefinition\n        const fields = Object.fromEntries(structInfo.members.map(m => {\n            return [\n                m.name,\n                {\n                    offset: m.offset,\n                    type: addType(reflect, m.type, 0),\n                },\n            ];\n        }));\n        return {\n            fields,\n            size: structInfo.size,\n            offset,\n        };\n    }\n    function getTextureSampleType(type) {\n        if (type.name.includes('depth')) {\n            return 'depth';\n        }\n        // unfiltered-float\n        switch (type.format?.name) {\n            case 'f32': return 'float';\n            case 'i32': return 'sint';\n            case 'u32': return 'uint';\n            default:\n                throw new Error('unknown texture sample type');\n        }\n    }\n    function getViewDimension(type) {\n        if (type.name.includes('2d_array')) {\n            return '2d-array';\n        }\n        if (type.name.includes('cube_array')) {\n            return 'cube-array';\n        }\n        if (type.name.includes('3d')) {\n            return '3d';\n        }\n        if (type.name.includes('1d')) {\n            return '1d';\n        }\n        if (type.name.includes('cube')) {\n            return 'cube';\n        }\n        return '2d';\n    }\n    function getStorageTextureAccess(type) {\n        switch (type.access) {\n            case 'read': return 'read-only';\n            case 'write': return 'write-only';\n            case 'read_write': return 'read-write';\n            default:\n                throw new Error('unknonw storage texture access');\n        }\n    }\n    function getSamplerType(type) {\n        // \"non-filtering\" can only be specified manually.\n        return type.name.endsWith('_comparison')\n            ? 'comparison'\n            : 'filtering';\n    }\n    function getBindGroupLayoutEntry(resource, visibility) {\n        const { binding, access, type } = resource;\n        switch (resource.resourceType) {\n            case ResourceType.Uniform:\n                return {\n                    binding,\n                    visibility,\n                    buffer: {},\n                };\n            case ResourceType.Storage:\n                return {\n                    binding,\n                    visibility,\n                    buffer: {\n                        type: (access === '' || access === 'read') ? 'read-only-storage' : 'storage',\n                    },\n                };\n            case ResourceType.Texture: {\n                if (type.name === 'texture_external') {\n                    return {\n                        binding,\n                        visibility,\n                        externalTexture: {},\n                    };\n                }\n                const multisampled = type.name.includes('multisampled');\n                return {\n                    binding,\n                    visibility,\n                    texture: {\n                        sampleType: getTextureSampleType(type),\n                        viewDimension: getViewDimension(type),\n                        multisampled,\n                    },\n                };\n            }\n            case ResourceType.Sampler:\n                return {\n                    binding,\n                    visibility,\n                    sampler: {\n                        type: getSamplerType(type),\n                    },\n                };\n            case ResourceType.StorageTexture:\n                return {\n                    binding,\n                    visibility,\n                    storageTexture: {\n                        access: getStorageTextureAccess(type),\n                        format: type.format.name,\n                        viewDimension: getViewDimension(type),\n                    },\n                };\n            default:\n                throw new Error('unknown resource type');\n        }\n    }\n    function addEntryPoints(funcInfos, stage) {\n        const entryPoints = {};\n        for (const info of funcInfos) {\n            entryPoints[info.name] = {\n                stage,\n                resources: info.resources.map(resource => {\n                    const { name, group } = resource;\n                    return {\n                        name,\n                        group,\n                        entry: getBindGroupLayoutEntry(resource, stage),\n                    };\n                }),\n            };\n        }\n        return entryPoints;\n    }\n    /**\n     * Given a WGSL shader, returns data definitions for structures,\n     * uniforms, and storage buffers\n     *\n     * Example:\n     *\n     * ```js\n     * const code = `\n     * struct MyStruct {\n     *    color: vec4f,\n     *    brightness: f32,\n     *    kernel: array<f32, 9>,\n     * };\n     * @group(0) @binding(0) var<uniform> myUniforms: MyUniforms;\n     * `;\n     * const defs = makeShaderDataDefinitions(code);\n     * const myUniformValues = makeStructuredView(defs.uniforms.myUniforms);\n     *\n     * myUniformValues.set({\n     *   color: [1, 0, 1, 1],\n     *   brightness: 0.8,\n     *   kernel: [\n     *      1, 0, -1,\n     *      2, 0, -2,\n     *      1, 0, -1,\n     *   ],\n     * });\n     * device.queue.writeBuffer(uniformBuffer, 0, myUniformValues.arrayBuffer);\n     * ```\n     *\n     * @param code WGSL shader. Note: it is not required for this to be a complete shader\n     * @returns definitions of the structures by name. Useful for passing to {@link makeStructuredView}\n     */\n    function makeShaderDataDefinitions(code) {\n        const reflect = new WgslReflect(code);\n        const structs = Object.fromEntries(reflect.structs.map(structInfo => {\n            return [structInfo.name, makeStructDefinition(reflect, structInfo, 0)];\n        }));\n        const uniforms = getNamedVariables(reflect, reflect.uniforms);\n        const storages = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === ResourceType.Storage));\n        const storageTextures = getNamedVariables(reflect, reflect.storage.filter(v => v.resourceType === ResourceType.StorageTexture));\n        const textures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name !== 'texture_external'));\n        const externalTextures = getNamedVariables(reflect, reflect.textures.filter(v => v.type.name === 'texture_external'));\n        const samplers = getNamedVariables(reflect, reflect.samplers);\n        const entryPoints = {\n            ...addEntryPoints(reflect.entry.vertex, GPUShaderStage.VERTEX),\n            ...addEntryPoints(reflect.entry.fragment, GPUShaderStage.FRAGMENT),\n            ...addEntryPoints(reflect.entry.compute, GPUShaderStage.COMPUTE),\n        };\n        return {\n            externalTextures,\n            samplers,\n            structs,\n            storages,\n            storageTextures,\n            textures,\n            uniforms,\n            entryPoints,\n        };\n    }\n    function assert$1(cond, msg = '') {\n        if (!cond) {\n            throw new Error(msg);\n        }\n    }\n    /*\n     write down what I want for a given type\n\n        struct VSUniforms {\n            foo: u32,\n        };\n        @group(4) @binding(1) var<uniform> uni1: f32;\n        @group(3) @binding(2) var<uniform> uni2: array<f32, 5>;\n        @group(2) @binding(3) var<uniform> uni3: VSUniforms;\n        @group(1) @binding(4) var<uniform> uni4: array<VSUniforms, 6>;\n\n        uni1: {\n            type: 'f32',\n            numElements: undefined\n        },\n        uni2: {\n            type: 'array',\n            elementType: 'f32'\n            numElements: 5,\n        },\n        uni3: {\n            type: 'struct',\n            fields: {\n                foo: {\n                    type: 'f32',\n                    numElements: undefined\n                }\n            },\n        },\n        uni4: {\n            type: 'array',\n            elementType:\n            fields: {\n                foo: {\n                    type: 'f32',\n                    numElements: undefined\n                }\n            },\n            fields: {\n                foo: {\n                    type: 'f32',\n                    numElements: undefined\n                }\n            },\n            ...\n        ]\n\n        */\n    function addVariableType(reflect, v, offset) {\n        switch (v.resourceType) {\n            case ResourceType.Uniform:\n            case ResourceType.Storage:\n            case ResourceType.StorageTexture:\n                return addType(reflect, v.type, offset);\n            default:\n                return {\n                    size: 0,\n                    type: v.type.name,\n                };\n        }\n    }\n    function addType(reflect, typeInfo, offset) {\n        if (typeInfo.isArray) {\n            assert$1(!typeInfo.isStruct, 'struct array is invalid');\n            assert$1(!typeInfo.isStruct, 'template array is invalid');\n            const arrayInfo = typeInfo;\n            // ArrayDefinition\n            return {\n                size: arrayInfo.size,\n                elementType: addType(reflect, arrayInfo.format, offset),\n                numElements: arrayInfo.count,\n            };\n        }\n        else if (typeInfo.isStruct) {\n            assert$1(!typeInfo.isTemplate, 'template struct is invalid');\n            const structInfo = typeInfo;\n            return makeStructDefinition(reflect, structInfo, offset);\n        }\n        else {\n            // template is like vec4<f32> or mat4x4<f16>\n            const asTemplateInfo = typeInfo;\n            const type = typeInfo.isTemplate\n                ? `${asTemplateInfo.name}<${asTemplateInfo.format.name}>`\n                : typeInfo.name;\n            // IntrinsicDefinition\n            return {\n                size: typeInfo.size,\n                type: type,\n            };\n        }\n    }\n\n    const kTypedArrayToAttribFormat = new Map([\n        [Int8Array, { formats: ['sint8', 'snorm8'], defaultForType: 1 }],\n        [Uint8Array, { formats: ['uint8', 'unorm8'], defaultForType: 1 }],\n        [Int16Array, { formats: ['sint16', 'snorm16'], defaultForType: 1 }],\n        [Uint16Array, { formats: ['uint16', 'unorm16'], defaultForType: 1 }],\n        [Int32Array, { formats: ['sint32', 'snorm32'], defaultForType: 0 }],\n        [Uint32Array, { formats: ['uint32', 'unorm32'], defaultForType: 0 }],\n        [Float32Array, { formats: ['float32', 'float32'], defaultForType: 0 }],\n        // TODO: Add Float16Array\n    ]);\n    new Map([...kTypedArrayToAttribFormat.entries()].map(([Type, { formats: [s1, s2] }]) => [[s1, Type], [s2, Type]]).flat());\n\n    // exported from the WebGPU CTS by adding the following line to src/webgpu/format_info.ts\n    //\n    //    console.log(JSON.stringify(kAllTextureFormatInfo, null, 2));\n    /** `kDepthStencilFormatResolvedAspect[format][aspect]` returns the aspect-specific format for a\n     *  depth-stencil format, or `undefined` if the format doesn't have the aspect.\n     */\n    const kDepthStencilFormatResolvedAspect = {\n        // kUnsizedDepthStencilFormats\n        depth24plus: {\n            all: 'depth24plus',\n            'depth-only': 'depth24plus',\n            'stencil-only': undefined,\n        },\n        'depth24plus-stencil8': {\n            all: 'depth24plus-stencil8',\n            'depth-only': 'depth24plus',\n            'stencil-only': 'stencil8',\n        },\n        // kSizedDepthStencilFormats\n        depth16unorm: {\n            all: 'depth16unorm',\n            'depth-only': 'depth16unorm',\n            'stencil-only': undefined,\n        },\n        depth32float: {\n            all: 'depth32float',\n            'depth-only': 'depth32float',\n            'stencil-only': undefined,\n        },\n        'depth32float-stencil8': {\n            all: 'depth32float-stencil8',\n            'depth-only': 'depth32float',\n            'stencil-only': 'stencil8',\n        },\n        stencil8: {\n            all: 'stencil8',\n            'depth-only': undefined,\n            'stencil-only': 'stencil8',\n        },\n    };\n    function getDepthStencilFormatResolvedAspect(format, aspect) {\n        const info = kDepthStencilFormatResolvedAspect[format];\n        return info ? info[aspect] : undefined;\n    }\n    const kAllTextureFormatInfo = {\n        \"r8unorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 1,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 1\n        },\n        \"r8snorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 1\n        },\n        \"r8uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 1,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 1\n        },\n        \"r8sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 1,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 1\n        },\n        \"rg8unorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 2,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"rg8snorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 2\n        },\n        \"rg8uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 2,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"rg8sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 2,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"rgba8unorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 8,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"baseFormat\": \"rgba8unorm\",\n            \"bytesPerBlock\": 4\n        },\n        \"rgba8unorm-srgb\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 8,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"baseFormat\": \"rgba8unorm\",\n            \"bytesPerBlock\": 4\n        },\n        \"rgba8snorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 4\n        },\n        \"rgba8uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rgba8sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"bgra8unorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 8,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"baseFormat\": \"bgra8unorm\",\n            \"bytesPerBlock\": 4\n        },\n        \"bgra8unorm-srgb\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 8,\n                \"alignment\": 1\n            },\n            \"multisample\": true,\n            \"baseFormat\": \"bgra8unorm\",\n            \"bytesPerBlock\": 4\n        },\n        \"r16uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 2,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"r16sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 2,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"r16float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 2,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"rg16uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rg16sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rg16float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 4,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rgba16uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 8,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 8\n        },\n        \"rgba16sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 8,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 8\n        },\n        \"rgba16float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 8,\n                \"alignment\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 8\n        },\n        \"r32uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": true,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 4\n        },\n        \"r32sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": true,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 4\n        },\n        \"r32float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"unfilterable-float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": true,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 4,\n                \"alignment\": 4\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rg32uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 8,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 8\n        },\n        \"rg32sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 8,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 8\n        },\n        \"rg32float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"unfilterable-float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 8,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 8\n        },\n        \"rgba32uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 16,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 16\n        },\n        \"rgba32sint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"sint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 16,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 16\n        },\n        \"rgba32float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"unfilterable-float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": true,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 16,\n                \"alignment\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 16\n        },\n        \"rgb10a2uint\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": false,\n                \"resolve\": false,\n                \"byteCost\": 8,\n                \"alignment\": 4\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rgb10a2unorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"colorRender\": {\n                \"blend\": true,\n                \"resolve\": true,\n                \"byteCost\": 8,\n                \"alignment\": 4\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"rg11b10ufloat\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 4\n        },\n        \"rgb9e5ufloat\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"multisample\": false,\n            \"bytesPerBlock\": 4\n        },\n        \"stencil8\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"stencil\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 1\n        },\n        \"depth16unorm\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"depth\": {\n                \"type\": \"depth\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 2\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 2\n        },\n        \"depth32float\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"depth\": {\n                \"type\": \"depth\",\n                \"copySrc\": true,\n                \"copyDst\": false,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"multisample\": true,\n            \"bytesPerBlock\": 4\n        },\n        \"depth24plus\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"depth\": {\n                \"type\": \"depth\",\n                \"copySrc\": false,\n                \"copyDst\": false,\n                \"storage\": false,\n                \"readWriteStorage\": false\n            },\n            \"multisample\": true\n        },\n        \"depth24plus-stencil8\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"depth\": {\n                \"type\": \"depth\",\n                \"copySrc\": false,\n                \"copyDst\": false,\n                \"storage\": false,\n                \"readWriteStorage\": false\n            },\n            \"stencil\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"multisample\": true\n        },\n        \"depth32float-stencil8\": {\n            \"blockWidth\": 1,\n            \"blockHeight\": 1,\n            \"depth\": {\n                \"type\": \"depth\",\n                \"copySrc\": true,\n                \"copyDst\": false,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 4\n            },\n            \"stencil\": {\n                \"type\": \"uint\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 1\n            },\n            \"multisample\": true,\n            \"feature\": \"depth32float-stencil8\"\n        },\n        \"bc1-rgba-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc1-rgba-unorm\",\n            \"bytesPerBlock\": 8\n        },\n        \"bc1-rgba-unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc1-rgba-unorm\",\n            \"bytesPerBlock\": 8\n        },\n        \"bc2-rgba-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc2-rgba-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc2-rgba-unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc2-rgba-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc3-rgba-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc3-rgba-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc3-rgba-unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc3-rgba-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc4-r-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"bytesPerBlock\": 8\n        },\n        \"bc4-r-snorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"bytesPerBlock\": 8\n        },\n        \"bc5-rg-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc5-rg-snorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc6h-rgb-ufloat\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc6h-rgb-float\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc7-rgba-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc7-rgba-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"bc7-rgba-unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-bc\",\n            \"baseFormat\": \"bc7-rgba-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"etc2-rgb8unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"baseFormat\": \"etc2-rgb8unorm\",\n            \"bytesPerBlock\": 8\n        },\n        \"etc2-rgb8unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"baseFormat\": \"etc2-rgb8unorm\",\n            \"bytesPerBlock\": 8\n        },\n        \"etc2-rgb8a1unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"baseFormat\": \"etc2-rgb8a1unorm\",\n            \"bytesPerBlock\": 8\n        },\n        \"etc2-rgb8a1unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"baseFormat\": \"etc2-rgb8a1unorm\",\n            \"bytesPerBlock\": 8\n        },\n        \"etc2-rgba8unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"baseFormat\": \"etc2-rgba8unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"etc2-rgba8unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"baseFormat\": \"etc2-rgba8unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"eac-r11unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"bytesPerBlock\": 8\n        },\n        \"eac-r11snorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 8\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"bytesPerBlock\": 8\n        },\n        \"eac-rg11unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"bytesPerBlock\": 16\n        },\n        \"eac-rg11snorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-etc2\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-4x4-unorm\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-4x4-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-4x4-unorm-srgb\": {\n            \"blockWidth\": 4,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-4x4-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-5x4-unorm\": {\n            \"blockWidth\": 5,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-5x4-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-5x4-unorm-srgb\": {\n            \"blockWidth\": 5,\n            \"blockHeight\": 4,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-5x4-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-5x5-unorm\": {\n            \"blockWidth\": 5,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-5x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-5x5-unorm-srgb\": {\n            \"blockWidth\": 5,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-5x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-6x5-unorm\": {\n            \"blockWidth\": 6,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-6x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-6x5-unorm-srgb\": {\n            \"blockWidth\": 6,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-6x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-6x6-unorm\": {\n            \"blockWidth\": 6,\n            \"blockHeight\": 6,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-6x6-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-6x6-unorm-srgb\": {\n            \"blockWidth\": 6,\n            \"blockHeight\": 6,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-6x6-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-8x5-unorm\": {\n            \"blockWidth\": 8,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-8x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-8x5-unorm-srgb\": {\n            \"blockWidth\": 8,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-8x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-8x6-unorm\": {\n            \"blockWidth\": 8,\n            \"blockHeight\": 6,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-8x6-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-8x6-unorm-srgb\": {\n            \"blockWidth\": 8,\n            \"blockHeight\": 6,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-8x6-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-8x8-unorm\": {\n            \"blockWidth\": 8,\n            \"blockHeight\": 8,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-8x8-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-8x8-unorm-srgb\": {\n            \"blockWidth\": 8,\n            \"blockHeight\": 8,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-8x8-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x5-unorm\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x5-unorm-srgb\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 5,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x5-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x6-unorm\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 6,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x6-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x6-unorm-srgb\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 6,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x6-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x8-unorm\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 8,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x8-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x8-unorm-srgb\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 8,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x8-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x10-unorm\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 10,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x10-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-10x10-unorm-srgb\": {\n            \"blockWidth\": 10,\n            \"blockHeight\": 10,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-10x10-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-12x10-unorm\": {\n            \"blockWidth\": 12,\n            \"blockHeight\": 10,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-12x10-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-12x10-unorm-srgb\": {\n            \"blockWidth\": 12,\n            \"blockHeight\": 10,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-12x10-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-12x12-unorm\": {\n            \"blockWidth\": 12,\n            \"blockHeight\": 12,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-12x12-unorm\",\n            \"bytesPerBlock\": 16\n        },\n        \"astc-12x12-unorm-srgb\": {\n            \"blockWidth\": 12,\n            \"blockHeight\": 12,\n            \"color\": {\n                \"type\": \"float\",\n                \"copySrc\": true,\n                \"copyDst\": true,\n                \"storage\": false,\n                \"readWriteStorage\": false,\n                \"bytes\": 16\n            },\n            \"multisample\": false,\n            \"feature\": \"texture-compression-astc\",\n            \"baseFormat\": \"astc-12x12-unorm\",\n            \"bytesPerBlock\": 16\n        }\n    };\n\n    function bitmaskToString(bitNames, mask) {\n        const names = [];\n        for (const [k, v] of Object.entries(bitNames)) {\n            if (mask & v) {\n                names.push(k);\n            }\n        }\n        return names.join('|');\n    }\n    function bufferUsageToString(mask) {\n        return bitmaskToString(GPUBufferUsage, mask);\n    }\n    function textureUsageToString(mask) {\n        return bitmaskToString(GPUTextureUsage, mask);\n    }\n    function unreachable(msg) {\n        throw Error(`unreachable: ${''}`);\n    }\n    function roundUp(v, align) {\n        return Math.ceil(v / align) * align;\n    }\n    function trimNulls(a) {\n        const ndx = a.findLastIndex(v => v !== null);\n        return a.slice(0, ndx + 1);\n    }\n    function reifyGPUOrigin3D(e) {\n        e = e || [];\n        const d = e;\n        if (typeof d.x === 'number' || typeof d.y === 'number' || typeof d.z === 'number') {\n            return [\n                d.x ?? 0,\n                d.y ?? 0,\n                d.z ?? 0,\n            ];\n        }\n        const a = [...e];\n        return [\n            a[0] ?? 0,\n            a[1] ?? 0,\n            a[2] ?? 0,\n        ];\n    }\n    function reifyGPUExtent3D(e) {\n        const d = e;\n        if (typeof d.width === 'number') {\n            return [\n                d.width,\n                d.height ?? 1,\n                d.depthOrArrayLayers ?? 1,\n            ];\n        }\n        const a = [...e];\n        return [\n            a[0],\n            a[1] ?? 1,\n            a[2] ?? 1,\n        ];\n    }\n    function logicalMipLevelSpecificTextureExtent(texture, mipLevel) {\n        switch (texture.dimension) {\n            case '1d':\n                return [\n                    Math.max(1, texture.width >> mipLevel),\n                    1,\n                    1,\n                ];\n            case '2d':\n                return [\n                    Math.max(1, texture.width >> mipLevel),\n                    Math.max(1, texture.height >> mipLevel),\n                    texture.depthOrArrayLayers,\n                ];\n            case '3d':\n                return [\n                    Math.max(1, texture.width >> mipLevel),\n                    Math.max(1, texture.height >> mipLevel),\n                    Math.max(1, texture.depthOrArrayLayers >> mipLevel),\n                ];\n            default:\n                unreachable();\n                return [];\n        }\n    }\n    function physicalMipLevelSpecificTextureExtent(texture, mipLevel) {\n        const { blockWidth, blockHeight, } = kAllTextureFormatInfo[texture.format];\n        const [width, height, depthOrArrayLayers] = logicalMipLevelSpecificTextureExtent(texture, mipLevel);\n        switch (texture.dimension) {\n            case '1d':\n                return [\n                    roundUp(width, blockWidth),\n                    1,\n                    1,\n                ];\n            case '2d':\n            case '3d':\n                return [\n                    roundUp(width, blockWidth),\n                    roundUp(height, blockHeight),\n                    depthOrArrayLayers,\n                ];\n            default:\n                unreachable();\n                return [];\n        }\n    }\n\n    function getProperties(o) {\n        const keyValues = [];\n        for (const k in o) {\n            const v = o[k];\n            if (typeof v !== 'function') {\n                if (o instanceof GPUBuffer && k === 'usage') {\n                    keyValues.push(`${k}: ${v} (${bufferUsageToString(v)})`);\n                }\n                else if (o instanceof GPUTexture && k === 'usage') {\n                    keyValues.push(`${k}: ${v} (${textureUsageToString(v)})`);\n                }\n                else {\n                    keyValues.push(`${k}: ${JSON.stringify(v)}`);\n                }\n            }\n        }\n        return keyValues.join(', ');\n    }\n    function objToString(o) {\n        return `${o.constructor.name}(${o.label}){${getProperties(o)}}`;\n    }\n    function emitError(msg, objs = []) {\n        throw new Error(`${msg}\\n${(objs).map(o => objToString(o)).join('\\n')}`);\n    }\n    function assert(condition, msg, resources) {\n        if (!condition) {\n            const lines = (resources || []).map(r => `    ${objToString(r)}`).join('\\n');\n            const m = msg ? (typeof msg === 'string' ? msg : msg()) : '';\n            emitError(`${m}${lines ? `\\n${lines}` : ''}`);\n        }\n    }\n\n    function validateEncoderState(encoder, state) {\n        assert(state === 'open', () => `encoder state(${state}) is not \"open\"`, [encoder]);\n    }\n    const s_commandEncoderToInfoMap = new WeakMap();\n    function createCommandEncoder(commandEncoder) {\n        s_commandEncoderToInfoMap.set(commandEncoder, { state: 'open' });\n    }\n    function unlockCommandEncoder(commandEncoder) {\n        const info = s_commandEncoderToInfoMap.get(commandEncoder);\n        assert(info.state === 'locked');\n        info.state = 'open';\n    }\n    function lockCommandEncoder(commandEncoder) {\n        getCommandBufferInfoAndValidateState(commandEncoder).state = 'locked';\n    }\n    function finishCommandEncoder(commandEncoder) {\n        getCommandBufferInfoAndValidateState(commandEncoder).state = 'ended';\n    }\n    function getCommandBufferInfoAndValidateState(commandEncoder) {\n        const info = s_commandEncoderToInfoMap.get(commandEncoder);\n        validateEncoderState(commandEncoder, info.state);\n        return info;\n    }\n    //function validateBindGroups(this: PassEncoder, _: void) {\n    //  const {pipeline, bindGroups} = s_passToState.get(this)!;\n    //  if (!pipeline) {\n    //    emitError('no pipeline', [this]);\n    //    return;\n    //  }\n    //  // get bind group indices needed for current pipeline\n    //  const requiredGroupLayouts = s_pipelineToRequiredGroupLayouts.get(pipeline) || [];\n    //  for (const {ndx, layout: requiredLayout} of requiredGroupLayouts) {\n    //    const bindGroup = bindGroups[ndx];\n    //    if (!bindGroup) {\n    //      emitError(`no bindGroup at ndx: ${ndx}`);\n    //      return;\n    //    }\n    //\n    //    {\n    //      const error = validateBindGroupIsGroupEquivalent(requiredLayout, bindGroup);\n    //      if (error) {\n    //        emitError(error);\n    //        return;\n    //      }\n    //    }\n    //\n    //    {\n    //      const error = validateMinBindingSize(requiredLayout, bindGroup));\n    //      if (eror)\n    //      emitErr\n    //    }\n    //  }\n    //}\n\n    /**\n     * Adds a wrapper function to a class method that gets called before the actual function\n     */\n    function wrapFunctionBefore(API, fnName, fn) {\n        const origFn = API.prototype[fnName];\n        API.prototype[fnName] = function (...args) {\n            fn.call(this, args);\n            return origFn.call(this, ...args);\n        };\n    }\n    /**\n     * Adds a wrapper function to a class method that gets called after the actual function\n     */\n    function wrapFunctionAfter(API, fnName, fn) {\n        const origFn = API.prototype[fnName];\n        API.prototype[fnName] = function (...args) {\n            const result = origFn.call(this, ...args);\n            fn.call(this, result, args);\n            return result;\n        };\n    }\n    /**\n     * Adds a wrapper function to an async class method that gets called after the actual function\n     */\n    function wrapAsyncFunctionAfter(API, fnName, fn) {\n        const origFn = API.prototype[fnName];\n        API.prototype[fnName] = async function (...args) {\n            const result = await origFn.call(this, ...args);\n            fn.call(this, result, args);\n            return result;\n        };\n    }\n\n    // A normal GPUPipelineDescriptor just has references to GPUBindGroupLayout objects\n    // but we need the GPUBindGroupLayoutDescriptor for each. They don't exist for\n    const s_bindGroupLayoutToBindGroupLayoutDescriptorPlus = new WeakMap();\n    const s_pipelineLayoutToBindGroupLayoutDescriptorsPlus = new WeakMap();\n    // getBindGroupLayout always returns a different object which means we can't\n    // use it as a key in a map to look up it's layout descriptor ┌∩┐(◣_◢)┌∩┐\n    function trackNewBindGroupLayout(layout, [group]) {\n        // We need to associate this with it's BindGroupLayoutDescriptorPlus\n        const pipelineLayout = s_pipelineToReifiedPipelineLayoutDescriptor.get(this);\n        const descPlus = pipelineLayout.bindGroupLayoutDescriptors[group];\n        s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.set(layout, descPlus);\n    }\n    wrapFunctionAfter(GPUComputePipeline, 'getBindGroupLayout', trackNewBindGroupLayout);\n    wrapFunctionAfter(GPURenderPipeline, 'getBindGroupLayout', trackNewBindGroupLayout);\n    // We're using JSON.stringify to make a hash/id\n    // so we need the properties to be in the same order\n    function createRenderPassLayout(colorFormats, sampleCount, depthStencilFormat) {\n        return {\n            colorFormats,\n            sampleCount,\n            ...(depthStencilFormat && { depthStencilFormat }),\n        };\n    }\n    const s_renderPipelineToRenderPipelineDescriptor = new WeakMap();\n    const s_pipelineToReifiedPipelineLayoutDescriptor = new WeakMap();\n    function reifyConstants(c) {\n        return { ...c };\n    }\n    function reifyProgramableStage(ps) {\n        const { /*module,*/ entryPoint, constants } = ps;\n        return {\n            ...(entryPoint && { entryPoint }),\n            ...(constants && { constants: reifyConstants(constants) }),\n        };\n    }\n    function reifyVertexAttribute(attr) {\n        const { format, offset, shaderLocation } = attr;\n        return { format, offset, shaderLocation };\n    }\n    function reifyVertexBufferLayout(buffer) {\n        const { arrayStride, stepMode = 'vertex', attributes } = buffer;\n        return {\n            arrayStride,\n            stepMode,\n            attributes: [...attributes].map(reifyVertexAttribute),\n        };\n    }\n    function reifyVertexState(vertex) {\n        const { buffers } = vertex;\n        return {\n            ...reifyProgramableStage(vertex),\n            ...(buffers && { buffers: [...buffers].map(b => b ? reifyVertexBufferLayout(b) : null) }),\n        };\n    }\n    function reifyBlendComponent(bc) {\n        const { operation = 'add', srcFactor = 'one', dstFactor = 'zero' } = bc;\n        return {\n            operation,\n            srcFactor,\n            dstFactor,\n        };\n    }\n    function reifyBlendState(blend) {\n        return {\n            color: reifyBlendComponent(blend.color),\n            alpha: reifyBlendComponent(blend.alpha),\n        };\n    }\n    function reifyColorTargetState(cts) {\n        const { format, blend, writeMask } = cts;\n        return {\n            format,\n            ...(blend && { blend: reifyBlendState(blend) }),\n            writeMask: writeMask ?? 0xF,\n        };\n    }\n    function reifyFragmentState(fragment) {\n        return {\n            ...reifyProgramableStage(fragment),\n            targets: [...fragment.targets].map(t => t ? reifyColorTargetState(t) : null),\n        };\n    }\n    function reifyPrimitiveState(p) {\n        const { topology = 'triangle-list', stripIndexFormat, frontFace = 'ccw', cullMode = 'none',\n        // unclippedDepth,\n         } = p;\n        return {\n            topology,\n            ...(stripIndexFormat && { stripIndexFormat }),\n            frontFace,\n            cullMode,\n        };\n    }\n    function reifyStencilFaceState(sf) {\n        const { compare = \"always\", failOp = \"keep\", depthFailOp = \"keep\", passOp = \"keep\", } = sf;\n        return {\n            compare, failOp, depthFailOp, passOp,\n        };\n    }\n    function reifyDepthStencilState(ds) {\n        const { format, depthWriteEnabled, depthCompare, stencilFront, stencilBack, stencilReadMask = 0xFFFFFFFF, stencilWriteMask = 0xFFFFFFFF, depthBias = 0, depthBiasSlopeScale = 0, depthBiasClamp = 0, } = ds;\n        return {\n            format,\n            ...(depthCompare && { depthCompare }),\n            ...(depthWriteEnabled !== undefined && { depthWriteEnabled }),\n            ...(stencilFront && { stencilFront: reifyStencilFaceState(stencilFront) }),\n            ...(stencilBack && { stencilBack: reifyStencilFaceState(stencilBack) }),\n            stencilReadMask,\n            stencilWriteMask,\n            depthBias,\n            depthBiasSlopeScale,\n            depthBiasClamp,\n        };\n    }\n    function reifyMultisampleState(ms) {\n        const { count = 1, mask = 0xFFFFFFFF, alphaToCoverageEnabled = false, } = ms;\n        return { count, mask, alphaToCoverageEnabled };\n    }\n    function reifyRenderPipelineDescriptor(desc) {\n        const { vertex, fragment, primitive, depthStencil, multisample, } = desc;\n        const renderPassLayout = createRenderPassLayout(fragment ? trimNulls([...fragment.targets].map(t => t ? t.format : null)) : [], multisample?.count || 1, depthStencil?.format);\n        return {\n            vertex: reifyVertexState(vertex),\n            ...(fragment && reifyFragmentState(fragment)),\n            ...(primitive && reifyPrimitiveState(primitive)),\n            ...(depthStencil && reifyDepthStencilState(depthStencil)),\n            ...(multisample && reifyMultisampleState(multisample)),\n            passLayoutInfo: {\n                renderPassLayout,\n                passLayoutSignature: JSON.stringify(renderPassLayout),\n            },\n        };\n    }\n    function trackRenderPipelineDescriptor(pipeline, desc) {\n        s_renderPipelineToRenderPipelineDescriptor.set(pipeline, reifyRenderPipelineDescriptor(desc));\n    }\n\n    const s_destroyedResource = new WeakSet();\n    function assertNotDestroyed(obj) {\n        assert(!s_destroyedResource.has(obj), () => `${objToString(obj)} is destroyed`);\n    }\n    wrapFunctionBefore(GPUBuffer, 'destroy', function () {\n        s_destroyedResource.add(this);\n    });\n    wrapFunctionBefore(GPUTexture, 'destroy', function () {\n        s_destroyedResource.add(this);\n    });\n    wrapFunctionBefore(GPUQuerySet, 'destroy', function () {\n        s_destroyedResource.add(this);\n    });\n    wrapFunctionBefore(GPUDevice, 'destroy', function () {\n        s_destroyedResource.add(this);\n    });\n    const s_bindGroupToInfo = new WeakMap();\n\n    const s_textureViewToTexture = new WeakMap();\n    const s_textureViewToDesc = new WeakMap();\n    function resolveTextureAspect(format, aspect) {\n        switch (aspect) {\n            case 'all':\n                return format;\n            case 'depth-only':\n            case 'stencil-only':\n                return getDepthStencilFormatResolvedAspect(format, aspect);\n        }\n        return undefined;\n    }\n    function reifyTextureViewDescriptor(texture, desc) {\n        const dimension = desc?.dimension ?? (texture.dimension === '2d'\n            ? (texture.depthOrArrayLayers === 1 ? '2d' : '2d-array')\n            : texture.dimension);\n        const aspect = desc?.aspect ?? 'all';\n        let format = desc?.format;\n        if (!format) {\n            const f = resolveTextureAspect(texture.format, aspect);\n            format = f ?? texture.format;\n        }\n        return {\n            format,\n            dimension,\n            aspect,\n            baseMipLevel: desc?.baseMipLevel ?? 0,\n            mipLevelCount: desc?.mipLevelCount ?? (texture.mipLevelCount - (desc?.baseMipLevel ?? 0)),\n            baseArrayLayer: desc?.baseArrayLayer ?? 0,\n            arrayLayerCount: desc?.arrayLayerCount ?? (dimension === 'cube'\n                ? 6\n                : (dimension === '2d-array' || dimension === 'cube-array'\n                    ? texture.depthOrArrayLayers - (desc?.baseArrayLayer ?? 0)\n                    : 1)),\n        };\n    }\n    let lastDesc;\n    wrapFunctionBefore(GPUTexture, 'createView', function ([desc]) {\n        lastDesc = desc;\n    });\n    wrapFunctionAfter(GPUTexture, 'createView', function (view) {\n        s_textureViewToTexture.set(view, this);\n        s_textureViewToDesc.set(view, reifyTextureViewDescriptor(this, lastDesc));\n    });\n\n    function getResourceFromBindingResource(bindingResource) {\n        if (bindingResource instanceof GPUTextureView) {\n            return s_textureViewToTexture.get(bindingResource);\n        }\n        else if (bindingResource instanceof GPUSampler ||\n            bindingResource instanceof GPUExternalTexture) {\n            return bindingResource;\n        }\n        else {\n            return bindingResource.buffer;\n        }\n    }\n    const autoIdRE = /^(.*?)autoId\\((\\d+)\\)/;\n    function generateErrorMessageForMismatchedBindGroupLayouts(group, bindGroupInfo, bindGroupLayoutDescriptor) {\n        const bgAuto = autoIdRE.exec(bindGroupInfo.layoutPlus.signature);\n        const bglAuto = autoIdRE.exec(bindGroupLayoutDescriptor.signature);\n        if (bgAuto || bglAuto) {\n            // are they both auto?\n            if (!bgAuto === !bglAuto) {\n                if (bgAuto[2] !== bglAuto[2]) {\n                    return `bindGroup in group(${group}) is not compatible with pipeline requirements for that group \\\nbecause they are from different layout: 'auto' pipelines.`;\n                }\n            }\n            else {\n                return `bindGroup in group(${group}) is not compatible with pipeline requirements for that group \\\nbecause bindGroup's layout ${bgAuto ? 'is' : 'is not'} from a layout: 'auto' pipeline \\\nand the pipeline's bindGroup layout requirements ${bglAuto ? 'is' : 'is not'} from a layout: 'auto' pipeline`;\n            }\n        }\n        return `bindGroup in group(${group}) is not compatible with pipeline requirements for that group\n\nbindGroup.layout = ${JSON.stringify(bindGroupInfo.layoutPlus.bindGroupLayoutDescriptor, null, 2)}\n\npipeline.group[${group}] requirements = ${JSON.stringify(bindGroupLayoutDescriptor.bindGroupLayoutDescriptor, null, 2)}`;\n    }\n    //function validateEncoderBindGroupsDoNotAliasAWritableResource() {\n    //  //\n    //}\n    function validateEncoderBindGroups(bindGroups, pipeline) {\n        assert(!!pipeline, 'no pipeline set');\n        const device = s_objToDevice.get(pipeline);\n        const reifiedPipelineDescriptor = s_pipelineToReifiedPipelineLayoutDescriptor.get(pipeline);\n        reifiedPipelineDescriptor.bindGroupLayoutDescriptors.forEach((bindGroupLayoutDescriptor, group) => {\n            const binding = bindGroups[group];\n            assert(!!binding, () => `required bindGroup missing from group(${group})`);\n            const bindGroupInfo = s_bindGroupToInfo.get(binding.bindGroup);\n            assert(bindGroupInfo.layoutPlus.signature === bindGroupLayoutDescriptor.signature, () => generateErrorMessageForMismatchedBindGroupLayouts(group, bindGroupInfo, bindGroupLayoutDescriptor));\n            for (const { binding, resource: bindingResource } of bindGroupInfo.entries) {\n                const resource = getResourceFromBindingResource(bindingResource);\n                if (resource instanceof GPUTexture || resource instanceof GPUBuffer) {\n                    assertNotDestroyed(resource);\n                }\n                assert(s_objToDevice.get(resource) === device, () => `texture at binding(${binding}) group(${group}) is not from same device`, [resource]);\n            }\n        });\n        const bindGroupSpaceUsed = 0;\n        return bindGroupSpaceUsed;\n    }\n    function validateBindGroupResourcesNotDestroyed(entries) {\n        for (const { resource } of entries) {\n            if (resource instanceof GPUTextureView) {\n                const texture = s_textureViewToTexture.get(resource);\n                assertNotDestroyed(texture);\n            }\n            else {\n                const asBufferBinding = resource;\n                const buffer = asBufferBinding.buffer;\n                if (buffer instanceof GPUBuffer) {\n                    assertNotDestroyed(buffer);\n                }\n            }\n        }\n    }\n    [\n        GPUShaderStage.VERTEX,\n        GPUShaderStage.FRAGMENT,\n        GPUShaderStage.COMPUTE,\n    ];\n    function* forEachDynamicBinding(info) {\n        let dynamicOffsetIndex = 0;\n        for (const entry of info.entries) {\n            const bindingDescriptor = info.layoutPlus.entriesById[entry.binding];\n            if (bindingDescriptor.buffer?.hasDynamicOffset) {\n                const bufferBinding = entry.resource;\n                const bufferLayout = bindingDescriptor.buffer;\n                yield { bufferBinding, bufferLayout, dynamicOffsetIndex };\n                ++dynamicOffsetIndex;\n            }\n        }\n    }\n    function wrapBindingCommandsMixin(API, s_passToPassInfoMap) {\n        wrapFunctionBefore(API, 'setBindGroup', function ([index, bindGroup, dynamicOffsetsArg, dynamicOffsetDataStart, dynamicOffsetDataLength]) {\n            const info = s_passToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            const bindGroupBindings = info.bindGroups;\n            const dynamicOffsetCount = bindGroup\n                ? s_bindGroupToInfo.get(bindGroup).layoutPlus.dynamicOffsetCount\n                : 0;\n            dynamicOffsetsArg = dynamicOffsetsArg ? new Uint32Array(dynamicOffsetsArg) : new Uint32Array(0);\n            dynamicOffsetDataStart = dynamicOffsetDataStart ?? 0;\n            dynamicOffsetDataLength = dynamicOffsetDataLength ?? dynamicOffsetsArg.length;\n            const dynamicOffsets = dynamicOffsetsArg.slice(dynamicOffsetDataStart, dynamicOffsetDataLength);\n            assert(dynamicOffsets.length === dynamicOffsetCount, `there must be the same number of dynamicOffsets(${dynamicOffsets.length}) as the layout requires (${dynamicOffsetCount})`);\n            const device = s_objToDevice.get(this);\n            const maxIndex = device.limits.maxBindGroups;\n            assert(index >= 0, () => `index(${index}) must be >= 0`);\n            assert(index < maxIndex, () => `index(${index}) must be < device.limits.maxBindGroups(${maxIndex})`);\n            if (bindGroup) {\n                assert(device === s_objToDevice.get(bindGroup), () => `bindGroup must be from same device as ${parent.constructor.name}`, [bindGroup, parent]);\n                // Validate resources are not destroyed\n                const info = s_bindGroupToInfo.get(bindGroup);\n                validateBindGroupResourcesNotDestroyed(info.entries);\n                // Validate Dynamic Offsets\n                for (const { bufferBinding, bufferLayout, dynamicOffsetIndex } of forEachDynamicBinding(info)) {\n                    const dynamicOffset = dynamicOffsets[dynamicOffsetIndex];\n                    assert((bufferBinding.offset || 0) + dynamicOffset + (bufferLayout.minBindingSize || 0) <= bufferBinding.buffer.size, 'dynamic offset is out of range');\n                    switch (bufferLayout.type) {\n                        case 'uniform':\n                            assert(dynamicOffset % device.limits.minUniformBufferOffsetAlignment === 0, () => `dynamicOffset[${dynamicOffsetIndex}](${dynamicOffset}) used for a uniform buffer is not a multiple of device.limits.minUniformBufferOffsetAlignment(${device.limits.minUniformBufferOffsetAlignment})`);\n                            break;\n                        case 'storage':\n                        case 'read-only-storage':\n                            assert(dynamicOffset % device.limits.minStorageBufferOffsetAlignment === 0, () => `dynamicOffset[${dynamicOffsetIndex}](${dynamicOffset}) used for a uniform buffer is not a multiple of device.limits.minStorageBufferOffsetAlignment(${device.limits.minStorageBufferOffsetAlignment})`);\n                            break;\n                    }\n                }\n                bindGroupBindings[index] = {\n                    bindGroup,\n                    dynamicOffsets,\n                };\n            }\n            else {\n                bindGroupBindings[index] = undefined;\n            }\n        });\n    }\n\n    function toArray(v) {\n        return Array.isArray(v) ? v : [...v];\n    }\n    function validateValidToDraw(mixin, info, fn) {\n        const bindGroupSpaceUsed = validateEncoderBindGroups(info.bindGroups, info.pipeline);\n        const pipelineDescriptor = s_renderPipelineToRenderPipelineDescriptor.get(info.pipeline);\n        const device = s_objToDevice.get(mixin);\n        let vertexBufferSpaceUsed = 0;\n        if (pipelineDescriptor.vertex.buffers) {\n            // buffers is sequence so no forEach, convert to array\n            const buffers = toArray(pipelineDescriptor.vertex.buffers);\n            buffers.forEach((buffer, slot) => {\n                if (buffer) {\n                    const vertexBufferBinding = info.vertexBuffers[slot];\n                    assert(!!vertexBufferBinding, () => `no vertexBuffer in slot(${slot})`);\n                    assertNotDestroyed(vertexBufferBinding.buffer);\n                    fn(slot, buffer, vertexBufferBinding);\n                    // don't need to check that vertex buffer is same device as was checked at setVertexBuffer\n                    vertexBufferSpaceUsed = slot;\n                }\n            });\n        }\n        // TODO: test!\n        assert(bindGroupSpaceUsed + vertexBufferSpaceUsed <= device.limits.maxBindGroupsPlusVertexBuffers, () => `bindGroupSpaceUsed(${bindGroupSpaceUsed}) + vertexBufferSpaceUsed(${vertexBufferSpaceUsed}) <= device.limits.maxBindGroupsPlusVertexBuffers(${device.limits.maxBindGroupsPlusVertexBuffers})`);\n    }\n    function validateValidToDrawIndexed(mixin, info, fn) {\n        assert(!!info.indexBuffer, 'indexBuffer is not set');\n        const device = s_objToDevice.get(mixin);\n        assertNotDestroyed(info.indexBuffer.buffer);\n        assert(device === s_objToDevice.get(info.indexBuffer.buffer), 'indexBuffer is not from same device');\n        validateValidToDraw(mixin, info, fn);\n        const pipelineDescriptor = s_renderPipelineToRenderPipelineDescriptor.get(info.pipeline);\n        switch (pipelineDescriptor.primitive?.topology) {\n            case 'line-strip':\n            case 'triangle-strip':\n                assert(info.indexFormat === pipelineDescriptor.primitive?.stripIndexFormat, () => `indexFormat(${info.indexFormat}) !== pipeline.primitive.stripIndexFormat(${pipelineDescriptor.primitive?.stripIndexFormat})`);\n        }\n    }\n    function bufferSizeFromBufferBinding({ buffer, offset, size }) {\n        offset = offset ?? 0;\n        return size ?? buffer.size - offset;\n    }\n    const kVertexFormatInfo = {\n        \"uint8x2\": { components: 2, bytes: 2, type: \"vec2<u32>\" },\n        \"uint8x4\": { components: 4, bytes: 4, type: \"vec4<u32>\" },\n        \"sint8x2\": { components: 2, bytes: 2, type: \"vec2<i32>\" },\n        \"sint8x4\": { components: 4, bytes: 4, type: \"vec4<i32>\" },\n        \"unorm8x2\": { components: 2, bytes: 2, type: \"vec2<f32>\" },\n        \"unorm8x4\": { components: 4, bytes: 4, type: \"vec4<f32>\" },\n        \"snorm8x2\": { components: 2, bytes: 2, type: \"vec2<f32>\" },\n        \"snorm8x4\": { components: 4, bytes: 4, type: \"vec4<f32>\" },\n        \"uint16x2\": { components: 2, bytes: 4, type: \"vec2<u32>\" },\n        \"uint16x4\": { components: 4, bytes: 8, type: \"vec4<u32>\" },\n        \"sint16x2\": { components: 2, bytes: 4, type: \"vec2<i32>\" },\n        \"sint16x4\": { components: 4, bytes: 8, type: \"vec4<i32>\" },\n        \"unorm16x2\": { components: 2, bytes: 4, type: \"vec2<f32>\" },\n        \"unorm16x4\": { components: 4, bytes: 8, type: \"vec4<f32>\" },\n        \"snorm16x2\": { components: 2, bytes: 4, type: \"vec2<f32>\" },\n        \"snorm16x4\": { components: 4, bytes: 8, type: \"vec4<f32>\" },\n        \"float16x2\": { components: 2, bytes: 4, type: \"vec2<f16>\" },\n        \"float16x4\": { components: 4, bytes: 8, type: \"vec4<f16>\" },\n        \"float32\": { components: 1, bytes: 4, type: \"f32\" },\n        \"float32x2\": { components: 2, bytes: 8, type: \"vec2<f32>\" },\n        \"float32x3\": { components: 3, bytes: 12, type: \"vec3<f32>\" },\n        \"float32x4\": { components: 4, bytes: 16, type: \"vec4<f32>\" },\n        \"uint32\": { components: 1, bytes: 4, type: \"u32\" },\n        \"uint32x2\": { components: 2, bytes: 8, type: \"vec2<u32>\" },\n        \"uint32x3\": { components: 3, bytes: 12, type: \"vec3<u32>\" },\n        \"uint32x4\": { components: 4, bytes: 16, type: \"vec4<u32>\" },\n        \"sint32\": { components: 1, bytes: 4, type: \"i32\" },\n        \"sint32x2\": { components: 2, bytes: 8, type: \"vec2<i32>\" },\n        \"sint32x3\": { components: 3, bytes: 12, type: \"vec3<i32>\" },\n        \"sint32x4\": { components: 4, bytes: 16, type: \"vec4<i32>\" },\n        \"unorm10-10-10-2\": { components: 4, bytes: 4, type: \"vec4<f32>\" },\n    };\n    function getLastStride(layout) {\n        let lastStride = 0;\n        for (const { offset, format } of layout.attributes) {\n            lastStride = Math.max(lastStride, offset + kVertexFormatInfo[format].bytes);\n        }\n        return lastStride;\n    }\n    function wrapRenderCommandsMixin(API, s_renderPassToPassInfoMap, getRenderPassInfo) {\n        wrapFunctionBefore(API, 'draw', function ([vertexCount, a_instanceCount, a_firstVertex, a_firstInstance]) {\n            const instanceCount = a_instanceCount ?? 1;\n            const firstVertex = a_firstVertex ?? 0;\n            const firstInstance = a_firstInstance ?? 0;\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            validateValidToDraw(this, info, (slot, layout, vertexBufferBinding) => {\n                const bufferSize = bufferSizeFromBufferBinding(vertexBufferBinding);\n                const stride = layout.arrayStride;\n                const lastStride = getLastStride(layout);\n                const strideCount = layout.stepMode === 'instance'\n                    ? firstInstance + instanceCount\n                    : firstVertex + vertexCount;\n                if (strideCount !== 0) {\n                    const bytesNeeded = (strideCount - 1) * stride + lastStride;\n                    assert(bytesNeeded <= bufferSize, () => `slot(${slot}) vertex buffer binding size ${bufferSize} is not large enough for bytes needed(${bytesNeeded})`);\n                }\n            });\n        });\n        wrapFunctionBefore(API, 'drawIndexed', function ([indexCount, a_instanceCount, a_firstIndex, /*a_baseVertex*/ , a_firstInstance]) {\n            const instanceCount = a_instanceCount ?? 1;\n            const firstIndex = a_firstIndex ?? 0;\n            // const baseVertex = a_baseVertex ?? 0;\n            const firstInstance = a_firstInstance ?? 0;\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            validateValidToDrawIndexed(this, info, (slot, layout, vertexBufferBinding) => {\n                const bufferSize = bufferSizeFromBufferBinding(vertexBufferBinding);\n                const stride = layout.arrayStride;\n                const lastStride = getLastStride(layout);\n                const strideCount = firstInstance + instanceCount;\n                if (layout.stepMode === 'instance') {\n                    const bytesNeeded = (strideCount - 1) * stride + lastStride;\n                    assert(bytesNeeded <= bufferSize, () => `slot(${slot}) vertex buffer binding size ${bufferSize} is not large enough for bytes needed(${bytesNeeded})`);\n                }\n            });\n            const bufferSize = bufferSizeFromBufferBinding(info.indexBuffer);\n            const indexByteSize = info.indexFormat === 'uint16' ? 2 : 4;\n            const bytesNeeded = firstIndex + indexCount * indexByteSize;\n            assert(bytesNeeded <= bufferSize, () => `indexBuffer bound size(${bufferSize}) is not large enough for bytesNeeded(${bytesNeeded})`);\n        });\n        const kIndirectDrawParametersSize = 16;\n        wrapFunctionBefore(API, 'drawIndirect', function ([indirectBuffer, indirectOffset]) {\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            validateValidToDraw(this, info, () => { });\n            assertNotDestroyed(indirectBuffer);\n            const device = s_objToDevice.get(this);\n            assert(device === s_objToDevice.get(indirectBuffer), 'indirectBuffer is not from same device', [indirectBuffer]);\n            assert(!!(indirectBuffer.usage & GPUBufferUsage.INDIRECT), () => `buffer(${bufferUsageToString(indirectBuffer.usage)}) must have usage INDIRECT`, [indirectBuffer, this]);\n            assert(indirectOffset + kIndirectDrawParametersSize <= indirectBuffer.size, `indirectOffset(${indirectOffset}) + sizeOfIndirectParameters(${kIndirectDrawParametersSize}) > indirectBuffer.size(${indirectBuffer.size})`, [indirectBuffer]);\n            assert(indirectOffset % 4 === 0, () => `indirectOffset(${indirectOffset}) is not multiple of 4`);\n        });\n        const kIndirectDrawIndexedParametersSize = 20;\n        wrapFunctionBefore(API, 'drawIndexedIndirect', function ([indirectBuffer, indirectOffset]) {\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            validateValidToDrawIndexed(this, info, () => { });\n            assertNotDestroyed(indirectBuffer);\n            const device = s_objToDevice.get(this);\n            assert(device === s_objToDevice.get(indirectBuffer), 'indirectBuffer is not from same device', [indirectBuffer]);\n            assert(!!(indirectBuffer.usage & GPUBufferUsage.INDIRECT), () => `buffer(${bufferUsageToString(indirectBuffer.usage)}) must have usage INDIRECT`, [indirectBuffer, this]);\n            assert(indirectOffset + kIndirectDrawIndexedParametersSize <= indirectBuffer.size, `indirectOffset(${indirectOffset}) + sizeOfIndirectParameters(${kIndirectDrawIndexedParametersSize}) > indirectBuffer.size(${indirectBuffer.size})`, [indirectBuffer]);\n            assert(indirectOffset % 4 === 0, () => `indirectOffset(${indirectOffset}) is not multiple of 4`);\n        });\n        wrapFunctionBefore(API, 'setPipeline', function ([pipeline]) {\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            assert(s_objToDevice.get(this) === s_objToDevice.get(pipeline), 'pipeline must be from same device as renderPassEncoder', [pipeline, this]);\n            const pipelineDesc = s_renderPipelineToRenderPipelineDescriptor.get(pipeline);\n            const passLayoutInfo = getRenderPassInfo(this);\n            assert(pipelineDesc.passLayoutInfo.passLayoutSignature === passLayoutInfo.passLayoutSignature, () => `pipeline is not compatible with ${this.constructor.name}\n\n${this.constructor.name} expects ${JSON.stringify(passLayoutInfo.renderPassLayout, null, 2)}\n\npipeline is: ${JSON.stringify(pipelineDesc.passLayoutInfo.renderPassLayout, null, 2)}\n`, [pipeline, this]);\n            info.pipeline = pipeline;\n        });\n        wrapFunctionBefore(API, 'setIndexBuffer', function ([buffer, format, offset, size]) {\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            const device = s_objToDevice.get(this);\n            offset = offset ?? 0;\n            size = size ?? Math.max(0, buffer.size - offset);\n            assert(device === s_objToDevice.get(buffer), 'buffer must be from the same device', [buffer, this]);\n            assertNotDestroyed(buffer);\n            assert(!!(buffer.usage & GPUBufferUsage.INDEX), () => `buffer(${bufferUsageToString(buffer.usage)}) must have usage INDEX`, [buffer, this]);\n            const align = format === 'uint16' ? 2 : 4;\n            assert(offset % align === 0, () => `offset(${offset}) must be multiple of index format: ${format}`, [buffer, this]);\n            assert(offset + size <= buffer.size, () => `offset(${offset}) + size(${size}) is not <= buffer.size(${buffer.size})`, [buffer, this]);\n            info.indexBuffer = {\n                buffer,\n                offset,\n                size,\n            };\n            info.indexFormat = format;\n        });\n        wrapFunctionBefore(API, 'setVertexBuffer', function ([slot, buffer, offset, size]) {\n            const info = s_renderPassToPassInfoMap.get(this);\n            validateEncoderState(this, info.state);\n            const device = s_objToDevice.get(this);\n            const maxSlot = device.limits.maxVertexBuffers;\n            const bufferSize = buffer?.size || 0;\n            offset = offset ?? 0;\n            size = size ?? Math.max(0, bufferSize - offset);\n            assert(slot >= 0, () => `slot(${slot}) must be >= 0`, [this]);\n            assert(slot < maxSlot, () => `slot(${slot}) must be < device.limits.maxVertexBuffers(${maxSlot})`, [this]);\n            assert(offset % 4 === 0, () => `offset(${offset}) must be multiple of 4`, [this]);\n            assert(offset + size <= bufferSize, () => `offset(${offset}) + size(${size}) is not <= buffer.size(${bufferSize})`, [this, ...(buffer ? [buffer] : [])]);\n            if (!buffer) {\n                info.vertexBuffers[slot] = undefined;\n            }\n            else {\n                assert(device === s_objToDevice.get(buffer), 'buffer must be from the same device', [buffer, this]);\n                assertNotDestroyed(buffer);\n                assert(!!(buffer.usage & GPUBufferUsage.VERTEX), () => `buffer(${bufferUsageToString(buffer.usage)}) must have usage VERTEX`, [buffer, this]);\n                info.vertexBuffers[slot] = {\n                    buffer,\n                    offset,\n                    size,\n                };\n            }\n        });\n    }\n\n    const s_bundleEncoderToPassInfoMap = new WeakMap();\n    const s_bundleToPassInfoMap = new WeakMap();\n    function getRenderPassLayout$1(bundleEncoder) {\n        return s_bundleEncoderToPassInfoMap.get(bundleEncoder).passLayoutInfo;\n    }\n    function getRenderPassLayoutForRenderBundle(bundle) {\n        return s_bundleToPassInfoMap.get(bundle);\n    }\n    wrapRenderCommandsMixin(GPURenderBundleEncoder, s_bundleEncoderToPassInfoMap, getRenderPassLayout$1);\n    function createRenderBundleEncoder(encoder, desc) {\n        const { sampleCount = 1, depthStencilFormat, colorFormats } = desc;\n        const renderPassLayout = createRenderPassLayout(trimNulls([...colorFormats]), sampleCount, depthStencilFormat);\n        s_bundleEncoderToPassInfoMap.set(encoder, {\n            state: 'open', // this is not needed. should we move it?\n            desc: { ...desc },\n            vertexBuffers: [],\n            bindGroups: [],\n            passLayoutInfo: {\n                renderPassLayout,\n                passLayoutSignature: JSON.stringify(renderPassLayout),\n            },\n        });\n    }\n    wrapBindingCommandsMixin(GPURenderBundleEncoder, s_bundleEncoderToPassInfoMap);\n    wrapFunctionBefore(GPURenderBundleEncoder, 'finish', function () {\n        const info = s_bundleEncoderToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        info.state = 'ended';\n    });\n    wrapFunctionAfter(GPURenderBundleEncoder, 'finish', function (bundle) {\n        s_objToDevice.set(bundle, s_objToDevice.get(this));\n        s_bundleToPassInfoMap.set(bundle, s_bundleEncoderToPassInfoMap.get(this));\n    });\n\n    const s_shaderModuleToDefs = new WeakMap();\n    function addDefs(defs, stage) {\n        if (stage) {\n            defs.push(s_shaderModuleToDefs.get(stage.module));\n        }\n    }\n    function reifyBufferLayout(buffer) {\n        return {\n            type: buffer.type ?? 'uniform',\n            hasDynamicOffset: !!buffer.hasDynamicOffset,\n            minBindingSize: buffer.minBindingSize ?? 0,\n        };\n    }\n    function reifySamplerLayout(sampler) {\n        return {\n            type: sampler.type ?? 'filtering',\n        };\n    }\n    function reifyTextureLayout(texture) {\n        return {\n            sampleType: texture.sampleType ?? 'float',\n            viewDimension: texture.viewDimension ?? '2d',\n            multisampled: !!texture.multisampled,\n        };\n    }\n    function reifyStorageTexture(storageTexture) {\n        return {\n            access: storageTexture.access ?? 'write-only',\n            format: storageTexture.format,\n            viewDimension: storageTexture.viewDimension ?? '2d',\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function reifyExternalTexture(externalTexture) {\n        return {};\n    }\n    function reifyBindGroupLayoutEntry({ binding, visibility, buffer, sampler, texture, storageTexture, externalTexture, }) {\n        return {\n            binding,\n            visibility,\n            ...(buffer && { buffer: reifyBufferLayout(buffer) }),\n            ...(sampler && { sampler: reifySamplerLayout(sampler) }),\n            ...(texture && { texture: reifyTextureLayout(texture) }),\n            ...(storageTexture && { storageTexture: reifyStorageTexture(storageTexture) }),\n            ...(externalTexture && { externalTexture: reifyExternalTexture() }),\n        };\n    }\n    function bindGroupLayoutDescriptorToBindGroupLayoutDescriptorPlus(src, autoId) {\n        const bindGroupLayoutDescriptor = {\n            entries: [...src.entries].map(reifyBindGroupLayoutEntry),\n        };\n        const entriesById = Object.fromEntries(bindGroupLayoutDescriptor.entries.map(e => [e.binding, e]));\n        const dynamicOffsetCount = bindGroupLayoutDescriptor.entries.reduce((a, v) => a + (v.buffer?.hasDynamicOffset ? 1 : 0), 0);\n        const signature = `${JSON.stringify(bindGroupLayoutDescriptor)}${autoId ? `:autoId(${autoId})` : ''})`;\n        return {\n            bindGroupLayoutDescriptor,\n            entriesById,\n            dynamicOffsetCount,\n            signature,\n        };\n    }\n    let s_autoCount = 1;\n    function getReifiedPipelineLayoutDescriptor(desc) {\n        if (desc.layout === 'auto') {\n            // It's auto so we need to make a reified pipeline descriptor\n            const defs = [];\n            addDefs(defs, desc.vertex);\n            addDefs(defs, desc.fragment);\n            addDefs(defs, desc.compute);\n            const autoId = s_autoCount++;\n            const bindGroupLayoutDescriptors = makeBindGroupLayoutDescriptors(defs, desc).map(b => bindGroupLayoutDescriptorToBindGroupLayoutDescriptorPlus(b, autoId));\n            return {\n                bindGroupLayoutDescriptors,\n            };\n        }\n        else {\n            const bindGroupLayoutDescriptors = s_pipelineLayoutToBindGroupLayoutDescriptorsPlus.get(desc.layout);\n            return {\n                bindGroupLayoutDescriptors,\n            };\n        }\n    }\n    function trackPipelineLayouts(device, pipeline, desc) {\n        s_pipelineToReifiedPipelineLayoutDescriptor.set(pipeline, getReifiedPipelineLayoutDescriptor(desc));\n    }\n    wrapFunctionAfter(GPUDevice, 'createShaderModule', function (module, [desc]) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(module, this);\n        s_shaderModuleToDefs.set(module, makeShaderDataDefinitions(desc.code));\n    });\n    wrapFunctionAfter(GPUDevice, 'createBindGroup', function (bindGroup, [desc]) {\n        s_objToDevice.set(bindGroup, this);\n        const { layout } = desc;\n        // copy the entries since the user might change them\n        const entries = [];\n        for (const { binding, resource } of [...desc.entries]) {\n            const r = resource instanceof GPUSampler ||\n                resource instanceof GPUTextureView ||\n                resource instanceof GPUExternalTexture\n                ? resource\n                : { ...resource };\n            const rb = r;\n            if (rb.buffer instanceof GPUBuffer) {\n                const offset = rb.offset || 0;\n                const size = rb.size || rb.buffer.size - offset;\n                assert(offset + size <= rb.buffer.size, () => `offset(${offset} + size(${size}) > buffer.size(${rb.buffer.size}))`, [rb.buffer]);\n            }\n            entries.push({\n                binding,\n                resource: r,\n            });\n        }\n        entries.sort((a, b) => a.binding - b.binding);\n        validateBindGroupResourcesNotDestroyed(entries);\n        const layoutPlus = s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.get(layout);\n        s_bindGroupToInfo.set(bindGroup, {\n            entries,\n            layoutPlus,\n        });\n    });\n    wrapFunctionAfter(GPUDevice, 'createBuffer', function (buffer) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(buffer, this);\n    });\n    wrapFunctionAfter(GPUDevice, 'createQuerySet', function (querySet) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(querySet, this);\n    });\n    wrapFunctionAfter(GPUDevice, 'createSampler', function (sampler) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(sampler, this);\n    });\n    wrapFunctionAfter(GPUDevice, 'createTexture', function (texture) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(texture, this);\n    });\n    wrapFunctionAfter(GPUDevice, 'importExternalTexture', function (externalTexture) {\n        s_objToDevice.set(externalTexture, this);\n    });\n    wrapFunctionAfter(GPUDevice, 'createCommandEncoder', function (commandEncoder) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(commandEncoder, this);\n        createCommandEncoder(commandEncoder);\n    });\n    wrapFunctionAfter(GPUDevice, 'createRenderBundleEncoder', function (bundleEncoder, [desc]) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(bundleEncoder, this);\n        createRenderBundleEncoder(bundleEncoder, desc);\n    });\n    wrapFunctionAfter(GPUDevice, 'createRenderPipeline', function (pipeline, [desc]) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(pipeline, this);\n        trackRenderPipelineDescriptor(pipeline, desc);\n        trackPipelineLayouts(this, pipeline, desc);\n    });\n    wrapFunctionAfter(GPUDevice, 'createComputePipeline', function (pipeline, [desc]) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(pipeline, this);\n        trackPipelineLayouts(this, pipeline, desc);\n    });\n    wrapAsyncFunctionAfter(GPUDevice, 'createRenderPipelineAsync', function (pipeline, [desc]) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(pipeline, this);\n        trackRenderPipelineDescriptor(pipeline, desc);\n        trackPipelineLayouts(this, pipeline, desc);\n    });\n    wrapAsyncFunctionAfter(GPUDevice, 'createComputePipelineAsync', function (pipeline, [desc]) {\n        assertNotDestroyed(this);\n        s_objToDevice.set(pipeline, this);\n        trackPipelineLayouts(this, pipeline, desc);\n    });\n    wrapFunctionAfter(GPUDevice, 'createBindGroupLayout', function (bindGroupLayout, [desc]) {\n        s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.set(bindGroupLayout, bindGroupLayoutDescriptorToBindGroupLayoutDescriptorPlus(desc, 0));\n    });\n    wrapFunctionAfter(GPUDevice, 'createPipelineLayout', function (pipelineLayout, [desc]) {\n        // need to copy the description because the user may change it after\n        const bglDescriptorsPlus = [...desc.bindGroupLayouts].map(bgl => s_bindGroupLayoutToBindGroupLayoutDescriptorPlus.get(bgl));\n        s_pipelineLayoutToBindGroupLayoutDescriptorsPlus.set(pipelineLayout, bglDescriptorsPlus);\n    });\n\n    wrapFunctionBefore(GPUCanvasContext, 'configure', function ([desc]) {\n        s_objToDevice.set(this, desc.device);\n    });\n    wrapFunctionBefore(GPUCanvasContext, 'unconfigure', function () {\n        s_objToDevice.delete(this);\n    });\n    wrapFunctionAfter(GPUCanvasContext, 'getCurrentTexture', function (texture) {\n        const device = s_objToDevice.get(this);\n        s_objToDevice.set(texture, device);\n    });\n\n    function validateTimestampWrites(device, timestampWrites) {\n        const { querySet, beginningOfPassWriteIndex, endOfPassWriteIndex } = timestampWrites;\n        assertNotDestroyed(querySet);\n        assert(s_objToDevice.get(querySet) === device, 'querySet not from same device', [querySet]);\n        assert(querySet.type === 'timestamp', () => `querySet.type(${querySet.type}) !== 'timestamp'`);\n        assert(beginningOfPassWriteIndex === undefined || beginningOfPassWriteIndex < querySet.count, () => `timestampWrites.beginningOfPassWriteIndex(${beginningOfPassWriteIndex}) is >= querySet.count(${querySet.count})`);\n        assert(endOfPassWriteIndex === undefined || endOfPassWriteIndex < querySet.count, () => `timestampWrites.endOfPassWriteIndex(${endOfPassWriteIndex}) is >= querySet.count(${querySet.count})`);\n        assert(beginningOfPassWriteIndex !== undefined || endOfPassWriteIndex !== undefined, () => `at least one of beginningOfPassWriteIndex(${beginningOfPassWriteIndex}) or endOfPassWriteIndex(${endOfPassWriteIndex})`);\n        assert(beginningOfPassWriteIndex !== endOfPassWriteIndex, () => `beginningOfPassWriteIndex(${beginningOfPassWriteIndex}) and endOfPassWriteIndex(${endOfPassWriteIndex}) may not be the same`);\n    }\n\n    const s_computePassToPassInfoMap = new WeakMap();\n    function beginComputePass(commandEncoder, passEncoder, desc) {\n        const device = s_objToDevice.get(commandEncoder);\n        const { timestampWrites } = desc || {};\n        if (timestampWrites) {\n            validateTimestampWrites(device, timestampWrites);\n        }\n        s_computePassToPassInfoMap.set(passEncoder, {\n            state: 'open',\n            commandEncoder,\n            bindGroups: [],\n        });\n    }\n    wrapBindingCommandsMixin(GPUComputePassEncoder, s_computePassToPassInfoMap);\n    wrapFunctionBefore(GPUComputePassEncoder, 'setPipeline', function ([pipeline]) {\n        const info = s_computePassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        assert(s_objToDevice.get(info.commandEncoder) === s_objToDevice.get(pipeline), 'pipeline must be from same device as computePassEncoder', [this, info.commandEncoder]);\n        info.pipeline = pipeline;\n    });\n    wrapFunctionBefore(GPUComputePassEncoder, 'end', function () {\n        const info = s_computePassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        info.state = 'ended';\n        unlockCommandEncoder(info.commandEncoder);\n    });\n    wrapFunctionBefore(GPUComputePassEncoder, 'dispatchWorkgroups', function ([workgroupCountX, workgroupCountY = 1, workgroupCountZ = 1]) {\n        const info = s_computePassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        validateEncoderBindGroups(info.bindGroups, info.pipeline);\n        const device = s_objToDevice.get(this);\n        assert(workgroupCountX < device.limits.maxComputeWorkgroupsPerDimension, () => `workGroupCountX(${workgroupCountX} > device.limits.maxComputeWorkgroupsPerDimension(${device.limits.maxComputeWorkgroupsPerDimension})`);\n        assert(workgroupCountY < device.limits.maxComputeWorkgroupsPerDimension, () => `workGroupCountY(${workgroupCountY} > device.limits.maxComputeWorkgroupsPerDimension(${device.limits.maxComputeWorkgroupsPerDimension})`);\n        assert(workgroupCountZ < device.limits.maxComputeWorkgroupsPerDimension, () => `workGroupCountZ(${workgroupCountZ} > device.limits.maxComputeWorkgroupsPerDimension(${device.limits.maxComputeWorkgroupsPerDimension})`);\n    });\n    const kIndirectDispatchWorkgroupsParametersSize = 12;\n    wrapFunctionBefore(GPUComputePassEncoder, 'dispatchWorkgroupsIndirect', function ([indirectBuffer, indirectOffset]) {\n        const info = s_computePassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        validateEncoderBindGroups(info.bindGroups, info.pipeline);\n        assertNotDestroyed(indirectBuffer);\n        const device = s_objToDevice.get(this);\n        assert(device === s_objToDevice.get(indirectBuffer), 'indirectBuffer is not from same device', [indirectBuffer]);\n        assert(!!(indirectBuffer.usage & GPUBufferUsage.INDIRECT), () => `buffer(${bufferUsageToString(indirectBuffer.usage)}) must have usage INDIRECT`, [indirectBuffer, this]);\n        assert(indirectOffset + kIndirectDispatchWorkgroupsParametersSize <= indirectBuffer.size, `indirectOffset(${indirectOffset}) + sizeOfIndirectParameters(${kIndirectDispatchWorkgroupsParametersSize}) > indirectBuffer.size(${indirectBuffer.size})`, [indirectBuffer]);\n        assert(indirectOffset % 4 === 0, () => `indirectOffset(${indirectOffset}) is not multiple of 4`);\n    });\n\n    const s_renderPassToPassInfoMap = new WeakMap();\n    function getRenderPassLayout(passEncoder) {\n        return s_renderPassToPassInfoMap.get(passEncoder).passLayoutInfo;\n    }\n    /*\n    function checkTextureNotInUse(inuseTextures: InUseTextures, texture: GPUTexture, fullView: TextureViewDescriptor) {\n      const views = inuseTextures.get(texture);\n      if (!views) {\n        return;\n      }\n    }\n    */\n    function markTextureInUse(inuseTextures, texture, view) {\n        const fullView = s_textureViewToDesc.get(view);\n        const inUseDepthOrArrayLayers = inuseTextures.get(texture) || new Map();\n        inuseTextures.set(texture, inUseDepthOrArrayLayers);\n        for (let l = 0; l < fullView.arrayLayerCount; ++l) {\n            const layer = l + fullView.baseArrayLayer;\n            const inUseMipLevels = inUseDepthOrArrayLayers.get(layer) || new Set();\n            inUseDepthOrArrayLayers.set(layer, inUseMipLevels);\n            for (let m = 0; m < fullView.mipLevelCount; ++m) {\n                const mipLevel = m + fullView.baseMipLevel;\n                assert(!inUseMipLevels.has(mipLevel), () => `mipLevel(${mipLevel}) of layer(${layer}) is already in use`, [texture]);\n                inUseMipLevels.add(mipLevel);\n            }\n        }\n    }\n    function validateViewAspectIsAllAspectsOfTexture(texture, aspect) {\n        const { depth, stencil } = kAllTextureFormatInfo[texture.format];\n        if (depth && stencil) {\n            assert(aspect === 'all', 'aspect must be all for depth-stencil textures', [texture]);\n        }\n        else if (depth) {\n            assert(aspect === 'all' || aspect === 'depth-only', 'aspect must be all or depth-only for depth textures', [texture]);\n        }\n        else if (stencil) {\n            assert(aspect === 'all' || aspect === 'stencil-only', 'aspect must be all or stencil-only for stencil textures', [texture]);\n        }\n    }\n    function validateRenderableTextureView(texture, viewDesc) {\n        assert((texture.usage & GPUTextureUsage.RENDER_ATTACHMENT) !== 0, () => `texture.usage(${textureUsageToString(texture.usage)}) is missing RENDER_ATTACHMENT`, [texture]);\n        const { dimension, mipLevelCount, arrayLayerCount, aspect } = viewDesc;\n        assert(dimension === '2d' || dimension === '3d', () => `dimension(${dimension}) must be 2d or 3d`);\n        assert(mipLevelCount === 1, () => `mipLevelCount(${mipLevelCount}) must be 1`);\n        assert(arrayLayerCount === 1, () => `arrayLayerCount(${arrayLayerCount}) must be 1`);\n        validateViewAspectIsAllAspectsOfTexture(texture, aspect);\n    }\n    function validateRenderPassColorAttachment(attachment, slot) {\n        const { view, resolveTarget, depthSlice, loadOp } = attachment;\n        const renderViewDesc = s_textureViewToDesc.get(view);\n        const renderTexture = s_textureViewToTexture.get(view);\n        const formatInfo = kAllTextureFormatInfo[renderViewDesc.format];\n        validateRenderableTextureView(renderTexture, renderViewDesc);\n        assert(!!formatInfo.colorRender, () => `format(${renderViewDesc.format}) is not color renderable`);\n        if (renderViewDesc.dimension === '3d') {\n            assert(!!depthSlice, () => `attachment(${slot})'s dimension is '3d' but depthSlice is missing`);\n            const [, , d] = logicalMipLevelSpecificTextureExtent(renderTexture, renderViewDesc.baseMipLevel);\n            assert(depthSlice < d, () => `depthSlice(${depthSlice}) must be < depth(${d}) at mipLevel(${renderViewDesc.mipLevelCount}) of texture`, [renderTexture]);\n        }\n        else {\n            assert(depthSlice === undefined, `attachment(${slot}) is not 3d so depthSlice must NOT be provided`);\n        }\n        if (resolveTarget) {\n            const resolveViewDesc = s_textureViewToDesc.get(resolveTarget);\n            const resolveTexture = s_textureViewToTexture.get(resolveTarget);\n            const [tw, th] = logicalMipLevelSpecificTextureExtent(renderTexture, renderViewDesc.baseMipLevel);\n            const [rw, rh] = logicalMipLevelSpecificTextureExtent(resolveTexture, resolveViewDesc.baseMipLevel);\n            assert(tw === rw && th === rh, () => `resolveTarget render extent(${rw}, ${rh}) != view render extent (${tw}, ${th})`);\n            assert(renderTexture.sampleCount > 1, 'resolveTarget is set so view texture must have sampleCount > 1', [renderTexture]);\n            assert(resolveTexture.sampleCount === 1, 'resolveTarget.sampleCount must be 1', [resolveTarget]);\n            validateRenderableTextureView(resolveTexture, resolveViewDesc);\n            assert(resolveViewDesc.format === renderViewDesc.format, () => `resolveTarget.view.format(${resolveViewDesc.format}) must equal target.view.format(${renderViewDesc.format})`);\n            assert(resolveTexture.format === renderTexture.format, () => `resolve texture format(${resolveTexture.format}) must equal target texture format(${renderTexture.format})`);\n            const resolveFormatInfo = kAllTextureFormatInfo[resolveTexture.format];\n            assert(!!resolveFormatInfo?.colorRender?.resolve, () => `resolve texture.format(${resolveTexture.format}) does not support resolving`);\n        }\n    }\n    wrapRenderCommandsMixin(GPURenderPassEncoder, s_renderPassToPassInfoMap, getRenderPassLayout);\n    function beginRenderPass(commandEncoder, passEncoder, desc) {\n        let targetWidth;\n        let targetHeight;\n        const device = s_objToDevice.get(commandEncoder);\n        const inuseTextures = new Map();\n        const colorFormats = [];\n        let passSampleCount;\n        let depthStencilFormat;\n        let bytesPerSample = 0;\n        let numAttachments = 0;\n        const checkRenderExtent = (texture, view) => {\n            const desc = s_textureViewToDesc.get(view);\n            const [width, height] = logicalMipLevelSpecificTextureExtent(texture, desc.baseMipLevel);\n            if (targetWidth === undefined) {\n                targetWidth = width;\n                targetHeight = height;\n            }\n            else if (targetWidth !== width || targetHeight !== height) {\n                emitError('attachments are not all the same width and height', [view, texture, passEncoder, commandEncoder]);\n            }\n        };\n        const addView = (attachment, isDepth) => {\n            if (!attachment) {\n                if (!isDepth) {\n                    colorFormats.push(null);\n                }\n                return;\n            }\n            ++numAttachments;\n            const { view } = attachment;\n            const texture = s_textureViewToTexture.get(view);\n            assertNotDestroyed(texture);\n            assert(s_objToDevice.get(texture) === device, 'texture is not from same device as command encoder', [texture, commandEncoder]);\n            const { sampleCount, format } = texture;\n            const formatInfo = kAllTextureFormatInfo[format];\n            markTextureInUse(inuseTextures, texture, view);\n            const { colorRender, depth, stencil } = formatInfo;\n            checkRenderExtent(texture, view);\n            if (isDepth) {\n                assert(!!depth || !!stencil, () => `format(${format}) is not a depth stencil format`);\n                depthStencilFormat = format;\n            }\n            else {\n                validateRenderPassColorAttachment(attachment, colorFormats.length - 1);\n                colorFormats.push(format);\n                bytesPerSample += roundUp(colorRender.byteCost, colorRender.alignment);\n            }\n            if (!passSampleCount) {\n                passSampleCount = sampleCount;\n            }\n            else {\n                assert(sampleCount === passSampleCount, 'all attachments do not have the same sampleCount');\n            }\n        };\n        const { timestampWrites, colorAttachments, depthStencilAttachment, occlusionQuerySet } = desc;\n        for (const colorAttachment of colorAttachments || []) {\n            addView(colorAttachment);\n        }\n        addView(depthStencilAttachment, true);\n        assert(numAttachments > 0, 'there must be at least 1 colorAttachment or depthStencilAttachment');\n        assert(numAttachments <= device.limits.maxColorAttachments, () => `numAttachments(${numAttachments}) > device.limits.maxColorAttachments(${device.limits.maxColorAttachments})`);\n        assert(bytesPerSample <= device.limits.maxColorAttachmentBytesPerSample, () => `color attachments bytesPerSample(${bytesPerSample}) > device.limits.maxColorAttachmentBytesPerSample(${device.limits.maxColorAttachmentBytesPerSample})`);\n        if (timestampWrites) {\n            validateTimestampWrites(device, timestampWrites);\n        }\n        if (occlusionQuerySet) {\n            assertNotDestroyed(occlusionQuerySet);\n            assert(device === s_objToDevice.get(occlusionQuerySet), 'occlusionQuerySet is not from same device', [occlusionQuerySet]);\n            assert(occlusionQuerySet.type === 'occlusion', () => `occlusionQuerySet.type(${occlusionQuerySet.type}) is not 'occlusion'`, [occlusionQuerySet]);\n        }\n        const renderPassLayout = createRenderPassLayout(trimNulls(colorFormats), passSampleCount, depthStencilFormat);\n        s_renderPassToPassInfoMap.set(passEncoder, {\n            state: 'open',\n            commandEncoder,\n            targetWidth: targetWidth || 0,\n            targetHeight: targetHeight || 0,\n            vertexBuffers: [],\n            bindGroups: [],\n            occlusionQuerySet,\n            occlusionIndices: new Map(),\n            occlusionQueryActiveIndex: -1,\n            passLayoutInfo: {\n                renderPassLayout,\n                passLayoutSignature: JSON.stringify(renderPassLayout),\n            },\n            inuseTextures,\n        });\n    }\n    wrapFunctionBefore(GPURenderPassEncoder, 'executeBundles', function ([bundles]) {\n        const info = s_renderPassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        const device = s_objToDevice.get(this);\n        let bundleCount = 0;\n        for (const bundle of bundles) {\n            assert(s_objToDevice.get(bundle) === device, () => 'bundle[${count}] is not from same device as render pass encoder', [bundle]);\n            const count = bundleCount;\n            const bundleDesc = getRenderPassLayoutForRenderBundle(bundle);\n            const passLayoutInfo = getRenderPassLayout(this);\n            assert(bundleDesc.passLayoutInfo.passLayoutSignature === passLayoutInfo.passLayoutSignature, () => `bundle[${count}] is not compatible with ${this.constructor.name}\n\n${this.constructor.name} expects ${JSON.stringify(passLayoutInfo.renderPassLayout, null, 2)}\n\nbundle is: ${JSON.stringify(bundleDesc.passLayoutInfo.renderPassLayout, null, 2)}\n`, [bundle, this]);\n            ++bundleCount;\n        }\n        info.bindGroups.length = 0;\n        info.pipeline = undefined;\n        info.indexBuffer = undefined;\n        info.indexFormat = undefined;\n        info.vertexBuffers.length = 0;\n    });\n    wrapFunctionBefore(GPURenderPassEncoder, 'beginOcclusionQuery', function ([queryIndex]) {\n        const info = s_renderPassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        const { occlusionIndices, occlusionQueryActive, occlusionQuerySet } = info;\n        assert(!!occlusionQuerySet, 'no occlusionQuerySet in pass');\n        assertNotDestroyed(occlusionQuerySet);\n        assert(queryIndex < occlusionQuerySet.count, () => `queryIndex(${queryIndex}) >= occlusionQuerySet.count(${occlusionQuerySet.count})`, [occlusionQuerySet]);\n        const queryErr = occlusionIndices.get(queryIndex);\n        assert(!queryErr, () => `queryIndex(${queryIndex}) was already used in this pass at ${queryErr.stack}`);\n        assert(!occlusionQueryActive, () => `another query is already active from ${occlusionQueryActive.stack}`);\n        info.occlusionQueryActive = new Error();\n        info.occlusionQueryActiveIndex = queryIndex;\n    });\n    wrapFunctionBefore(GPURenderPassEncoder, 'endOcclusionQuery', function () {\n        const info = s_renderPassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        const { occlusionIndices, occlusionQueryActive, occlusionQueryActiveIndex, occlusionQuerySet } = info;\n        assert(!!info.occlusionQueryActive, 'no occlusion query is active');\n        occlusionIndices.set(occlusionQueryActiveIndex, occlusionQueryActive);\n        if (occlusionQuerySet) {\n            assertNotDestroyed(occlusionQuerySet);\n        }\n        info.occlusionQueryActive = undefined;\n    });\n    wrapBindingCommandsMixin(GPURenderPassEncoder, s_renderPassToPassInfoMap);\n    wrapFunctionBefore(GPURenderPassEncoder, 'end', function () {\n        const info = s_renderPassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        info.state = 'ended';\n        unlockCommandEncoder(info.commandEncoder);\n        assert(!info.occlusionQueryActive, () => `occlusion queryIndex(${info.occlusionQueryActiveIndex}) is still active`);\n    });\n    wrapFunctionBefore(GPURenderPassEncoder, 'setViewport', function ([x, y, width, height, minDepth, maxDepth]) {\n        const info = s_renderPassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        const { targetWidth, targetHeight, } = info;\n        assert(x >= 0, () => `x(${x}) < 0`, [this]);\n        assert(y >= 0, () => `y(${y}) < 0`, [this]);\n        assert(x + width <= targetWidth, () => `x(${x}) + width(${width}) > texture.width(${targetWidth})`, [this]);\n        assert(y + height <= targetHeight, () => `y(${x}) + height(${height}) > texture.height(${targetHeight})`, [this]);\n        assert(minDepth >= 0 && minDepth <= 1.0, () => `minDepth(${minDepth}) must be >= 0 and <= 1`);\n        assert(maxDepth >= 0 && maxDepth <= 1.0, () => `maxDepth(${maxDepth}) must be >= 0 and <= 1`);\n        assert(minDepth < maxDepth, () => `minDepth(${minDepth}) must be < maxDepth(${maxDepth})`);\n    });\n    wrapFunctionBefore(GPURenderPassEncoder, 'setScissorRect', function ([x, y, width, height]) {\n        const info = s_renderPassToPassInfoMap.get(this);\n        validateEncoderState(this, info.state);\n        const { targetWidth, targetHeight, } = info;\n        assert(x >= 0, () => `x(${x}) < 0`, [this]);\n        assert(y >= 0, () => `y(${y}) < 0`, [this]);\n        assert(x + width <= targetWidth, () => `x(${x}) + width(${width}) > texture.width(${targetWidth})`, [this]);\n        assert(y + height <= targetHeight, () => `y(${x}) + height(${height}) > texture.height(${targetHeight})`, [this]);\n    });\n\n    wrapFunctionAfter(GPUCommandEncoder, 'beginComputePass', function (passEncoder, [desc]) {\n        s_objToDevice.set(passEncoder, s_objToDevice.get(this));\n        lockCommandEncoder(this);\n        beginComputePass(this, passEncoder, desc);\n    });\n    wrapFunctionAfter(GPUCommandEncoder, 'beginRenderPass', function (passEncoder, [desc]) {\n        s_objToDevice.set(passEncoder, s_objToDevice.get(this));\n        lockCommandEncoder(this);\n        beginRenderPass(this, passEncoder, desc);\n    });\n    wrapFunctionBefore(GPUCommandEncoder, 'finish', function () {\n        finishCommandEncoder(this);\n    });\n    wrapFunctionBefore(GPUCommandEncoder, 'copyBufferToBuffer', function ([src, srcOffset, dst, dstOffset, size]) {\n        getCommandBufferInfoAndValidateState(this);\n        assertNotDestroyed(src);\n        assertNotDestroyed(dst);\n        const device = s_objToDevice.get(this);\n        assert(device === s_objToDevice.get(src), 'src is not from same device as commandEncoder', [src, this]);\n        assert(device === s_objToDevice.get(dst), 'dst is not from same device as commandEncoder', [dst, this]);\n        assert(src !== dst, 'src must not be same buffer as dst', [src, dst]);\n        assert(!!(src.usage & GPUBufferUsage.COPY_SRC), () => `src.usage(${bufferUsageToString(src.usage)} missing COPY_SRC)`, [src]);\n        assert(!!(dst.usage & GPUBufferUsage.COPY_DST), () => `dst.usage(${bufferUsageToString(dst.usage)} missing COPY_DST)`, [dst]);\n        assert(srcOffset + size <= src.size, () => `srcOffset(${srcOffset}) + size(${size}) > srcBuffer.size(${src.size})`, [src]);\n        assert(dstOffset + size <= dst.size, () => `dstOffset(${dstOffset}) + size(${size}) > dstBuffer.size(${dst.size})`, [dst]);\n        assert(size % 4 === 0, () => `size(${size}) is not multiple of 4`);\n        assert(srcOffset % 4 === 0, () => `srcOffset(${srcOffset}) is not multiple of 4`);\n        assert(dstOffset % 4 === 0, () => `dstOffset(${dstOffset}) is not multiple of 4`);\n    });\n    function validateImageCopyBuffer(icb) {\n        assertNotDestroyed(icb.buffer);\n        const bytesPerRow = icb.bytesPerRow || 0;\n        assert(bytesPerRow % 256 === 0, () => `src.bytesPerRow(${bytesPerRow}) not multiple of 256`, [icb.buffer]);\n    }\n    function validateImageCopyTexture(ict, copySize) {\n        assertNotDestroyed(ict.texture);\n        const formatInfo = kAllTextureFormatInfo[ict.texture.format];\n        const { blockWidth, blockHeight, } = formatInfo;\n        const mipLevel = ict.mipLevel || 0;\n        const [origX, origY] = reifyGPUOrigin3D(ict.origin);\n        assert(mipLevel < ict.texture.mipLevelCount, () => `mipLevel(${mipLevel}) must be less than texture.mipLevelCount(${ict.texture.mipLevelCount})`, [ict.texture]);\n        assert(origX % blockWidth === 0, () => `origin.x(${origX}) not multiple of blockWidth(${blockWidth})`, [ict.texture]);\n        assert(origY % blockHeight === 0, () => `origin.y(${origY}) not multiple of blockHeight(${blockHeight})`, [ict.texture]);\n        const [copyWidth, copyHeight, copyDepthOrArrayLayers] = reifyGPUExtent3D(copySize);\n        if (formatInfo.depth && formatInfo.stencil && ict.texture.sampleCount > 1) {\n            const [w, h, d] = physicalMipLevelSpecificTextureExtent(ict.texture, mipLevel);\n            assert(copyWidth === w &&\n                copyHeight === h &&\n                copyDepthOrArrayLayers === d, 'copySize must match textureSize for depth-stencil textures', [ict.texture]);\n        }\n    }\n    function validateTextureCopyRange(ict, copySize) {\n        const formatInfo = kAllTextureFormatInfo[ict.texture.format];\n        const { blockWidth, blockHeight, } = formatInfo;\n        const mipLevel = ict.mipLevel || 0;\n        const [origX, origY, origZ] = reifyGPUOrigin3D(ict.origin);\n        const [copyWidth, copyHeight, copyDepthOrArrayLayers] = reifyGPUExtent3D(copySize);\n        const [w, h, d] = physicalMipLevelSpecificTextureExtent(ict.texture, mipLevel);\n        const res = [ict.texture];\n        assert(origX + copyWidth <= w, () => `origin.x(${origX}) + copySize.width(${copyWidth}) is > physical width(${w}) of mipLevel(${mipLevel})`, res);\n        assert(origY + copyHeight <= h, () => `origin.y(${origY}) + copySize.height(${copyHeight}) is > physical height(${h}) of mipLevel(${mipLevel})`, res);\n        assert(origZ + copyDepthOrArrayLayers <= d, () => `origin.z(${origZ}) + copySize.depthOrArrayBuffers(${copyDepthOrArrayLayers}) is > texture.depthOrArrayLayers(${d}) of mipLevel(${mipLevel})`, res);\n        assert(copyWidth % blockWidth === 0, () => `copySize.width(${copyWidth}) is not multiple of blockWidth(${blockWidth})`, res);\n        assert(copyHeight % blockHeight === 0, () => `copySize.height(${copyHeight}) is not multiple of blockHeight(${blockHeight})`, res);\n    }\n    function validateLinearTextureData(idl, byteSize, format, copyExtent) {\n        const formatInfo = kAllTextureFormatInfo[format];\n        const [copyWidth, copyHeight, copyDepthOrArrayLayers] = reifyGPUExtent3D(copyExtent);\n        const { blockWidth, blockHeight } = formatInfo;\n        const widthInBlocks = copyWidth / blockWidth;\n        const heightInBlocks = copyHeight / blockHeight;\n        const bytesInLastRow = widthInBlocks * formatInfo.bytesPerBlock;\n        assert(widthInBlocks % 1 === 0, () => `width(${copyWidth}) must be multiple of blockWidth${blockWidth}`);\n        assert(heightInBlocks % 1 === 0, () => `height(${copyHeight}) must be multiple of blockHeight${blockHeight}`);\n        if (heightInBlocks > 1) {\n            assert(idl.bytesPerRow !== undefined, () => `bytesPerRow must be set if heightInBlocks(${heightInBlocks}) > 1`);\n        }\n        if (copyDepthOrArrayLayers > 1) {\n            assert(idl.bytesPerRow !== undefined, () => `bytesPerRow must be set if copySize.depthOrArrayLayers(${copyDepthOrArrayLayers}) > 1`);\n        }\n        if (copyDepthOrArrayLayers > 1) {\n            assert(idl.rowsPerImage !== undefined, () => `rowsPerImage must be set if copySize.depthOrArrayLayers(${copyDepthOrArrayLayers}) > 1`);\n        }\n        if (idl.bytesPerRow !== undefined) {\n            assert(idl.bytesPerRow >= bytesInLastRow, () => `bytesPerRow(${idl.bytesPerRow}) must be >= bytes in the last row(${bytesInLastRow})`);\n        }\n        if (idl.rowsPerImage !== undefined) {\n            assert(idl.rowsPerImage >= heightInBlocks, () => `rowsPerImage(${idl.rowsPerImage}) must be >= heightInBlocks(${heightInBlocks})`);\n        }\n        const bytesPerRow = idl.bytesPerRow ?? 0;\n        const rowsPerImage = idl.rowsPerImage ?? 0;\n        let requiredBytesInCopy = 0;\n        if (copyDepthOrArrayLayers > 0) {\n            // all layers except the last one\n            requiredBytesInCopy += bytesPerRow * rowsPerImage * (copyDepthOrArrayLayers - 1);\n            if (heightInBlocks > 0) {\n                // last layer = all rows padded + last row\n                requiredBytesInCopy += bytesPerRow * (heightInBlocks - 1) + bytesInLastRow;\n            }\n        }\n        const offset = idl.offset ?? 0;\n        assert(offset + requiredBytesInCopy <= byteSize, () => `offset(${offset}) + requiredBytesInCopy(${requiredBytesInCopy}) must be <= buffer.size(${byteSize})`);\n    }\n    function validateB2TorT2BCopy(encoder, buf, tex, copySize, bufferIsSource) {\n        const device = s_objToDevice.get(encoder);\n        assert(device === s_objToDevice.get(buf.buffer), 'buffer is not from same device as commandEncoder', [buf.buffer, encoder]);\n        assert(device === s_objToDevice.get(tex.texture), 'texture is not from same device as commandEncoder', [tex.texture, encoder]);\n        validateImageCopyBuffer(buf);\n        const [bufRequiredUsage, texRequiredUsage] = bufferIsSource\n            ? ['COPY_SRC', 'COPY_DST']\n            : ['COPY_DST', 'COPY_SRC'];\n        assert(!!(buf.buffer.usage & GPUBufferUsage[bufRequiredUsage]), () => `src.usage(${bufferUsageToString(buf.buffer.usage)} missing ${bufRequiredUsage})`, [buf.buffer]);\n        validateImageCopyTexture(tex, copySize);\n        const formatInfo = kAllTextureFormatInfo[tex.texture.format];\n        assert(!!(tex.texture.usage & GPUTextureUsage[texRequiredUsage]), () => `dst.texture.usage(${textureUsageToString(tex.texture.usage)} missing ${texRequiredUsage})`, [tex.texture]);\n        assert(tex.texture.sampleCount === 1, 'sampleCount must be 1', [tex.texture]);\n        let aspectSpecificFormat = tex.texture.format;\n        const isDepthOrStencil = formatInfo.depth || formatInfo.stencil;\n        if (isDepthOrStencil) {\n            if (!formatInfo.stencil) {\n                assert(tex.aspect !== 'stencil-only', 'can not use stencil-only aspect on non stencil texture', [tex.texture]);\n            }\n            if (!formatInfo.depth) {\n                assert(tex.aspect !== 'depth-only', 'can not use depth-only aspect on non depth texture', [tex.texture]);\n            }\n            assert(tex.aspect === 'depth-only' || tex.aspect === 'stencil-only', 'must use one aspect');\n            const aspect = tex.aspect === 'depth-only' ? 'depth' : 'stencil';\n            const info = formatInfo[aspect];\n            assert(!!info?.copyDst, `can not copy to ${tex.aspect} of texture of format(${tex.texture.format})`, [tex.texture]);\n            if (aspectSpecificFormat === 'depth24plus-stencil8') {\n                aspectSpecificFormat = tex.aspect === 'depth-only'\n                    ? 'depth24plus'\n                    : 'stencil8';\n            }\n            else if (aspectSpecificFormat === 'depth32float-stencil8') {\n                aspectSpecificFormat = tex.aspect === 'depth-only'\n                    ? 'depth32float'\n                    : 'stencil8';\n            }\n        }\n        validateTextureCopyRange(tex, copySize);\n        const srcOffset = buf.offset || 0;\n        if (!isDepthOrStencil) {\n            const texelCopyBlockFootPrint = formatInfo.bytesPerBlock;\n            assert(srcOffset % texelCopyBlockFootPrint === 0, () => `src.offset(${srcOffset}) must multiple of blockSize(${texelCopyBlockFootPrint})`);\n        }\n        else {\n            assert(srcOffset % 4 === 0, () => `src.offset(${srcOffset}) must by multiple of 4 for depth and/or stencil textures`);\n        }\n        validateLinearTextureData(buf, buf.buffer.size, aspectSpecificFormat, copySize);\n    }\n    function isCopyCompatible(format1, format2) {\n        return format1.replace('-srgb', '') === format2.replace('-srgb', '');\n    }\n    function isIntersectingAxis(v1, v2, size) {\n        const distance = Math.abs(v2 - v1);\n        const gap = distance - size;\n        return gap < 0;\n    }\n    wrapFunctionBefore(GPUCommandEncoder, 'copyBufferToTexture', function ([src, dst, copySize]) {\n        getCommandBufferInfoAndValidateState(this);\n        validateB2TorT2BCopy(this, src, dst, copySize, true);\n    });\n    wrapFunctionBefore(GPUCommandEncoder, 'copyTextureToBuffer', function ([src, dst, copySize]) {\n        getCommandBufferInfoAndValidateState(this);\n        validateB2TorT2BCopy(this, dst, src, copySize, false);\n    });\n    wrapFunctionBefore(GPUCommandEncoder, 'copyTextureToTexture', function ([src, dst, copySize]) {\n        getCommandBufferInfoAndValidateState(this);\n        const device = s_objToDevice.get(this);\n        assert(device === s_objToDevice.get(src.texture), 'src.texture is not from same device as commandEncoder', [src, this]);\n        assert(device === s_objToDevice.get(dst.texture), 'dst.texture is not from same device as commandEncoder', [dst, this]);\n        validateImageCopyTexture(src, copySize);\n        assert(!!(src.texture.usage & GPUTextureUsage.COPY_SRC), () => `src.texture.usage(${textureUsageToString(src.texture.usage)} missing COPY_SRC`, [src.texture]);\n        validateImageCopyTexture(dst, copySize);\n        assert(!!(dst.texture.usage & GPUTextureUsage.COPY_DST), () => `src.texture.usage(${textureUsageToString(dst.texture.usage)} missing COPY_DST`, [dst.texture]);\n        assert(src.texture.sampleCount === dst.texture.sampleCount, () => `src.texture.sampleCount(${src.texture.sampleCount}) must equal dst.texture.sampleCount(${dst.texture.sampleCount})`, [src.texture, dst.texture]);\n        assert(isCopyCompatible(src.texture.format, dst.texture.format), () => `src.texture.format(${src.texture.format}) must be copy compatible with dst.texture.format(${dst.texture.format})`, [src.texture, dst.texture]);\n        const formatInfo = kAllTextureFormatInfo[src.texture.format];\n        const isDepthStencil = !!formatInfo.depth && !!formatInfo.stencil;\n        if (isDepthStencil) {\n            assert(src.aspect === 'all', () => `src.aspect must be 'all' when format(${src.texture.format}) is a depth-stencil format`, [src.texture]);\n            assert(dst.aspect === 'all', () => `dst.aspect must be 'all' when format(${dst.texture.format}) is a depth-stencil format`, [dst.texture]);\n        }\n        validateTextureCopyRange(src, copySize);\n        validateTextureCopyRange(dst, copySize);\n        if (src.texture === dst.texture) {\n            const srcOrigin = reifyGPUOrigin3D(src.origin);\n            const dstOrigin = reifyGPUOrigin3D(dst.origin);\n            const size = reifyGPUExtent3D(copySize);\n            assert(!isIntersectingAxis(srcOrigin[0], dstOrigin[0], size[0]) &&\n                !isIntersectingAxis(srcOrigin[1], dstOrigin[1], size[1]) &&\n                !isIntersectingAxis(srcOrigin[2], dstOrigin[2], size[2]), () => `when src and dst textures are the same texture, copy boxes must not overlap`, [src.texture, dst.texture]);\n        }\n    });\n    wrapFunctionBefore(GPUCommandEncoder, 'clearBuffer', function ([buffer, offset, size]) {\n        getCommandBufferInfoAndValidateState(this);\n        assertNotDestroyed(buffer);\n        offset = offset ?? 0;\n        size = size ?? buffer.size - offset;\n        assert(s_objToDevice.get(this) === s_objToDevice.get(buffer), 'buffer not from same device as encoder', [buffer, this]);\n        assert(!!(buffer.usage & GPUBufferUsage.COPY_DST), () => `buffer.usage(${bufferUsageToString(buffer.usage)}) must have COPY_DST`, [buffer]);\n        assert(size % 4 === 0, () => `size(${size}) must be multiple of 4`);\n        assert(offset % 4 === 0, () => `offset(${offset}) must be multiple of 4`);\n        assert(offset + size <= buffer.size, () => `offset(${offset}) + size(${size}) must be <= buffer.size(${buffer.size})`);\n    });\n    wrapFunctionBefore(GPUCommandEncoder, 'resolveQuerySet', function ([querySet, firstQuery, queryCount, destination, destinationOffset]) {\n        getCommandBufferInfoAndValidateState(this);\n        assertNotDestroyed(querySet);\n        assertNotDestroyed(destination);\n        const device = s_objToDevice.get(this);\n        assert(s_objToDevice.get(querySet) === device, 'querySet not from same device', [querySet]);\n        assert(s_objToDevice.get(destination) === device, 'destination buffer not from same device', [destination]);\n        assert((destination.usage & GPUBufferUsage.QUERY_RESOLVE) !== 0, () => `destination.usage(${bufferUsageToString(destination.usage)} does not contain QUERY_RESOLVE)`, [destination]);\n        assert(firstQuery < querySet.count, () => `firstQuery(${firstQuery}) out of range for querySet.count(${querySet.count})`);\n        assert(firstQuery + queryCount <= querySet.count, () => `firstQuery(${firstQuery}) + queryCount(${queryCount}) > querySet.count(${querySet.count})`);\n        assert(destinationOffset % 256 === 0, () => `destinationOffset(${destinationOffset}) is not multiple of 256`);\n        assert(destinationOffset + queryCount * 8 <= destination.size, () => `destinationOffset(${destinationOffset}) + queryCount(${queryCount}) * 8 > destination.size(${destination.size})`);\n    });\n\n    console.log('webgpu-debug-helper running');\n\n}));\n//# sourceMappingURL=webgpu-debug-helper.js.map\n"],"names":[],"mappings":"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"}