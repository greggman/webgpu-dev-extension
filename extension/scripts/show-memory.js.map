{"version":3,"file":"show-memory.js","sources":["../../node_modules/webgpu-memory/src/capabilities-info.js","../../node_modules/webgpu-memory/src/webgpu-memory.js","../../src/scripts/show-memory.js"],"sourcesContent":["/* eslint-disable no-sparse-arrays */\n\n/*\nThis file was copied and modified from the WebGPU Conformance Test Suite\nhttps://github.com/gpuweb/cts/blob/main/src/webgpu/capability_info.ts\n\nNote: Changes include adding bytesPerBlock to depth24plus, depth24plus-stencil8\nand depth32-stencil8\n\nCopyright 2019 WebGPU CTS Contributors\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n   3. Neither the name of the copyright holder nor the names of its\n      contributors may be used to endorse or promote products derived from this\n      software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nfunction makeTable(members, defaults, table) {\n  const result = {};\n  for (const [k, v] of Object.entries(table)) {\n    const item = {};\n    for (let i = 0; i < members.length; ++i) {\n      item[members[i]] = v[i] ?? defaults[i];\n    }\n    result[k] = item;\n  }\n  return result;\n}\n\nfunction keysOf(o) {\n  return [...Object.keys(o)];\n}\n\n\n/**\n * Defaults applied to all texture format tables automatically. Used only inside\n * `formatTableWithDefaults`. This ensures keys are never missing, always explicitly `undefined`.\n *\n * All top-level keys must be defined here, or they won't be exposed at all.\n * Documentation is also written here; this makes it propagate through to the end types.\n */\nconst kFormatUniversalDefaults = {\n  /** Texel block width. */\n  blockWidth: undefined,\n  /** Texel block height. */\n  blockHeight: undefined,\n  color: undefined,\n  depth: undefined,\n  stencil: undefined,\n  /**\n   * Info when this format can be used as a color render target. The format may require a feature\n   * to actually be used as a render target. Eg: rg11b10ufloat which requires rg11b10ufloat-renderable\n   * Call {@link isTextureFormatPossiblyUsableAsColorRenderAttachment} before having a device\n   * Call {@link isTextureFormatColorRenderable}(device, format) to find out for a particular device.\n   * Use {@link kPossibleColorRenderableTextureFormats} for params.\n   */\n  colorRender: undefined,\n  /**\n   * Whether the format can possibly be used as a multisample texture. The format may require a\n   * feature to actually multisampled. Eg: rg11b10ufloat which requires rg11b10ufloat-renderable\n   * Call {@link isTextureFormatPossiblyMultisampled} before having a device\n   * Call {@link isTextureFormatMultisampled}(device, format) to find out for a particular device.\n   * Use {@link kPossibleMultisampledTextureFormats} for params.\n   */\n  multisample: undefined,\n  /** Optional feature required to use this format, or `undefined` if none. */\n  feature: undefined,\n  /** The base format for srgb formats. Specified on both srgb and equivalent non-srgb formats. */\n  baseFormat: undefined,\n\n  /** @deprecated Use `.color.bytes`, `.depth.bytes`, or `.stencil.bytes`. */\n  bytesPerBlock: undefined,\n\n  // IMPORTANT:\n  // Add new top-level keys both here and in TextureFormatInfo_TypeCheck.\n} ;\n/**\n * Takes `table` and applies `defaults` to every row, i.e. for each row,\n * `{ ... kUniversalDefaults, ...defaults, ...row }`.\n * This only operates at the first level; it doesn't support defaults in nested objects.\n */\nfunction formatTableWithDefaults({\n  defaults,\n  table,\n}) {\n  return Object.fromEntries(\n    Object.entries(table).map(([k, row]) => [\n      k,\n      { ...kFormatUniversalDefaults, ...defaults, ...row },\n    ])\n  )\n}\n\n/** \"plain color formats\", plus rgb9e5ufloat. */\nconst kRegularTextureFormatInfo = formatTableWithDefaults({\n  defaults: { blockWidth: 1, blockHeight: 1 },\n  table: {\n    // plain, 8 bits per component\n\n    r8unorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 1, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r8snorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r8uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 1, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r8sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 1, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    rg8unorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 2, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg8snorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg8uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg8sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    rgba8unorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n      multisample: true,\n      baseFormat: 'rgba8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'rgba8unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n      multisample: true,\n      baseFormat: 'rgba8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba8snorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba8uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba8sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 1 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    bgra8unorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n      multisample: true,\n      baseFormat: 'bgra8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bgra8unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 1 },\n      multisample: true,\n      baseFormat: 'bgra8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    // plain, 16 bits per component\n\n    r16uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r16sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 2, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r16float: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 2, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    rg16uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg16sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg16float: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 4, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    rgba16uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba16sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba16float: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 2 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    // plain, 32 bits per component\n\n    r32uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: true,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r32sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: true,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    r32float: {\n      color: {\n        type: 'unfilterable-float',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: true,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 4, alignment: 4 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    rg32uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg32sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg32float: {\n      color: {\n        type: 'unfilterable-float',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    rgba32uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 16, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba32sint: {\n      color: {\n        type: 'sint',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 16, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgba32float: {\n      color: {\n        type: 'unfilterable-float',\n        copySrc: true,\n        copyDst: true,\n        storage: true,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 16, alignment: 4 },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    // plain, mixed component width, 32 bits per texel\n\n    rgb10a2uint: {\n      color: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: false, resolve: false, byteCost: 8, alignment: 4 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rgb10a2unorm: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 4 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    rg11b10ufloat: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      colorRender: { blend: true, resolve: true, byteCost: 8, alignment: 4 },\n      multisample: true,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    // packed\n\n    rgb9e5ufloat: {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      multisample: false,\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n  },\n} );\n\n// MAINTENANCE_TODO: Distinguishing \"sized\" and \"unsized\" depth stencil formats doesn't make sense\n// because one aspect can be sized and one can be unsized. This should be cleaned up, but is kept\n// this way during a migration phase.\nconst kSizedDepthStencilFormatInfo = formatTableWithDefaults({\n  defaults: { blockWidth: 1, blockHeight: 1, multisample: true },\n  table: {\n    stencil8: {\n      stencil: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      bytesPerBlock: 1,\n    },\n    depth16unorm: {\n      depth: {\n        type: 'depth',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 2,\n      },\n      bytesPerBlock: 2,\n    },\n    depth32float: {\n      depth: {\n        type: 'depth',\n        copySrc: true,\n        copyDst: false,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      bytesPerBlock: 4,\n    },\n  },\n} );\nconst kUnsizedDepthStencilFormatInfo = formatTableWithDefaults({\n  defaults: { blockWidth: 1, blockHeight: 1, multisample: true },\n  table: {\n    depth24plus: {\n      depth: {\n        type: 'depth',\n        copySrc: false,\n        copyDst: false,\n        storage: false,\n        readWriteStorage: false,\n        bytes: undefined,\n      },\n      bytesPerBlock: 4,\n    },\n    'depth24plus-stencil8': {\n      depth: {\n        type: 'depth',\n        copySrc: false,\n        copyDst: false,\n        storage: false,\n        readWriteStorage: false,\n        bytes: undefined,\n      },\n      stencil: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      bytesPerBlock: 4,\n    },\n    'depth32float-stencil8': {\n      depth: {\n        type: 'depth',\n        copySrc: true,\n        copyDst: false,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 4,\n      },\n      stencil: {\n        type: 'uint',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 1,\n      },\n      feature: 'depth32float-stencil8',\n      bytesPerBlock: 5,\n    },\n  },\n} );\n\nconst kBCTextureFormatInfo = formatTableWithDefaults({\n  defaults: {\n    blockWidth: 4,\n    blockHeight: 4,\n    multisample: false,\n    feature: 'texture-compression-bc',\n  },\n  table: {\n    'bc1-rgba-unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      baseFormat: 'bc1-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc1-rgba-unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      baseFormat: 'bc1-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'bc2-rgba-unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'bc2-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc2-rgba-unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'bc2-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'bc3-rgba-unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'bc3-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc3-rgba-unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'bc3-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'bc4-r-unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc4-r-snorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'bc5-rg-unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc5-rg-snorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'bc6h-rgb-ufloat': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc6h-rgb-float': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'bc7-rgba-unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'bc7-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'bc7-rgba-unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'bc7-rgba-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n  },\n} );\n\nconst kETC2TextureFormatInfo = formatTableWithDefaults({\n  defaults: {\n    blockWidth: 4,\n    blockHeight: 4,\n    multisample: false,\n    feature: 'texture-compression-etc2',\n  },\n  table: {\n    'etc2-rgb8unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      baseFormat: 'etc2-rgb8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'etc2-rgb8unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      baseFormat: 'etc2-rgb8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'etc2-rgb8a1unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      baseFormat: 'etc2-rgb8a1unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'etc2-rgb8a1unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      baseFormat: 'etc2-rgb8a1unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'etc2-rgba8unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'etc2-rgba8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'etc2-rgba8unorm-srgb': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'etc2-rgba8unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'eac-r11unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'eac-r11snorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 8,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'eac-rg11unorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'eac-rg11snorm': {\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n  },\n} );\n\nconst kASTCTextureFormatInfo = formatTableWithDefaults({\n  defaults: {\n    multisample: false,\n    feature: 'texture-compression-astc',\n  },\n  table: {\n    'astc-4x4-unorm': {\n      blockWidth: 4,\n      blockHeight: 4,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-4x4-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-4x4-unorm-srgb': {\n      blockWidth: 4,\n      blockHeight: 4,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-4x4-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-5x4-unorm': {\n      blockWidth: 5,\n      blockHeight: 4,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-5x4-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-5x4-unorm-srgb': {\n      blockWidth: 5,\n      blockHeight: 4,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-5x4-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-5x5-unorm': {\n      blockWidth: 5,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-5x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-5x5-unorm-srgb': {\n      blockWidth: 5,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-5x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-6x5-unorm': {\n      blockWidth: 6,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-6x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-6x5-unorm-srgb': {\n      blockWidth: 6,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-6x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-6x6-unorm': {\n      blockWidth: 6,\n      blockHeight: 6,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-6x6-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-6x6-unorm-srgb': {\n      blockWidth: 6,\n      blockHeight: 6,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-6x6-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-8x5-unorm': {\n      blockWidth: 8,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-8x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-8x5-unorm-srgb': {\n      blockWidth: 8,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-8x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-8x6-unorm': {\n      blockWidth: 8,\n      blockHeight: 6,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-8x6-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-8x6-unorm-srgb': {\n      blockWidth: 8,\n      blockHeight: 6,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-8x6-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-8x8-unorm': {\n      blockWidth: 8,\n      blockHeight: 8,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-8x8-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-8x8-unorm-srgb': {\n      blockWidth: 8,\n      blockHeight: 8,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-8x8-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-10x5-unorm': {\n      blockWidth: 10,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-10x5-unorm-srgb': {\n      blockWidth: 10,\n      blockHeight: 5,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x5-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-10x6-unorm': {\n      blockWidth: 10,\n      blockHeight: 6,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x6-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-10x6-unorm-srgb': {\n      blockWidth: 10,\n      blockHeight: 6,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x6-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-10x8-unorm': {\n      blockWidth: 10,\n      blockHeight: 8,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x8-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-10x8-unorm-srgb': {\n      blockWidth: 10,\n      blockHeight: 8,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x8-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-10x10-unorm': {\n      blockWidth: 10,\n      blockHeight: 10,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x10-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-10x10-unorm-srgb': {\n      blockWidth: 10,\n      blockHeight: 10,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-10x10-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-12x10-unorm': {\n      blockWidth: 12,\n      blockHeight: 10,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-12x10-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-12x10-unorm-srgb': {\n      blockWidth: 12,\n      blockHeight: 10,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-12x10-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n\n    'astc-12x12-unorm': {\n      blockWidth: 12,\n      blockHeight: 12,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-12x12-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n    'astc-12x12-unorm-srgb': {\n      blockWidth: 12,\n      blockHeight: 12,\n      color: {\n        type: 'float',\n        copySrc: true,\n        copyDst: true,\n        storage: false,\n        readWriteStorage: false,\n        bytes: 16,\n      },\n      baseFormat: 'astc-12x12-unorm',\n      /*prettier-ignore*/ get bytesPerBlock() { return this.color.bytes; },\n    },\n  },\n} );\n\n// Definitions for use locally.\n\n// MAINTENANCE_TODO: Consider generating the exports below programmatically by filtering the big list, instead\n// of using these local constants? Requires some type magic though.\n/* prettier-ignore */ const   kCompressedTextureFormatInfo = { ...kBCTextureFormatInfo, ...kETC2TextureFormatInfo, ...kASTCTextureFormatInfo } ;\n/* prettier-ignore */ const        kColorTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kCompressedTextureFormatInfo } ;\n/* prettier-ignore */ const    kEncodableTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo } ;\n/* prettier-ignore */ const        kSizedTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo, ...kCompressedTextureFormatInfo } ;\n/* prettier-ignore */ const        kDepthStencilFormatInfo = { ...kSizedDepthStencilFormatInfo, ...kUnsizedDepthStencilFormatInfo } ;\n/* prettier-ignore */ const kUncompressedTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo, ...kUnsizedDepthStencilFormatInfo } ;\n/* prettier-ignore */ const          kAllTextureFormatInfo = { ...kUncompressedTextureFormatInfo, ...kCompressedTextureFormatInfo } ;\n\n/* prettier-ignore */ export const        kRegularTextureFormats = keysOf(     kRegularTextureFormatInfo);\n/* prettier-ignore */ export const     kSizedDepthStencilFormats = keysOf(  kSizedDepthStencilFormatInfo);\n/* prettier-ignore */ export const   kUnsizedDepthStencilFormats = keysOf(kUnsizedDepthStencilFormatInfo);\n/* prettier-ignore */ export const     kCompressedTextureFormats = keysOf(  kCompressedTextureFormatInfo);\n/* prettier-ignore */ export const   kBCCompressedTextureFormats = keysOf(          kBCTextureFormatInfo);\n/* prettier-ignore */ export const kASTCCompressedTextureFormats = keysOf(        kASTCTextureFormatInfo);\n\n/* prettier-ignore */ export const        kColorTextureFormats = keysOf(       kColorTextureFormatInfo);\n/* prettier-ignore */ export const    kEncodableTextureFormats = keysOf(   kEncodableTextureFormatInfo);\n/* prettier-ignore */ export const        kSizedTextureFormats = keysOf(       kSizedTextureFormatInfo);\n/* prettier-ignore */ export const        kDepthStencilFormats = keysOf(       kDepthStencilFormatInfo);\n/* prettier-ignore */ export const kUncompressedTextureFormats = keysOf(kUncompressedTextureFormatInfo);\n/* prettier-ignore */ export const          kAllTextureFormats = keysOf(         kAllTextureFormatInfo);\n\n\n/**\n * DO NOT EXPORT THIS - functions that need info from this table should use the appropriate\n * method for their needs.\n *\n * For a list of textures formats for test parameters there are:\n *\n * Lists of formats that might require features to be enabled\n * * kPossibleColorRenderableTextureFormats\n * * kPossibleStorageTextureFormats\n * * kPossibleReadWriteStorageTextureFormats\n * * kPossibleMultisampledTextureFormats\n *\n * Lists of formats that end in -srgb\n * * kDifferentBaseFormatTextureFormats  (includes compressed textures)\n * * kDifferentBaseFormatRegularTextureFormats (does not include compressed textures)\n *\n * Formats that require a feature to use at all (mostly compressed formats)\n * * kOptionalTextureFormats\n *\n * Misc\n * * kRegularTextureFormats\n * * kSizedDepthStencilFormats\n * * kUnsizedDepthStencilFormats\n * * kCompressedTextureFormats\n * * kUncompressedTextureFormats\n * * kColorTextureFormats - color formats including compressed and sint/uint\n * * kEncodableTextureFormats - formats that TexelView supports.\n * * kSizedTextureFormats - formats that have a known size (so not depth24plus ...)\n * * kDepthStencilFormats - depth, stencil, depth-stencil\n * * kDepthTextureFormats - depth and depth-stencil\n * * kStencilTextureFormats - stencil and depth-stencil\n * * kAllTextureFormats\n *\n * If one of the list above does not work, add a new one or to filter in beforeAllSubcases you generally want to use\n * You will not know if you can actually use a texture for the given use case until the test runs and has a device.\n *\n * * isTextureFormatPossiblyUsableAsRenderAttachment\n * * isTextureFormatPossiblyUsableAsColorRenderAttachment\n * * isTextureFormatPossiblyMultisampled\n * * isTextureFormatPossiblyStorageReadable\n * * isTextureFormatPossiblyStorageReadWritable\n * * isTextureFormatPossiblyFilterableAsTextureF32\n *\n * These are also usable before or during a test\n *\n * * isColorTextureFormat\n * * isDepthTextureFormat\n * * isStencilTextureFormat\n * * isDepthOrStencilTextureFormat\n * * isEncodableTextureFormat\n * * isRegularTextureFormat\n * * isCompressedFloatTextureFormat\n * * isSintOrUintFormat\n *\n * To skip a test use the `skipIfXXX` tests in `GPUTest` if possible. Otherwise these functions\n * require a device to give a correct answer.\n *\n * * isTextureFormatUsableAsRenderAttachment\n * * isTextureFormatColorRenderable\n * * isTextureFormatResolvable\n * * isTextureFormatBlendable\n * * isTextureFormatMultisampled\n * * isTextureFormatUsableAsStorageFormat\n * * isTextureFormatUsableAsReadWriteStorageTexture\n * * isTextureFormatUsableAsStorageFormatInCreateShaderModule\n *\n * Per-GPUTextureFormat info.\n */\nexport const kTextureFormatInfo = {\n  ...kRegularTextureFormatInfo,\n  ...kSizedDepthStencilFormatInfo,\n  ...kUnsizedDepthStencilFormatInfo,\n  ...kBCTextureFormatInfo,\n  ...kETC2TextureFormatInfo,\n  ...kASTCTextureFormatInfo,\n};\n\n\n// CompressedTextureFormat are unrenderable so filter from RegularTextureFormats for color targets is enough\nexport const kRenderableColorTextureFormats = kRegularTextureFormats.filter(\n  v => kColorTextureFormatInfo[v].renderable\n);\n\n// The formats of GPUTextureFormat for canvas context.\nexport const kCanvasTextureFormats = ['bgra8unorm', 'rgba8unorm', 'rgba16float'];\n","import { kTextureFormatInfo } from './capabilities-info.js';\n\n/**\n * \n * @callback ComputeMemSizeFn\n * @param {any} arg\n * @returns {number} The size in bytes\n */\n\nconst webgpuMemoryIdSymbol = Symbol('webgpu-memory-object-id');\nconst deviceIdToDeviceWeakRef = new Map();\n\n/**\n * @typedef {Object} ObjectInfo\n * @property {WeakRef} ref to object\n * @property {number} id object's id (same as key)\n * @property {number} deviceId object's device\n * @property {string} category\n * @property {number|ComputeMemSizeFn} [size]\n */\n\nlet nextId = 1;\n/** @type {Map<number, ObjectInfo>} */\nconst allWebGPUObjectsById = new Map();\nlet globalRunningTotal = 0;\nlet globalMaxTotal = 0;\n\n/**\n * Start tracking a resource by device\n * @param {GPUDevice} device\n * @param {GPUObjectBase} webgpuObject\n * @param {string} category\n * @param {number|ComputeMemSizeFn} [size]\n */\nfunction addDeviceObject(device, webgpuObject, category, size) {\n  let id = webgpuObject[webgpuMemoryIdSymbol];\n  if (!id) {\n    id = nextId++;\n    webgpuObject[webgpuMemoryIdSymbol] = id;\n  }\n  const deviceId = device[webgpuMemoryIdSymbol];\n  const info = {\n    ref: new WeakRef(webgpuObject),\n    id,\n    deviceId,\n    category,\n    size,\n    // will contain \"oldSize\" if canvas\n  };\n  allWebGPUObjectsById.set(id, info);\n  if (typeof size === 'function') {\n    size = size(webgpuObject);\n    info.oldSize = size;\n  }\n  if (!isNaN(size)) {\n    const deviceInfo = allWebGPUObjectsById.get(deviceId);\n    updateDeviceInfoRunningTotal(deviceInfo, size);\n  }\n}\n\nfunction updateDeviceInfoRunningTotal(deviceInfo, size) {\n  deviceInfo.runningTotal = (deviceInfo.runningTotal ?? 0) + size;\n  deviceInfo.maxTotal = Math.max(deviceInfo.maxTotal ?? 0, deviceInfo.runningTotal);\n  globalRunningTotal = globalRunningTotal + size;\n  globalMaxTotal = Math.max(globalMaxTotal, globalRunningTotal);\n}\n\n/**\n * Start tracking a resource by device\n * @param {GPUDevice} device\n * @param {GPUTexture | GPUBuffer} webgpuObject\n * @param {string} category\n * @property {number|ComputeMemSizeFn} size\n */\nfunction addDeviceMem(device, webgpuObject, category, size) {\n  addDeviceObject(device, webgpuObject, category, size);\n}\n\n/**\n * @param {number} deviceId\n * @returns true if device still exists\n */\nfunction deviceExists(deviceId) {\n  const ref = deviceIdToDeviceWeakRef.get(deviceId);\n  return ref && !!ref.deref();\n}\n\n/**\n * Free an object's memory\n * @param {number} id\n */\nfunction freeObjectById(id, webgpuObject) {\n  const obj = allWebGPUObjectsById.get(id);\n  let size = obj?.size;\n  if (webgpuObject && typeof size === 'function') {\n    size = size(webgpuObject);\n  }\n  if (!isNaN(size)) {\n    const deviceInfo = allWebGPUObjectsById.get(obj.deviceId);\n    if (deviceInfo) {\n      updateDeviceInfoRunningTotal(deviceInfo, -size);\n    }\n  }\n  allWebGPUObjectsById.delete(id);\n}\n\n/**\n * Free the memory used by object.\n * @param {GPUTexture | GPUBuffer} webgpuObject\n * @param {string} category\n */\nfunction freeObject(webgpuObject) {\n  const id = webgpuObject[webgpuMemoryIdSymbol];\n  freeObjectById(id, webgpuObject);\n}\n\n/**\n * @typedef {Object} WebGPUMemoryInfo\n * @property {Object.<string, number>} memory\n * @property {Object.<string, number>} resources\n */\n\n/**\n * Gets WebGPU memory usage. If no device is passed in returns info for all devices.\n *\n * @param {GPUDevice} [device] optional device.\n * @returns {WebGPUMemoryInfo}\n */\nexport function getWebGPUMemoryUsage(device) {\n  const memory = {\n    total: 0,\n    buffer: 0,\n    texture: 0,\n    querySet: 0,\n    canvas: 0,\n    maxTotal: 0,\n  };\n  const resources = {\n    buffer: 0,\n    texture: 0,\n    querySet: 0,\n  };\n  const info = { memory, resources };\n\n  const requestedDeviceId = device && device[webgpuMemoryIdSymbol];\n\n  const idsToDelete = [];\n  for (const [id, {ref, deviceId, category, size, maxTotal}] of allWebGPUObjectsById.entries()) {\n    const webgpuObject = ref.deref();\n    if (!webgpuObject || !deviceExists(deviceId)) {\n      idsToDelete.push(id);\n    } else {\n      if (!requestedDeviceId || deviceId === requestedDeviceId) {\n        resources[category] = (resources[category] || 0) + 1;\n        if (size) {\n          const numBytes = typeof size === 'function' ? size(webgpuObject) : size;\n          memory.total += numBytes;\n          memory[category] += numBytes;\n        }\n        if (category === 'device') {\n          memory.maxTotal += maxTotal;\n        }\n      }\n    }\n  }\n\n  if (!device) {\n    memory.maxTotal = globalMaxTotal;\n  }\n\n  idsToDelete.forEach(id => freeObjectById(id));\n\n  return info;\n}\n\nexport function resetMaxTotal(device) {\n  const devices = device ? [device] : [];\n  let newGlobalMaxTotal = 0;\n  if (!device) {\n    for (const [id, {ref, category}] of allWebGPUObjectsById.entries()) {\n      if (category === 'device') {\n        const webgpuObject = ref.deref();\n        devices.push(webgpuObject);\n      }\n    }\n  }\n\n  for (const device of devices) {\n    const info = getWebGPUMemoryUsage(device);\n    const deviceId = device[webgpuMemoryIdSymbol];\n    const deviceInfo = allWebGPUObjectsById.get(deviceId);\n    if (deviceInfo) {\n      const { total } = info.memory;\n      deviceInfo.maxTotal = total;\n      newGlobalMaxTotal += total;\n    }\n  }\n\n  if (!device) {\n    globalRunningTotal = newGlobalMaxTotal;\n    globalMaxTotal = newGlobalMaxTotal;\n  }\n}\n\n/**\n *\n * @param {GPUTexture} texture\n * @returns {number} approximate number of bytes used by texture.\n */\nfunction computeTextureMemorySize(texture) {\n  const {\n    blockWidth,\n    blockHeight,\n    bytesPerBlock,\n  } = kTextureFormatInfo[texture.format];\n\n  let size = 0;\n  let width = texture.width;\n  let height = texture.height;\n  let depth = texture.depthOrArrayLayers;\n\n  for (let level = 0; level < texture.mipLevelCount; ++level) {\n    const blocksAcross = Math.ceil(width * texture.sampleCount / blockWidth);\n    const blocksDown = Math.ceil(height * texture.sampleCount / blockHeight);\n    const numBlocks = blocksAcross * blocksDown * depth;\n    const bytesUsed = numBlocks * bytesPerBlock;\n    size += bytesUsed;\n    width = Math.max(1, width / 2 | 0);\n    height = Math.max(1, height / 2 | 0);\n    depth = texture.dimension === '3d' ? Math.max(1, depth / 2 | 0) : depth;\n  }\n\n  return size;\n}\n\n/**\n * @param {object} object with method to wrap\n * @param {string} name Name of method to wrap\n * @param {} fn\n */\nfunction wrapFunction(object, name, fn) {\n  const origFn = object.prototype[name];\n  object.prototype[name] = function(...args) {\n    const result = origFn.call(this, ...args);\n    if (result !== undefined && typeof result.then === 'function') {\n      result.then(realResult => fn(this, realResult, ...args));\n    } else {\n      fn(this, result, ...args);\n    }\n    return result;\n  };\n}\n\n/**\n *\n * @param {GPUDevice} device\n * @param {GPUBuffer} buffer\n */\nfunction addBuffer(device, buffer) {\n  const bytesUsed = buffer.size;\n  addDeviceMem(device, buffer, 'buffer', bytesUsed);\n}\n\n/**\n *\n * @param {GPUBuffer} buffer\n */\nfunction removeBuffer(buffer) {\n  freeObject(buffer);\n}\n\n/**\n *\n * @param {GPUDevice} device\n * @param {GPUTexture} texture\n */\nfunction addTexture(device, texture) {\n  const bytesUsed = computeTextureMemorySize(texture);\n  addDeviceMem(device, texture, 'texture', bytesUsed);\n}\n\n/**\n *\n * @param {GPUTexture} texture\n */\nfunction removeTexture(texture) {\n  freeObject(texture);\n}\n\n/**\n * @param {GPUDevice} device\n * @param {GPUQuerySet} querySet\n */\nfunction addQuerySet(device, querySet) {\n  const bytesUsed = querySet.count * 8;\n  addDeviceMem(device, querySet, 'querySet', bytesUsed);\n}\n\n/**\n * @param {GPUQuerySet} querySet\n */\nfunction removeQuerySet(querySet) {\n  freeObject(querySet);\n}\n\nfunction addDevice(adapter, device) {\n  addDeviceMem(device, device, 'device', 0);\n  const id = device[webgpuMemoryIdSymbol];\n  deviceIdToDeviceWeakRef.set(id, new WeakRef(device));\n}\n\nfunction removeDevice(device) {\n  const id = device[webgpuMemoryIdSymbol];\n  deviceIdToDeviceWeakRef.delete(id);\n  freeObject(device);\n}\n\n// assuming there are, in general, 2 textures per canvas.\n// The one being displayed and the one being rendered to\nconst kTexturesPerCanvas = 2;\n\nfunction computeCanvasBytesUsed(context, format) {\n  const {width, height} = context.canvas;\n  return computeTextureMemorySize({\n    format,\n    width,\n    height,\n    depthOrArrayLayers: 1,\n    sampleCount: 1,\n    mipLevelCount: 1,\n    dimension: '2d',\n  }) * kTexturesPerCanvas;\n}\n\nfunction addContext(context, dummy, config) {\n  freeObject(context);\n  const format = config.format;\n  addDeviceMem(config.device, context, 'canvas', (context) => computeCanvasBytesUsed(context, format))\n}\n\nfunction removeContext(context) {\n  freeObject(context);\n}\n\nfunction resizeContext(context) {\n  const id = context[webgpuMemoryIdSymbol];\n  const info = allWebGPUObjectsById.get(id);\n  const deviceInfo = allWebGPUObjectsById.get(info.deviceId);\n  updateDeviceInfoRunningTotal(deviceInfo, -info.oldSize);\n  const size = info.size(context);\n  info.oldSize = size;\n  updateDeviceInfoRunningTotal(deviceInfo, size);\n}\n\nfunction wrapCreationDestroy(factoryClass, objectClass, fnName, category) {\n  wrapFunction(factoryClass, fnName, function(device, object) {\n    addDeviceObject(device, object, category);\n  });\n  if (objectClass.prototype.destroy) {\n    wrapFunction(objectClass, 'destroy', function(object) {\n      freeObject(object);\n    });\n  }\n}\n/* TODO: remove these! */\n/* global GPUAdapter */\n/* global GPUBuffer */\n/* global GPUDevice */\n/* global GPUTexture */\n/* global GPUSampler */\n/* global GPUBindGroup */\n/* global GPUBindGroupLayout */\n/* global GPUPipelineLayout */\n/* global GPUShaderModule */\n/* global GPUComputePipeline */\n/* global GPURenderPipeline */\n/* global GPUComputePipeline */\n/* global GPURenderPipeline */\n///* global GPUCommandEncoder */\n///* global GPURenderBundleEncoder */\n/* global GPUQuerySet */\n\nif (typeof GPUAdapter !== 'undefined') {\n  wrapFunction(GPUAdapter, 'requestDevice', addDevice);\n  wrapFunction(GPUDevice, 'destroy', removeDevice);\n\n  wrapFunction(GPUCanvasContext, 'configure', addContext);\n  wrapFunction(GPUCanvasContext, 'unconfigure', removeContext);\n  wrapFunction(GPUCanvasContext, 'getCurrentTexture', resizeContext)\n\n  wrapFunction(GPUDevice, 'createBuffer', addBuffer);\n  wrapFunction(GPUBuffer, 'destroy', removeBuffer);\n  wrapFunction(GPUDevice, 'createTexture', addTexture);\n  wrapFunction(GPUTexture, 'destroy', removeTexture);\n  wrapFunction(GPUDevice, 'createQuerySet', addQuerySet);\n  wrapFunction(GPUQuerySet, 'destroy', removeQuerySet);\n\n  wrapCreationDestroy(GPUDevice, GPUSampler, 'createSampler', 'sampler');\n  wrapCreationDestroy(GPUDevice, GPUBindGroup, 'createBindGroup', 'bindGroup');\n  wrapCreationDestroy(GPUDevice, GPUBindGroupLayout, 'createBindGroupLayout', 'bindGroupLayout');\n  wrapCreationDestroy(GPUDevice, GPUPipelineLayout, 'createPipelineLayout', 'pipelineLayout');\n  wrapCreationDestroy(GPUDevice, GPUShaderModule, 'createShaderModule', 'shaderModule');\n  wrapCreationDestroy(GPUDevice, GPUComputePipeline, 'createComputePipeline', 'computePipeline');\n  wrapCreationDestroy(GPUDevice, GPURenderPipeline, 'createRenderPipeline', 'renderPipeline');\n  wrapCreationDestroy(GPUDevice, GPUComputePipeline, 'createComputePipelineAsync', 'computePipeline');\n  wrapCreationDestroy(GPUDevice, GPURenderPipeline, 'createRenderPipelineAsync', 'renderPipeline');\n  //wrapCreationDestroy(GPUDevice, GPUCommandEncoder, 'createCommandEncoder', 'commandEncoder');\n  //wrapCreationDestroy(GPUDevice, GPURenderBundleEncoder, 'createRenderBundleEncoder', 'renderBundleEncoder');\n  // problem, no device for this\n  // GPURenderBundleEncoder, 'finish'\n}\n","import { getWebGPUMemoryUsage, resetMaxTotal } from 'webgpu-memory';\n\nif (typeof GPUAdapter !== undefined) {\n  console.log('webgpu-dev-extension: show-memory');\n\n  const shortSize = (function() {\n    const suffixes = ['b', 'k', 'mb', 'gb', 'tb', 'pb'];\n    return function(size) {\n      const suffixNdx = Math.log2(Math.abs(size)) / 10 | 0;\n      const suffix = suffixes[Math.min(suffixNdx, suffixes.length - 1)];\n      const base = 2 ** (suffixNdx * 10);\n      return `${(size / base).toFixed(0)}${suffix}`;\n    };\n  })();\n\n  let baseElem;\n  let summaryContentElem;\n  let infoElem;\n  const deviceRefs = [];\n  let intervalId;\n\n  function checkMemory() {\n    const {memory, resources} = getWebGPUMemoryUsage();\n    const size = shortSize(memory.total);\n    const maxSize = shortSize(memory.maxTotal);\n    summaryContentElem.textContent = `mem: ${size} max: ${maxSize}`;\n    infoElem.textContent = `\\\nmemory:\n${Object.entries(memory).map(([k, v]) => `  ${k}: ${shortSize(v)}`).join('\\n')}\nresources:\n${Object.entries(resources).map(([k, v]) => `  ${k}: ${(v)}`).join('\\n')}\n`\n    checkDeviceRefs();\n  };\n\n  function checkDeviceRefs() {\n    if (intervalId) {\n      if (deviceRefs.length === 0) {\n        clearInterval(intervalId);\n        // console.log('show-memory: pauses');\n      }\n    } else {\n      if (deviceRefs.length > 0) {\n        intervalId = setInterval(checkMemory, 1000);\n        // console.log('show-memory: started');\n        if (!baseElem) {\n          baseElem = document.createElement('details');\n          const summaryElem = document.createElement('summary');\n          infoElem = document.createElement('pre');\n\n          summaryContentElem = document.createElement('span');\n          Object.assign(summaryContentElem.style, {\n            cursor: 'pointer',\n          });\n\n          const resetElem = document.createElement('span')\n          Object.assign(resetElem.style, {\n            marginLeft: '0.5em',\n            cursor: 'pointer',\n            title: 'reset max memory',\n          });\n          resetElem.textContent = '🔄';\n          resetElem.addEventListener('click', e => {\n            e.preventDefault();\n            e.stopPropagation();\n            resetMaxTotal();\n            return false;\n          }, { passive: false });\n\n          baseElem.append(summaryElem);\n          baseElem.append(infoElem);\n          summaryElem.append(summaryContentElem);\n          summaryElem.append(resetElem);\n\n          Object.assign(baseElem.style, {\n            margin: '0',\n            padding: '0.25em',\n            fontSize: '8px',\n            fontFamily: 'monospace',\n            color: '#fff',\n            backgroundColor: 'rgba(0,0,0,0.8)',\n            position: 'fixed',\n            left: '0',\n            bottom: '0',\n            zIndex: 1000000,\n          });\n          document.documentElement.append(baseElem);\n        }\n      }\n    }\n  }\n\n  GPUAdapter.prototype.requestDevice = (function(origFn) {\n    return async function(...args) {\n      const device = await origFn.call(this, ...args);\n      if (device) {\n        deviceRefs.push(new WeakRef(device));\n        checkDeviceRefs();\n      }\n      return device;\n    };\n  })(GPUAdapter.prototype.requestDevice);\n\n  GPUDevice.prototype.destroy = (function(origFn) {\n    return async function(...args) {\n      origFn.call(this, ...args);\n      const ndx = deviceRefs.findIndex(ref => ref.deref() === this);\n      if (ndx >= 0) {\n        deviceRefs.splice(ndx, 1);\n        checkDeviceRefs();\n      }\n    };\n  })(GPUDevice.prototype.destroy);\n\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1]}